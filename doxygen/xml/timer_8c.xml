<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="timer_8c" kind="file">
    <compoundname>timer.c</compoundname>
    <includes refid="timer_8h" local="yes">timer.h</includes>
    <incdepgraph>
      <node id="634">
        <label>nvic.h</label>
        <link refid="nvic_8h"/>
        <childnode refid="629" relation="include">
        </childnode>
        <childnode refid="631" relation="include">
        </childnode>
      </node>
      <node id="633">
        <label>rcc.h</label>
        <link refid="rcc_8h"/>
        <childnode refid="629" relation="include">
        </childnode>
      </node>
      <node id="630">
        <label>stm32.h</label>
        <link refid="stm32_8h"/>
      </node>
      <node id="629">
        <label>libmaple_types.h</label>
        <link refid="libmaple__types_8h"/>
      </node>
      <node id="628">
        <label>libmaple.h</label>
        <link refid="libmaple_8h"/>
        <childnode refid="629" relation="include">
        </childnode>
        <childnode refid="630" relation="include">
        </childnode>
        <childnode refid="631" relation="include">
        </childnode>
        <childnode refid="632" relation="include">
        </childnode>
      </node>
      <node id="635">
        <label>bitband.h</label>
        <link refid="bitband_8h"/>
        <childnode refid="629" relation="include">
        </childnode>
      </node>
      <node id="626">
        <label>libmaple/timer.c</label>
        <link refid="timer.c"/>
        <childnode refid="627" relation="include">
        </childnode>
      </node>
      <node id="627">
        <label>timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="628" relation="include">
        </childnode>
        <childnode refid="633" relation="include">
        </childnode>
        <childnode refid="634" relation="include">
        </childnode>
        <childnode refid="635" relation="include">
        </childnode>
      </node>
      <node id="632">
        <label>delay.h</label>
        <link refid="delay_8h"/>
        <childnode refid="629" relation="include">
        </childnode>
        <childnode refid="630" relation="include">
        </childnode>
      </node>
      <node id="631">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="629" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="timer_8c_1ab6015c4561ec136211b7c2622aa60046" prot="public" static="no">
        <name>NR_ADV_HANDLERS</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="41" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="timer_8c_1aa17882bc687075fd6c5b6f864d93edb5" prot="public" static="no">
        <name>NR_GEN_HANDLERS</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="43" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="timer_8c_1a2d9cd40b2a1cba45ffd1b8dfd3788207" prot="public" static="no">
        <name>NR_BAS_HANDLERS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="45" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="timer_8c_1a8362544727f07009c2cdfd3ef11fc04d" prot="public" static="no">
        <name>handle_irq</name>
        <param><defname>dier_sr</defname></param>
        <param><defname>irq_mask</defname></param>
        <param><defname>handlers</defname></param>
        <param><defname>iid</defname></param>
        <param><defname>handled_irq</defname></param>
        <initializer>do {  \
        if ((dier_sr) &amp; (irq_mask)) {                                   \
            void (*__handler)(void) = (handlers)[iid];                  \
            if (__handler) {                                            \
                __handler();                                            \
                handled_irq |= (irq_mask);                              \
            }                                                           \
        }                                                               \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="341" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="333" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="timer_8c_1a5178a1ff930e66934ee26c659c2ebe0c" prot="public" static="yes" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref></type>
        <definition>timer_dev timer1</definition>
        <argsstring></argsstring>
        <name>timer1</name>
        <initializer> {
    .regs         = { .adv = <ref refid="timer_8h_1a7a4bd01d91a70285f0bec70f4e9e88bb" kindref="member">TIMER1_BASE</ref> },
    .clk_id       = RCC_TIMER1,
    .type         = <ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1abba89a1a07ef60a754d2d552e5b4309c" kindref="member">TIMER_ADVANCED</ref>,
    .handlers     = { [NR_ADV_HANDLERS - 1] = 0 },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="52" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1a9e5364c45a25fc4193cdc4be3d55a721" prot="public" static="no" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
        <definition>timer_dev* TIMER1</definition>
        <argsstring></argsstring>
        <name>TIMER1</name>
        <initializer> &amp;timer1</initializer>
        <briefdescription>
<para>Timer 1 device (advanced) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="54" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1a87e571865a5053e83443d593081f9d95" prot="public" static="yes" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref></type>
        <definition>timer_dev timer2</definition>
        <argsstring></argsstring>
        <name>timer2</name>
        <initializer> {
    .regs         = { .gen = <ref refid="timer_8h_1a933376d74e94dae8f42e17c09bd91faa" kindref="member">TIMER2_BASE</ref> },
    .clk_id       = RCC_TIMER2,
    .type         = <ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a27c4f5af325b3be7e1d576e709956742" kindref="member">TIMER_GENERAL</ref>,
    .handlers     = { [NR_GEN_HANDLERS - 1] = 0 },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="61" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1a8a772ced952a8cca95650db02e44ecc9" prot="public" static="no" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
        <definition>timer_dev* TIMER2</definition>
        <argsstring></argsstring>
        <name>TIMER2</name>
        <initializer> &amp;timer2</initializer>
        <briefdescription>
<para>Timer 2 device (general-purpose) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="63" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1a5beca5990dc35a4fa399f9733d7b4b8a" prot="public" static="yes" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref></type>
        <definition>timer_dev timer3</definition>
        <argsstring></argsstring>
        <name>timer3</name>
        <initializer> {
    .regs         = { .gen = <ref refid="timer_8h_1a2bcbc0fe8296511a1a9d12caff242819" kindref="member">TIMER3_BASE</ref> },
    .clk_id       = RCC_TIMER3,
    .type         = <ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a27c4f5af325b3be7e1d576e709956742" kindref="member">TIMER_GENERAL</ref>,
    .handlers     = { [NR_GEN_HANDLERS - 1] = 0 },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="70" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1ae1f111c61f5f8a279d1dde23436e978c" prot="public" static="no" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
        <definition>timer_dev* TIMER3</definition>
        <argsstring></argsstring>
        <name>TIMER3</name>
        <initializer> &amp;timer3</initializer>
        <briefdescription>
<para>Timer 3 device (general-purpose) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="72" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1ab5ceec2df3dc0c87fd8e630c1355c14e" prot="public" static="yes" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref></type>
        <definition>timer_dev timer4</definition>
        <argsstring></argsstring>
        <name>timer4</name>
        <initializer> {
    .regs         = { .gen = <ref refid="timer_8h_1a3d3c56ae603d1285c29871a81dc25e89" kindref="member">TIMER4_BASE</ref> },
    .clk_id       = RCC_TIMER4,
    .type         = <ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a27c4f5af325b3be7e1d576e709956742" kindref="member">TIMER_GENERAL</ref>,
    .handlers     = { [NR_GEN_HANDLERS - 1] = 0 },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="79" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1ac36ee49512ce9d48d06391dddb9e92e6" prot="public" static="no" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
        <definition>timer_dev* TIMER4</definition>
        <argsstring></argsstring>
        <name>TIMER4</name>
        <initializer> &amp;timer4</initializer>
        <briefdescription>
<para>Timer 4 device (general-purpose) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="81" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1a2f0c4696c9505beb360728ce3bdcf86c" prot="public" static="yes" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref></type>
        <definition>timer_dev timer5</definition>
        <argsstring></argsstring>
        <name>timer5</name>
        <initializer> {
    .regs         = { .gen = <ref refid="timer_8h_1a76cd93576c17923d6397ccfea12e695f" kindref="member">TIMER5_BASE</ref> },
    .clk_id       = RCC_TIMER5,
    .type         = <ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a27c4f5af325b3be7e1d576e709956742" kindref="member">TIMER_GENERAL</ref>,
    .handlers     = { [NR_GEN_HANDLERS - 1] = 0 },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="89" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1ac0cdd6856cbe695f15aa7e370889bd85" prot="public" static="no" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
        <definition>timer_dev* TIMER5</definition>
        <argsstring></argsstring>
        <name>TIMER5</name>
        <initializer> &amp;timer5</initializer>
        <briefdescription>
<para>Timer 5 device (general-purpose) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="91" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1ad7906c800152ed59a6d8f907e30ca275" prot="public" static="yes" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref></type>
        <definition>timer_dev timer6</definition>
        <argsstring></argsstring>
        <name>timer6</name>
        <initializer> {
    .regs         = { .bas = <ref refid="timer_8h_1a719e1b3ece82ede702b87c3895341302" kindref="member">TIMER6_BASE</ref> },
    .clk_id       = RCC_TIMER6,
    .type         = <ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a9b4966a5ed291837d0112d0d0dc9956e" kindref="member">TIMER_BASIC</ref>,
    .handlers     = { [NR_BAS_HANDLERS - 1] = 0 },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="98" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1aba898f32e58b1774e48528c028979864" prot="public" static="no" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
        <definition>timer_dev* TIMER6</definition>
        <argsstring></argsstring>
        <name>TIMER6</name>
        <initializer> &amp;timer6</initializer>
        <briefdescription>
<para>Timer 6 device (basic) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="100" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1a8b036b687bd699c9ca9c12b7778cf6d3" prot="public" static="yes" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref></type>
        <definition>timer_dev timer7</definition>
        <argsstring></argsstring>
        <name>timer7</name>
        <initializer> {
    .regs         = { .bas = <ref refid="timer_8h_1ae72b467b9548154db3d0dc81e81565bb" kindref="member">TIMER7_BASE</ref> },
    .clk_id       = RCC_TIMER7,
    .type         = <ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a9b4966a5ed291837d0112d0d0dc9956e" kindref="member">TIMER_BASIC</ref>,
    .handlers     = { [NR_BAS_HANDLERS - 1] = 0 },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="107" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1ac991071e825b096edfc0a28957a0184c" prot="public" static="no" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
        <definition>timer_dev* TIMER7</definition>
        <argsstring></argsstring>
        <name>TIMER7</name>
        <initializer> &amp;timer7</initializer>
        <briefdescription>
<para>Timer 7 device (basic) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="109" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1a980bfbac183bb6100658bf9eb3101870" prot="public" static="yes" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref></type>
        <definition>timer_dev timer8</definition>
        <argsstring></argsstring>
        <name>timer8</name>
        <initializer> {
    .regs         = { .adv = <ref refid="timer_8h_1a8a0b5559af4cd58c1a92f90e742d302a" kindref="member">TIMER8_BASE</ref> },
    .clk_id       = RCC_TIMER8,
    .type         = <ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1abba89a1a07ef60a754d2d552e5b4309c" kindref="member">TIMER_ADVANCED</ref>,
    .handlers     = { [NR_ADV_HANDLERS - 1] = 0 },
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="116" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timer_8c_1add5719c18577816da5a0937643c73655" prot="public" static="no" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
        <definition>timer_dev* TIMER8</definition>
        <argsstring></argsstring>
        <name>TIMER8</name>
        <initializer> &amp;timer8</initializer>
        <briefdescription>
<para>Timer 8 device (advanced) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="118" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="timer_8c_1a7b8e93418043f8d3f140bea757bb57b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void disable_channel</definition>
        <argsstring>(timer_dev *dev, uint8 channel)</argsstring>
        <name>disable_channel</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="125" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="404" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1ac5a19dba6508473464f1a374a1da4612" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void pwm_mode</definition>
        <argsstring>(timer_dev *dev, uint8 channel)</argsstring>
        <name>pwm_mode</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="126" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="409" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a0d73c0dc6060c72c1ef767c814d33e91" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void output_compare_mode</definition>
        <argsstring>(timer_dev *dev, uint8 channel)</argsstring>
        <name>output_compare_mode</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="127" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="415" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1ab40c6ef6d811002883c8ea31ae65a2fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void enable_irq</definition>
        <argsstring>(timer_dev *dev, uint8 interrupt)</argsstring>
        <name>enable_irq</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8</type>
          <declname>interrupt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="129"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1af81de5fe197902422475d88556653f14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timer_init</definition>
        <argsstring>(timer_dev *dev)</argsstring>
        <name>timer_init</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Initialize a timer, and reset its register map. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer to initialize </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="135" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1afe23911cb1a5cc945baa25caed6a724f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timer_disable</definition>
        <argsstring>(timer_dev *dev)</argsstring>
        <name>timer_disable</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Disable a timer. </para>        </briefdescription>
        <detaileddescription>
<para>The timer will stop counting, all DMA requests and interrupts will be disabled, and no state changes will be output.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer to disable. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="148" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="148" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a471f66c82b67c3529845f880bf75823b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timer_set_mode</definition>
        <argsstring>(timer_dev *dev, uint8 channel, timer_mode mode)</argsstring>
        <name>timer_set_mode</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="timer_8h_1a28110292f2481f7b44d1517fb4ce3c15" kindref="member">timer_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Sets the mode of an individual timer channel. </para>        </briefdescription>
        <detaileddescription>
<para>Note that not all timers can be configured in every mode. For example, basic timers cannot be configured to output compare mode. Be sure to use a timer which is appropriate for the mode you want.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer whose channel mode to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Relevant channel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>New timer mode for channel </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="172" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="172" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a8bdc7cae7d104e6e90873ad4055db77c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timer_foreach</definition>
        <argsstring>(void(*fn)(timer_dev *))</argsstring>
        <name>timer_foreach</name>
        <param>
          <type>void(*)(<ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *)</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
<para>Call a function on timer devices. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Function to call on each timer device. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="197" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="197" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a022e444b1be2b3a47f598d16b0386f95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timer_attach_interrupt</definition>
        <argsstring>(timer_dev *dev, uint8 interrupt, voidFuncPtr handler)</argsstring>
        <name>timer_attach_interrupt</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8</type>
          <declname>interrupt</declname>
        </param>
        <param>
          <type>voidFuncPtr</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Attach a timer interrupt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interrupt</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt number to attach to; this may be any timer_interrupt_id or timer_channel value appropriate for the timer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Handler to attach to the given interrupt. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119" kindref="member">timer_interrupt_id</ref> </para><simplesectsep/><para><ref refid="timer_8h_1a59cf27ab194b377006b4dc9086df6328" kindref="member">timer_channel</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="222" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="220" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a821dbe60f78dd6e022d3a56d080589d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void timer_detach_interrupt</definition>
        <argsstring>(timer_dev *dev, uint8 interrupt)</argsstring>
        <name>timer_detach_interrupt</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>uint8</type>
          <declname>interrupt</declname>
        </param>
        <briefdescription>
<para>Detach a timer interrupt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer device </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interrupt</parametername>
</parameternamelist>
<parameterdescription>
<para>Interrupt number to detach; this may be any timer_interrupt_id or timer_channel value appropriate for the timer. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119" kindref="member">timer_interrupt_id</ref> </para><simplesectsep/><para><ref refid="timer_8h_1a59cf27ab194b377006b4dc9086df6328" kindref="member">timer_channel</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="237" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a3a58b51f74fc7daa6d935ecc765021cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dispatch_adv_brk</definition>
        <argsstring>(timer_dev *dev)</argsstring>
        <name>dispatch_adv_brk</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="246" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="343" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a2b27d6260849baa36474fce6ee19e09e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dispatch_adv_up</definition>
        <argsstring>(timer_dev *dev)</argsstring>
        <name>dispatch_adv_up</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="247" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="347" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a62d844bae9fe8d9c5a25ee9bdec46561" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dispatch_adv_trg_com</definition>
        <argsstring>(timer_dev *dev)</argsstring>
        <name>dispatch_adv_trg_com</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="248" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="351" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a653b86b5e83358ff294e09afa624b974" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dispatch_adv_cc</definition>
        <argsstring>(timer_dev *dev)</argsstring>
        <name>dispatch_adv_cc</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="249" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="366" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a0efd9b41be732fc2d629b1cdc95e8022" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dispatch_general</definition>
        <argsstring>(timer_dev *dev)</argsstring>
        <name>dispatch_general</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="250" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="380" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a53d51860a8a29d590dc323d744499d6d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dispatch_basic</definition>
        <argsstring>(timer_dev *dev)</argsstring>
        <name>dispatch_basic</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="251" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="396" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1ababed039de21c1ba367869db713b479c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __irq_tim1_brk</definition>
        <argsstring>(void)</argsstring>
        <name>__irq_tim1_brk</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="253" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1aad9bfd5468e79581ec7aac4dd1fff772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __irq_tim1_up</definition>
        <argsstring>(void)</argsstring>
        <name>__irq_tim1_up</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="257" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="257" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a4171e054a9f28496f539a5817a307e92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __irq_tim1_trg_com</definition>
        <argsstring>(void)</argsstring>
        <name>__irq_tim1_trg_com</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="261" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="261" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a8b7051ae584fdc50c39451ce719f9b43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __irq_tim1_cc</definition>
        <argsstring>(void)</argsstring>
        <name>__irq_tim1_cc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="265" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="265" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a302a78b5acc85064854c0d6e0c783c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __irq_tim2</definition>
        <argsstring>(void)</argsstring>
        <name>__irq_tim2</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="269" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="269" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1af76bcf4ca451e0003bafd954e092fbc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __irq_tim3</definition>
        <argsstring>(void)</argsstring>
        <name>__irq_tim3</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="273" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="273" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1ac0d7f25e0d635877e5e3178f57e41bb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __irq_tim4</definition>
        <argsstring>(void)</argsstring>
        <name>__irq_tim4</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="277" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="277" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a07069dc89721e79bdcd8eddd1ce9735b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __irq_tim5</definition>
        <argsstring>(void)</argsstring>
        <name>__irq_tim5</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="283" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="283" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a0dc596143104bec450af36fde2ffb6a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __irq_tim6</definition>
        <argsstring>(void)</argsstring>
        <name>__irq_tim6</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="287" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="287" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1ad8dda43995d6479182b2061c3292d829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __irq_tim7</definition>
        <argsstring>(void)</argsstring>
        <name>__irq_tim7</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="291" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="291" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1ac1a5bc425e3b56fe4360a52438c95abc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __irq_tim8_brk</definition>
        <argsstring>(void)</argsstring>
        <name>__irq_tim8_brk</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="295" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="295" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a3fd9936ed92a01bf27667bae90e9c5be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __irq_tim8_up</definition>
        <argsstring>(void)</argsstring>
        <name>__irq_tim8_up</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="299" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="299" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1aca643617789475e3cc69efdf6357261a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __irq_tim8_trg_com</definition>
        <argsstring>(void)</argsstring>
        <name>__irq_tim8_trg_com</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="303" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="303" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a6f3527f950de52def8372c55df539dfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __irq_tim8_cc</definition>
        <argsstring>(void)</argsstring>
        <name>__irq_tim8_cc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="307" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="307" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a41c0768b1959aad30fe6bcb502c0e5b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void dispatch_single_irq</definition>
        <argsstring>(timer_dev *dev, timer_interrupt_id iid, uint32 irq_mask)</argsstring>
        <name>dispatch_single_irq</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119" kindref="member">timer_interrupt_id</ref></type>
          <declname>iid</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>irq_mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="323" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="321" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a5cae780a2cc4da94ec2d65dd3132bf13" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void enable_advanced_irq</definition>
        <argsstring>(timer_dev *dev, timer_interrupt_id id)</argsstring>
        <name>enable_advanced_irq</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119" kindref="member">timer_interrupt_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="420" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="431" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1a14c581d341007e63fc224e6719c41c39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void enable_nonmuxed_irq</definition>
        <argsstring>(timer_dev *dev)</argsstring>
        <name>enable_nonmuxed_irq</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="421" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="454" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="timer_8c_1ad87ac29328bf0e02c09d86edcf9af9ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void enable_irq</definition>
        <argsstring>(timer_dev *dev, timer_interrupt_id iid)</argsstring>
        <name>enable_irq</name>
        <param>
          <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119" kindref="member">timer_interrupt_id</ref></type>
          <declname>iid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c" line="423" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/timer.c" bodystart="423" bodyend="429"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>New-style timer interface. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marti Bolivar &lt;<ulink url="mailto:mbolivar@leaflabs.com">mbolivar@leaflabs.com</ulink>&gt; </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2011<sp/>LeafLabs,<sp/>LLC.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timer_8h" kindref="compound" tooltip="New-style timer interface.">timer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Just<sp/>like<sp/>the<sp/>corresponding<sp/>DIER<sp/>bits:</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>[0]<sp/>=<sp/>Update<sp/>handler;</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>[1,2,3,4]<sp/>=<sp/>capture/compare<sp/>1,2,3,4<sp/>handlers,<sp/>respectively;</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>[5]<sp/>=<sp/>COM;</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>[6]<sp/>=<sp/>TRG;</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>[7]<sp/>=<sp/>BRK.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NR_ADV_HANDLERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Update,<sp/>capture/compare<sp/>1,2,3,4;<sp/>&lt;junk&gt;;<sp/>trigger.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NR_GEN_HANDLERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Update<sp/>only.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NR_BAS_HANDLERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>timer1<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>.<ref refid="uniontimer__reg__map_1ab7c3758fd5e57ae6dc22ec12984f82be" kindref="member" tooltip="Advanced register map.">adv</ref><sp/>=<sp/><ref refid="timer_8h_1a7a4bd01d91a70285f0bec70f4e9e88bb" kindref="member" tooltip="Timer 1 register map base pointer.">TIMER1_BASE</ref><sp/>},</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>.clk_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RCC_TIMER1,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>.type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1abba89a1a07ef60a754d2d552e5b4309c" kindref="member" tooltip="Advanced type.">TIMER_ADVANCED</ref>,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>.handlers<sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>[NR_ADV_HANDLERS<sp/>-<sp/>1]<sp/>=<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54" refid="timer_8h_1a9e5364c45a25fc4193cdc4be3d55a721" refkind="member"><highlight class="normal"><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*<ref refid="timer_8c_1a9e5364c45a25fc4193cdc4be3d55a721" kindref="member" tooltip="Timer 1 device (advanced)">TIMER1</ref><sp/>=<sp/>&amp;timer1;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>timer2<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>.<ref refid="uniontimer__reg__map_1ac89de7c84a0ed7d1fcfeadb1f4a3d925" kindref="member" tooltip="General purpose register map.">gen</ref><sp/>=<sp/><ref refid="timer_8h_1a933376d74e94dae8f42e17c09bd91faa" kindref="member" tooltip="Timer 2 register map base pointer.">TIMER2_BASE</ref><sp/>},</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>.clk_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RCC_TIMER2,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>.type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a27c4f5af325b3be7e1d576e709956742" kindref="member" tooltip="General purpose type.">TIMER_GENERAL</ref>,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>.handlers<sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>[NR_GEN_HANDLERS<sp/>-<sp/>1]<sp/>=<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63" refid="timer_8h_1a8a772ced952a8cca95650db02e44ecc9" refkind="member"><highlight class="normal"><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*<ref refid="timer_8c_1a8a772ced952a8cca95650db02e44ecc9" kindref="member" tooltip="Timer 2 device (general-purpose)">TIMER2</ref><sp/>=<sp/>&amp;timer2;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>timer3<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>.<ref refid="uniontimer__reg__map_1ac89de7c84a0ed7d1fcfeadb1f4a3d925" kindref="member" tooltip="General purpose register map.">gen</ref><sp/>=<sp/><ref refid="timer_8h_1a2bcbc0fe8296511a1a9d12caff242819" kindref="member" tooltip="Timer 3 register map base pointer.">TIMER3_BASE</ref><sp/>},</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>.clk_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RCC_TIMER3,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>.type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a27c4f5af325b3be7e1d576e709956742" kindref="member" tooltip="General purpose type.">TIMER_GENERAL</ref>,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>.handlers<sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>[NR_GEN_HANDLERS<sp/>-<sp/>1]<sp/>=<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72" refid="timer_8h_1ae1f111c61f5f8a279d1dde23436e978c" refkind="member"><highlight class="normal"><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*<ref refid="timer_8c_1ae1f111c61f5f8a279d1dde23436e978c" kindref="member" tooltip="Timer 3 device (general-purpose)">TIMER3</ref><sp/>=<sp/>&amp;timer3;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>timer4<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>.<ref refid="uniontimer__reg__map_1ac89de7c84a0ed7d1fcfeadb1f4a3d925" kindref="member" tooltip="General purpose register map.">gen</ref><sp/>=<sp/><ref refid="timer_8h_1a3d3c56ae603d1285c29871a81dc25e89" kindref="member" tooltip="Timer 4 register map base pointer.">TIMER4_BASE</ref><sp/>},</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>.clk_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RCC_TIMER4,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>.type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a27c4f5af325b3be7e1d576e709956742" kindref="member" tooltip="General purpose type.">TIMER_GENERAL</ref>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>.handlers<sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>[NR_GEN_HANDLERS<sp/>-<sp/>1]<sp/>=<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81" refid="timer_8h_1ac36ee49512ce9d48d06391dddb9e92e6" refkind="member"><highlight class="normal"><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*<ref refid="timer_8c_1ac36ee49512ce9d48d06391dddb9e92e6" kindref="member" tooltip="Timer 4 device (general-purpose)">TIMER4</ref><sp/>=<sp/>&amp;timer4;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32_HIGH_DENSITY</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>timer5<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>.<ref refid="uniontimer__reg__map_1ac89de7c84a0ed7d1fcfeadb1f4a3d925" kindref="member" tooltip="General purpose register map.">gen</ref><sp/>=<sp/><ref refid="timer_8h_1a76cd93576c17923d6397ccfea12e695f" kindref="member" tooltip="Timer 5 register map base pointer.">TIMER5_BASE</ref><sp/>},</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>.clk_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RCC_TIMER5,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>.type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a27c4f5af325b3be7e1d576e709956742" kindref="member" tooltip="General purpose type.">TIMER_GENERAL</ref>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>.handlers<sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>[NR_GEN_HANDLERS<sp/>-<sp/>1]<sp/>=<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91" refid="timer_8h_1ac0cdd6856cbe695f15aa7e370889bd85" refkind="member"><highlight class="normal"><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*<ref refid="timer_8c_1ac0cdd6856cbe695f15aa7e370889bd85" kindref="member" tooltip="Timer 5 device (general-purpose)">TIMER5</ref><sp/>=<sp/>&amp;timer5;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>timer6<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>.<ref refid="uniontimer__reg__map_1a8ab08c73b8d4bb82c6a422e88fbde9b9" kindref="member" tooltip="Basic register map.">bas</ref><sp/>=<sp/><ref refid="timer_8h_1a719e1b3ece82ede702b87c3895341302" kindref="member" tooltip="Timer 6 register map base pointer.">TIMER6_BASE</ref><sp/>},</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>.clk_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RCC_TIMER6,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>.type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a9b4966a5ed291837d0112d0d0dc9956e" kindref="member" tooltip="Basic type.">TIMER_BASIC</ref>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>.handlers<sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>[NR_BAS_HANDLERS<sp/>-<sp/>1]<sp/>=<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="98"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100" refid="timer_8h_1aba898f32e58b1774e48528c028979864" refkind="member"><highlight class="normal"><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*<ref refid="timer_8c_1aba898f32e58b1774e48528c028979864" kindref="member" tooltip="Timer 6 device (basic)">TIMER6</ref><sp/>=<sp/>&amp;timer6;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>timer7<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>.<ref refid="uniontimer__reg__map_1a8ab08c73b8d4bb82c6a422e88fbde9b9" kindref="member" tooltip="Basic register map.">bas</ref><sp/>=<sp/><ref refid="timer_8h_1ae72b467b9548154db3d0dc81e81565bb" kindref="member" tooltip="Timer 7 register map base pointer.">TIMER7_BASE</ref><sp/>},</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>.clk_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RCC_TIMER7,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>.type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a9b4966a5ed291837d0112d0d0dc9956e" kindref="member" tooltip="Basic type.">TIMER_BASIC</ref>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>.handlers<sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>[NR_BAS_HANDLERS<sp/>-<sp/>1]<sp/>=<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109" refid="timer_8h_1ac991071e825b096edfc0a28957a0184c" refkind="member"><highlight class="normal"><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*<ref refid="timer_8c_1ac991071e825b096edfc0a28957a0184c" kindref="member" tooltip="Timer 7 device (basic)">TIMER7</ref><sp/>=<sp/>&amp;timer7;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>timer8<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>.<ref refid="uniontimer__reg__map_1ab7c3758fd5e57ae6dc22ec12984f82be" kindref="member" tooltip="Advanced register map.">adv</ref><sp/>=<sp/><ref refid="timer_8h_1a8a0b5559af4cd58c1a92f90e742d302a" kindref="member" tooltip="Timer 8 register map base pointer.">TIMER8_BASE</ref><sp/>},</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>.clk_id<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>RCC_TIMER8,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>.type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1abba89a1a07ef60a754d2d552e5b4309c" kindref="member" tooltip="Advanced type.">TIMER_ADVANCED</ref>,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>.handlers<sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>[NR_ADV_HANDLERS<sp/>-<sp/>1]<sp/>=<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="118" refid="timer_8h_1add5719c18577816da5a0937643c73655" refkind="member"><highlight class="normal"><ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*<ref refid="timer_8c_1add5719c18577816da5a0937643c73655" kindref="member" tooltip="Timer 8 device (advanced)">TIMER8</ref><sp/>=<sp/>&amp;timer8;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>Convenience<sp/>routines</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>disable_channel(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev,<sp/>uint8<sp/>channel);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pwm_mode(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev,<sp/>uint8<sp/>channel);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>output_compare_mode(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev,<sp/>uint8<sp/>channel);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enable_irq(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev,<sp/>uint8<sp/>interrupt);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="timer_8h_1af81de5fe197902422475d88556653f14" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timer_8c_1af81de5fe197902422475d88556653f14" kindref="member" tooltip="Initialize a timer, and reset its register map.">timer_init</ref>(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>rcc_clk_enable(dev-&gt;<ref refid="structtimer__dev_1a9f76fb96b4ee0e2081b81cd859475d1f" kindref="member" tooltip="RCC clock information.">clk_id</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>rcc_reset_dev(dev-&gt;<ref refid="structtimer__dev_1a9f76fb96b4ee0e2081b81cd859475d1f" kindref="member" tooltip="RCC clock information.">clk_id</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="timer_8h_1afe23911cb1a5cc945baa25caed6a724f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timer_8c_1afe23911cb1a5cc945baa25caed6a724f" kindref="member" tooltip="Disable a timer.">timer_disable</ref>(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>(dev-&gt;<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref>).bas-&gt;CR1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>(dev-&gt;<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref>).bas-&gt;DIER<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structtimer__dev_1a178dad71538821d7119ba07d209100c6" kindref="member" tooltip="Timer&amp;#39;s type.">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1abba89a1a07ef60a754d2d552e5b4309c" kindref="member" tooltip="Advanced type.">TIMER_ADVANCED</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fall-through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a27c4f5af325b3be7e1d576e709956742" kindref="member" tooltip="General purpose type.">TIMER_GENERAL</ref>:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dev-&gt;<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref>).gen-&gt;CCER<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a9b4966a5ed291837d0112d0d0dc9956e" kindref="member" tooltip="Basic type.">TIMER_BASIC</ref>:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="timer_8h_1a471f66c82b67c3529845f880bf75823b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timer_8c_1a471f66c82b67c3529845f880bf75823b" kindref="member" tooltip="Sets the mode of an individual timer channel.">timer_set_mode</ref>(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev,<sp/>uint8<sp/>channel,<sp/><ref refid="timer_8h_1a28110292f2481f7b44d1517fb4ce3c15" kindref="member" tooltip="Used to configure the behavior of a timer channel.">timer_mode</ref><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FAULT(channel<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>channel<sp/>&lt;=<sp/>4);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO<sp/>decide<sp/>about<sp/>the<sp/>basic<sp/>timers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(dev-&gt;<ref refid="structtimer__dev_1a178dad71538821d7119ba07d209100c6" kindref="member" tooltip="Timer&amp;#39;s type.">type</ref><sp/>!=<sp/><ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a9b4966a5ed291837d0112d0d0dc9956e" kindref="member" tooltip="Basic type.">TIMER_BASIC</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structtimer__dev_1a178dad71538821d7119ba07d209100c6" kindref="member" tooltip="Timer&amp;#39;s type.">type</ref><sp/>==<sp/><ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1a9b4966a5ed291837d0112d0d0dc9956e" kindref="member" tooltip="Basic type.">TIMER_BASIC</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timer_8h_1a28110292f2481f7b44d1517fb4ce3c15a15790af51a5f2d1a5554651b106085a4" kindref="member" tooltip="In this mode, the timer stops counting, channel interrupts are detached, and no state changes are out...">TIMER_DISABLED</ref>:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>disable_channel(dev,<sp/>channel);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timer_8h_1a28110292f2481f7b44d1517fb4ce3c15a5944e870d71180573a16f5e4258615fb" kindref="member" tooltip="PWM output mode.">TIMER_PWM</ref>:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pwm_mode(dev,<sp/>channel);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timer_8h_1a28110292f2481f7b44d1517fb4ce3c15a68b3c57a03af8903fc68a43b771ef10a" kindref="member" tooltip="In this mode, the timer counts from 0 to its reload value repeatedly; every time the counter value re...">TIMER_OUTPUT_COMPARE</ref>:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_compare_mode(dev,<sp/>channel);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="timer_8h_1a8bdc7cae7d104e6e90873ad4055db77c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timer_8c_1a8bdc7cae7d104e6e90873ad4055db77c" kindref="member" tooltip="Call a function on timer devices.">timer_foreach</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*fn)(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref>*))<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>fn(TIMER1);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>fn(TIMER2);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>fn(TIMER3);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>fn(TIMER4);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32_HIGH_DENSITY</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>fn(TIMER5);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>fn(TIMER6);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>fn(TIMER7);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>fn(TIMER8);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="timer_8h_1a022e444b1be2b3a47f598d16b0386f95" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timer_8c_1a022e444b1be2b3a47f598d16b0386f95" kindref="member" tooltip="Attach a timer interrupt.">timer_attach_interrupt</ref>(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8<sp/>interrupt,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>voidFuncPtr<sp/>handler)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structtimer__dev_1a6612456d9af23142eb0b9c595528c34a" kindref="member" tooltip="User IRQ handlers.">handlers</ref>[interrupt]<sp/>=<sp/>handler;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timer_8h_1a6c4d71e208cfc56627ac9a2c6b77a67d" kindref="member" tooltip="Enable a timer interrupt.">timer_enable_irq</ref>(dev,<sp/>interrupt);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>enable_irq(dev,<sp/>interrupt);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="timer_8h_1a821dbe60f78dd6e022d3a56d080589d1" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timer_8c_1a821dbe60f78dd6e022d3a56d080589d1" kindref="member" tooltip="Detach a timer interrupt.">timer_detach_interrupt</ref>(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev,<sp/>uint8<sp/>interrupt)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timer_8h_1ab35817f6e24cffa5366279277b44b606" kindref="member" tooltip="Disable a timer interrupt.">timer_disable_irq</ref>(dev,<sp/>interrupt);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structtimer__dev_1a6612456d9af23142eb0b9c595528c34a" kindref="member" tooltip="User IRQ handlers.">handlers</ref>[interrupt]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>IRQ<sp/>handlers</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_adv_brk(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_adv_up(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_adv_trg_com(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_adv_cc(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_general(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_basic(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__irq_tim1_brk(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_adv_brk(TIMER1);</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__irq_tim1_up(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_adv_up(TIMER1);</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__irq_tim1_trg_com(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_adv_trg_com(TIMER1);</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__irq_tim1_cc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_adv_cc(TIMER1);</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__irq_tim2(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_general(TIMER2);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__irq_tim3(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_general(TIMER3);</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__irq_tim4(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_general(TIMER4);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32_HIGH_DENSITY)<sp/>||<sp/>defined(STM32_XL_DENSITY)</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__irq_tim5(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_general(TIMER5);</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__irq_tim6(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_basic(TIMER6);</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__irq_tim7(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_basic(TIMER7);</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__irq_tim8_brk(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_adv_brk(TIMER8);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__irq_tim8_up(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_adv_up(TIMER8);</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__irq_tim8_trg_com(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_adv_trg_com(TIMER8);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__irq_tim8_cc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_adv_cc(TIMER8);</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Note:<sp/>the<sp/>following<sp/>dispatch<sp/>routines<sp/>make<sp/>use<sp/>of<sp/>the<sp/>fact<sp/>that</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/>DIER<sp/>interrupt<sp/>enable<sp/>bits<sp/>and<sp/>SR<sp/>interrupt<sp/>flags<sp/>have<sp/>common<sp/>bit</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/>positions.<sp/><sp/>Thus,<sp/>ANDing<sp/>DIER<sp/>and<sp/>SR<sp/>lets<sp/>us<sp/>check<sp/>if<sp/>an<sp/>interrupt</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>is<sp/>enabled<sp/>and<sp/>if<sp/>it<sp/>has<sp/>occurred<sp/>simultaneously.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>special-case<sp/>dispatch<sp/>routine<sp/>for<sp/>single-interrupt<sp/>NVIC<sp/>lines.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>This<sp/>function<sp/>assumes<sp/>that<sp/>the<sp/>interrupt<sp/>corresponding<sp/>to<sp/>`iid&apos;<sp/>has</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*<sp/>in<sp/>fact<sp/>occurred<sp/>(i.e.,<sp/>it<sp/>doesn&apos;t<sp/>check<sp/>DIER<sp/>&amp;<sp/>SR).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_single_irq(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119" kindref="member" tooltip="Timer interrupt number.">timer_interrupt_id</ref><sp/>iid,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32<sp/>irq_mask)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtimer__bas__reg__map" kindref="compound" tooltip="Basic timer register map type.">timer_bas_reg_map</ref><sp/>*regs<sp/>=<sp/>(dev-&gt;<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref>).bas;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*handler)(void)<sp/>=<sp/>dev-&gt;<ref refid="structtimer__dev_1a6612456d9af23142eb0b9c595528c34a" kindref="member" tooltip="User IRQ handlers.">handlers</ref>[iid];</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(handler)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handler();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regs-&gt;<ref refid="structtimer__bas__reg__map_1a178d900d217cca5c9e8f565dc2b0e2b6" kindref="member" tooltip="Status register.">SR</ref><sp/>&amp;=<sp/>~irq_mask;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>For<sp/>dispatch<sp/>routines<sp/>which<sp/>service<sp/>multiple<sp/>interrupts.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>handle_irq(dier_sr,<sp/>irq_mask,<sp/>handlers,<sp/>iid,<sp/>handled_irq)<sp/>do<sp/>{<sp/><sp/>\</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((dier_sr)<sp/>&amp;<sp/>(irq_mask))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*__handler)(void)<sp/>=<sp/>(handlers)[iid];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(__handler)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="337"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__handler();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handled_irq<sp/>|=<sp/>(irq_mask);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_adv_brk(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_single_irq(dev,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119a4052cd887d8a8508d5dab777102acf49" kindref="member" tooltip="Break interrupt, advanced timers only.">TIMER_BREAK_INTERRUPT</ref>,<sp/>TIMER_SR_BIF);</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_adv_up(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_single_irq(dev,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119accbbd913a0ca23836c6abe85e31dfb0e" kindref="member" tooltip="Update interrupt, available on all timers.">TIMER_UPDATE_INTERRUPT</ref>,<sp/>TIMER_SR_UIF);</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_adv_trg_com(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtimer__adv__reg__map" kindref="compound" tooltip="Advanced control timer register map type.">timer_adv_reg_map</ref><sp/>*regs<sp/>=<sp/>(dev-&gt;<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref>).adv;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>dsr<sp/>=<sp/>regs-&gt;<ref refid="structtimer__adv__reg__map_1ac93ee1e1c9054147994e4dcb5c4d0c49" kindref="member" tooltip="DMA/Interrupt enable register.">DIER</ref><sp/>&amp;<sp/>regs-&gt;<ref refid="structtimer__adv__reg__map_1af50571a1f004fca6fdf4fac8e8fc2fec" kindref="member" tooltip="Status register.">SR</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(**hs)(void)<sp/>=<sp/>dev-&gt;<ref refid="structtimer__dev_1a6612456d9af23142eb0b9c595528c34a" kindref="member" tooltip="User IRQ handlers.">handlers</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>handled<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>Logical<sp/>OR<sp/>of<sp/>SR<sp/>interrupt<sp/>flags<sp/>we<sp/>end<sp/>up</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>handling.<sp/><sp/>We<sp/>clear<sp/>these.<sp/><sp/>User<sp/>handlers</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>must<sp/>clear<sp/>overcapture<sp/>flags,<sp/>to<sp/>avoid</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>wasting<sp/>time<sp/>in<sp/>output<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_irq(dsr,<sp/>TIMER_SR_TIF,<sp/><sp/><sp/>hs,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119a14dd3e0a80a1e7fc65bfab77a973a4fc" kindref="member" tooltip="Trigger interrupt, general and advanced timers only.">TIMER_TRG_INTERRUPT</ref>,<sp/>handled);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_irq(dsr,<sp/>TIMER_SR_COMIF,<sp/>hs,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119a98600a3e6415b7605afcff4c649109ec" kindref="member" tooltip="COM interrupt, advanced timers only.">TIMER_COM_INTERRUPT</ref>,<sp/>handled);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>regs-&gt;<ref refid="structtimer__adv__reg__map_1af50571a1f004fca6fdf4fac8e8fc2fec" kindref="member" tooltip="Status register.">SR</ref><sp/>&amp;=<sp/>~handled;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_adv_cc(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtimer__adv__reg__map" kindref="compound" tooltip="Advanced control timer register map type.">timer_adv_reg_map</ref><sp/>*regs<sp/>=<sp/>(dev-&gt;<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref>).adv;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>dsr<sp/>=<sp/>regs-&gt;<ref refid="structtimer__adv__reg__map_1ac93ee1e1c9054147994e4dcb5c4d0c49" kindref="member" tooltip="DMA/Interrupt enable register.">DIER</ref><sp/>&amp;<sp/>regs-&gt;<ref refid="structtimer__adv__reg__map_1af50571a1f004fca6fdf4fac8e8fc2fec" kindref="member" tooltip="Status register.">SR</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(**hs)(void)<sp/>=<sp/>dev-&gt;<ref refid="structtimer__dev_1a6612456d9af23142eb0b9c595528c34a" kindref="member" tooltip="User IRQ handlers.">handlers</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>handled<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_irq(dsr,<sp/>TIMER_SR_CC4IF,<sp/>hs,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119a62f68d5f003048f17db5e653ae27c334" kindref="member" tooltip="Capture/compare 4 interrupt, general and advanced timers only.">TIMER_CC4_INTERRUPT</ref>,<sp/>handled);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_irq(dsr,<sp/>TIMER_SR_CC3IF,<sp/>hs,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119ae48ae5b1ddf7271bf5f25bb5f5b347b5" kindref="member" tooltip="Capture/compare 3 interrupt, general and advanced timers only.">TIMER_CC3_INTERRUPT</ref>,<sp/>handled);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_irq(dsr,<sp/>TIMER_SR_CC2IF,<sp/>hs,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119a7837b3fdab81aa75fc0c4423d973f983" kindref="member" tooltip="Capture/compare 2 interrupt, general and advanced timers only.">TIMER_CC2_INTERRUPT</ref>,<sp/>handled);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_irq(dsr,<sp/>TIMER_SR_CC1IF,<sp/>hs,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119ac931c06639595cc99504dc00dc601748" kindref="member" tooltip="Capture/compare 1 interrupt, available on general and advanced timers only.">TIMER_CC1_INTERRUPT</ref>,<sp/>handled);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>regs-&gt;<ref refid="structtimer__adv__reg__map_1af50571a1f004fca6fdf4fac8e8fc2fec" kindref="member" tooltip="Status register.">SR</ref><sp/>&amp;=<sp/>~handled;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_general(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtimer__gen__reg__map" kindref="compound" tooltip="General purpose timer register map type.">timer_gen_reg_map</ref><sp/>*regs<sp/>=<sp/>(dev-&gt;<ref refid="structtimer__dev_1a2bb0cda9590b90f2d767ceb540633d8e" kindref="member" tooltip="Register map.">regs</ref>).gen;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>dsr<sp/>=<sp/>regs-&gt;<ref refid="structtimer__gen__reg__map_1ac703708b06e3a72c1c7334c805e5300a" kindref="member" tooltip="DMA/Interrupt enable register.">DIER</ref><sp/>&amp;<sp/>regs-&gt;<ref refid="structtimer__gen__reg__map_1af2050de7e57474ea1cad4172976415f0" kindref="member" tooltip="Status register.">SR</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(**hs)(void)<sp/>=<sp/>dev-&gt;<ref refid="structtimer__dev_1a6612456d9af23142eb0b9c595528c34a" kindref="member" tooltip="User IRQ handlers.">handlers</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>handled<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_irq(dsr,<sp/>TIMER_SR_TIF,<sp/><sp/><sp/>hs,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119a14dd3e0a80a1e7fc65bfab77a973a4fc" kindref="member" tooltip="Trigger interrupt, general and advanced timers only.">TIMER_TRG_INTERRUPT</ref>,<sp/><sp/><sp/><sp/>handled);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_irq(dsr,<sp/>TIMER_SR_CC4IF,<sp/>hs,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119a62f68d5f003048f17db5e653ae27c334" kindref="member" tooltip="Capture/compare 4 interrupt, general and advanced timers only.">TIMER_CC4_INTERRUPT</ref>,<sp/><sp/><sp/><sp/>handled);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_irq(dsr,<sp/>TIMER_SR_CC3IF,<sp/>hs,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119ae48ae5b1ddf7271bf5f25bb5f5b347b5" kindref="member" tooltip="Capture/compare 3 interrupt, general and advanced timers only.">TIMER_CC3_INTERRUPT</ref>,<sp/><sp/><sp/><sp/>handled);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_irq(dsr,<sp/>TIMER_SR_CC2IF,<sp/>hs,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119a7837b3fdab81aa75fc0c4423d973f983" kindref="member" tooltip="Capture/compare 2 interrupt, general and advanced timers only.">TIMER_CC2_INTERRUPT</ref>,<sp/><sp/><sp/><sp/>handled);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_irq(dsr,<sp/>TIMER_SR_CC1IF,<sp/>hs,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119ac931c06639595cc99504dc00dc601748" kindref="member" tooltip="Capture/compare 1 interrupt, available on general and advanced timers only.">TIMER_CC1_INTERRUPT</ref>,<sp/><sp/><sp/><sp/>handled);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>handle_irq(dsr,<sp/>TIMER_SR_UIF,<sp/><sp/><sp/>hs,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119accbbd913a0ca23836c6abe85e31dfb0e" kindref="member" tooltip="Update interrupt, available on all timers.">TIMER_UPDATE_INTERRUPT</ref>,<sp/>handled);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>regs-&gt;<ref refid="structtimer__gen__reg__map_1af2050de7e57474ea1cad4172976415f0" kindref="member" tooltip="Status register.">SR</ref><sp/>&amp;=<sp/>~handled;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_basic(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>dispatch_single_irq(dev,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119accbbd913a0ca23836c6abe85e31dfb0e" kindref="member" tooltip="Update interrupt, available on all timers.">TIMER_UPDATE_INTERRUPT</ref>,<sp/>TIMER_SR_UIF);</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/>Utilities</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>disable_channel(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev,<sp/>uint8<sp/>channel)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timer_8c_1a821dbe60f78dd6e022d3a56d080589d1" kindref="member" tooltip="Detach a timer interrupt.">timer_detach_interrupt</ref>(dev,<sp/>channel);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timer_8h_1a52cb6f1e8645daf27a3f83f110bc94e4" kindref="member" tooltip="Disable a timer channel&amp;#39;s output compare or input capture signal.">timer_cc_disable</ref>(dev,<sp/>channel);</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pwm_mode(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev,<sp/>uint8<sp/>channel)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timer_8h_1ab35817f6e24cffa5366279277b44b606" kindref="member" tooltip="Disable a timer interrupt.">timer_disable_irq</ref>(dev,<sp/>channel);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timer_8h_1a8f9bdd4839c155992ff426112c6a770d" kindref="member" tooltip="Configure a channel&amp;#39;s output compare mode.">timer_oc_set_mode</ref>(dev,<sp/>channel,<sp/><ref refid="timer_8h_1ab5a473ea9040378659bcbbd48ed36595a5aa5227a1dcc23b47847f0f780363637" kindref="member" tooltip="PWM mode 1.">TIMER_OC_MODE_PWM_1</ref>,<sp/><ref refid="timer_8h_1a2d49aabeac428e1afa61bdf38ba427d2a88eae9390f25f451e7e24ba7a40b667f" kindref="member" tooltip="Output compare preload enable.">TIMER_OC_PE</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timer_8h_1a0f4d049490eb476eba409a9138571326" kindref="member" tooltip="Enable a timer channel&amp;#39;s capture/compare signal.">timer_cc_enable</ref>(dev,<sp/>channel);</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>output_compare_mode(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev,<sp/>uint8<sp/>channel)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timer_8h_1a8f9bdd4839c155992ff426112c6a770d" kindref="member" tooltip="Configure a channel&amp;#39;s output compare mode.">timer_oc_set_mode</ref>(dev,<sp/>channel,<sp/><ref refid="timer_8h_1ab5a473ea9040378659bcbbd48ed36595ac503986512d57da1702028ba0caa871b" kindref="member" tooltip="OCxREF signal is forced high when the count matches the channel capture/compare register.">TIMER_OC_MODE_ACTIVE_ON_MATCH</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timer_8h_1a0f4d049490eb476eba409a9138571326" kindref="member" tooltip="Enable a timer channel&amp;#39;s capture/compare signal.">timer_cc_enable</ref>(dev,<sp/>channel);</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enable_advanced_irq(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119" kindref="member" tooltip="Timer interrupt number.">timer_interrupt_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enable_nonmuxed_irq(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enable_irq(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119" kindref="member" tooltip="Timer interrupt number.">timer_interrupt_id</ref><sp/>iid)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structtimer__dev_1a178dad71538821d7119ba07d209100c6" kindref="member" tooltip="Timer&amp;#39;s type.">type</ref><sp/>==<sp/><ref refid="timer_8h_1a96d92a0967e019b8223089e7968971c1abba89a1a07ef60a754d2d552e5b4309c" kindref="member" tooltip="Advanced type.">TIMER_ADVANCED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable_advanced_irq(dev,<sp/>iid);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enable_nonmuxed_irq(dev);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enable_advanced_irq(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev,<sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119" kindref="member" tooltip="Timer interrupt number.">timer_interrupt_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>is_timer1<sp/>=<sp/>dev-&gt;<ref refid="structtimer__dev_1a9f76fb96b4ee0e2081b81cd859475d1f" kindref="member" tooltip="RCC clock information.">clk_id</ref><sp/>==<sp/>RCC_TIMER1;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119accbbd913a0ca23836c6abe85e31dfb0e" kindref="member" tooltip="Update interrupt, available on all timers.">TIMER_UPDATE_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nvic_8h_1a51e6b1b0e83aac5cd8f1a50255db6b45" kindref="member" tooltip="Enable interrupt irq_num.">nvic_irq_enable</ref>(is_timer1<sp/>?<sp/><ref refid="nvic_8h_1a89e3d57340a69fbdef83f12661543d83a48d8e2c338763c39d78ef04e9d8d5a41" kindref="member" tooltip="Timer 1 update.">NVIC_TIMER1_UP</ref><sp/>:<sp/><ref refid="nvic_8h_1a89e3d57340a69fbdef83f12661543d83ace993c0c6ff437fb06b4a1d8bd7297ae" kindref="member" tooltip="Timer 8 update.">NVIC_TIMER8_UP</ref>);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119ac931c06639595cc99504dc00dc601748" kindref="member" tooltip="Capture/compare 1 interrupt, available on general and advanced timers only.">TIMER_CC1_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119a7837b3fdab81aa75fc0c4423d973f983" kindref="member" tooltip="Capture/compare 2 interrupt, general and advanced timers only.">TIMER_CC2_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119ae48ae5b1ddf7271bf5f25bb5f5b347b5" kindref="member" tooltip="Capture/compare 3 interrupt, general and advanced timers only.">TIMER_CC3_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119a62f68d5f003048f17db5e653ae27c334" kindref="member" tooltip="Capture/compare 4 interrupt, general and advanced timers only.">TIMER_CC4_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nvic_8h_1a51e6b1b0e83aac5cd8f1a50255db6b45" kindref="member" tooltip="Enable interrupt irq_num.">nvic_irq_enable</ref>(is_timer1<sp/>?<sp/><ref refid="nvic_8h_1a89e3d57340a69fbdef83f12661543d83a90dc4f7d1d573b50feb7a6707f34389b" kindref="member" tooltip="Timer 1 capture/compare.">NVIC_TIMER1_CC</ref><sp/>:<sp/><ref refid="nvic_8h_1a89e3d57340a69fbdef83f12661543d83ad34c5dd6833dd6862fc1957e21551488" kindref="member" tooltip="Timer 8 capture/compare.">NVIC_TIMER8_CC</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119a98600a3e6415b7605afcff4c649109ec" kindref="member" tooltip="COM interrupt, advanced timers only.">TIMER_COM_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119a14dd3e0a80a1e7fc65bfab77a973a4fc" kindref="member" tooltip="Trigger interrupt, general and advanced timers only.">TIMER_TRG_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nvic_8h_1a51e6b1b0e83aac5cd8f1a50255db6b45" kindref="member" tooltip="Enable interrupt irq_num.">nvic_irq_enable</ref>(is_timer1<sp/>?<sp/><ref refid="nvic_8h_1a89e3d57340a69fbdef83f12661543d83a93f5ec8874c1b9f919317cfd4a92445c" kindref="member" tooltip="Timer 1 trigger and commutation.">NVIC_TIMER1_TRG_COM</ref><sp/>:<sp/><ref refid="nvic_8h_1a89e3d57340a69fbdef83f12661543d83acbe640928dc6c3ca717b2a0f73e68621" kindref="member" tooltip="Timer 8 trigger and commutation.">NVIC_TIMER8_TRG_COM</ref>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="timer_8h_1ae61e0dd2adb3cee75d7e6681aac15119a4052cd887d8a8508d5dab777102acf49" kindref="member" tooltip="Break interrupt, advanced timers only.">TIMER_BREAK_INTERRUPT</ref>:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nvic_8h_1a51e6b1b0e83aac5cd8f1a50255db6b45" kindref="member" tooltip="Enable interrupt irq_num.">nvic_irq_enable</ref>(is_timer1<sp/>?<sp/><ref refid="nvic_8h_1a89e3d57340a69fbdef83f12661543d83a3418573ecf7d27ea37ae8f3c37cc5e4a" kindref="member" tooltip="Timer 1 break.">NVIC_TIMER1_BRK</ref><sp/>:<sp/><ref refid="nvic_8h_1a89e3d57340a69fbdef83f12661543d83a13472b160b3ea76adea75aabae0db016" kindref="member" tooltip="Timer 8 break.">NVIC_TIMER8_BRK</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enable_nonmuxed_irq(<ref refid="structtimer__dev" kindref="compound" tooltip="Timer device type.">timer_dev</ref><sp/>*dev)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structtimer__dev_1a9f76fb96b4ee0e2081b81cd859475d1f" kindref="member" tooltip="RCC clock information.">clk_id</ref>)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCC_TIMER2:</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nvic_8h_1a51e6b1b0e83aac5cd8f1a50255db6b45" kindref="member" tooltip="Enable interrupt irq_num.">nvic_irq_enable</ref>(<ref refid="nvic_8h_1a89e3d57340a69fbdef83f12661543d83a6720b4bb58a02dee2eb47e216ac28978" kindref="member" tooltip="Timer 2.">NVIC_TIMER2</ref>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCC_TIMER3:</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nvic_8h_1a51e6b1b0e83aac5cd8f1a50255db6b45" kindref="member" tooltip="Enable interrupt irq_num.">nvic_irq_enable</ref>(<ref refid="nvic_8h_1a89e3d57340a69fbdef83f12661543d83a9df9a7fac0e497f2524886c35c586f5f" kindref="member" tooltip="Timer 3.">NVIC_TIMER3</ref>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCC_TIMER4:</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nvic_8h_1a51e6b1b0e83aac5cd8f1a50255db6b45" kindref="member" tooltip="Enable interrupt irq_num.">nvic_irq_enable</ref>(<ref refid="nvic_8h_1a89e3d57340a69fbdef83f12661543d83a47d6b863e91749da87a842feb5df4586" kindref="member" tooltip="Timer 4.">NVIC_TIMER4</ref>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32_HIGH_DENSITY</highlight></codeline>
<codeline lineno="466"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCC_TIMER5:</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nvic_8h_1a51e6b1b0e83aac5cd8f1a50255db6b45" kindref="member" tooltip="Enable interrupt irq_num.">nvic_irq_enable</ref>(<ref refid="nvic_8h_1a89e3d57340a69fbdef83f12661543d83a06da88bda9fb69b730d40709909cd9b2" kindref="member" tooltip="Timer 5.">NVIC_TIMER5</ref>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCC_TIMER6:</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nvic_8h_1a51e6b1b0e83aac5cd8f1a50255db6b45" kindref="member" tooltip="Enable interrupt irq_num.">nvic_irq_enable</ref>(<ref refid="nvic_8h_1a89e3d57340a69fbdef83f12661543d83a19b13a93cc869a43b52e8959744e6882" kindref="member" tooltip="Timer 6.">NVIC_TIMER6</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>RCC_TIMER7:</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="nvic_8h_1a51e6b1b0e83aac5cd8f1a50255db6b45" kindref="member" tooltip="Enable interrupt irq_num.">nvic_irq_enable</ref>(<ref refid="nvic_8h_1a89e3d57340a69fbdef83f12661543d83af7f4ecb0cf957b9334eb2960ccf86176" kindref="member" tooltip="Timer 7.">NVIC_TIMER7</ref>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="476"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FAULT(0);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mbolivar/leaf/libmaple/libmaple/timer.c"/>
  </compounddef>
</doxygen>
