<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="usb__regs_8h" kind="file">
    <compoundname>usb_regs.h</compoundname>
    <includedby refid="usb__lib_8h" local="yes">libmaple/usb/usb_lib/usb_lib.h</includedby>
    <invincdepgraph>
      <node id="988">
        <label>libmaple/usb/usb.c</label>
        <link refid="usb_8c_source"/>
      </node>
      <node id="990">
        <label>libmaple/usb/usb.h</label>
        <link refid="usb_8h_source"/>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
      </node>
      <node id="994">
        <label>libmaple/usb/usb_lib/usb_mem.c</label>
        <link refid="usb__mem_8c_source"/>
      </node>
      <node id="993">
        <label>libmaple/usb/usb_lib/usb_int.c</label>
        <link refid="usb__int_8c_source"/>
      </node>
      <node id="983">
        <label>libmaple/usb/usb_lib/usb_lib.h</label>
        <link refid="usb__lib_8h_source"/>
        <childnode refid="984" relation="include">
        </childnode>
        <childnode refid="987" relation="include">
        </childnode>
        <childnode refid="990" relation="include">
        </childnode>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
        <childnode refid="991" relation="include">
        </childnode>
        <childnode refid="992" relation="include">
        </childnode>
        <childnode refid="993" relation="include">
        </childnode>
        <childnode refid="994" relation="include">
        </childnode>
        <childnode refid="995" relation="include">
        </childnode>
      </node>
      <node id="987">
        <label>libmaple/usb/usb_config.h</label>
        <link refid="usb__config_8h_source"/>
        <childnode refid="985" relation="include">
        </childnode>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="989" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
      </node>
      <node id="992">
        <label>libmaple/usb/usb_lib/usb_init.c</label>
        <link refid="usb__init_8c_source"/>
      </node>
      <node id="991">
        <label>libmaple/usb/usb_lib/usb_core.c</label>
        <link refid="usb__core_8c_source"/>
      </node>
      <node id="995">
        <label>libmaple/usb/usb_lib/usb_regs.c</label>
        <link refid="usb__regs_8c_source"/>
      </node>
      <node id="982">
        <label>libmaple/usb/usb_lib/usb_regs.h</label>
        <link refid="usb_regs.h"/>
        <childnode refid="983" relation="include">
        </childnode>
      </node>
      <node id="985">
        <label>libmaple/usb/descriptors.c</label>
        <link refid="descriptors_8c_source"/>
      </node>
      <node id="984">
        <label>libmaple/usb/descriptors.h</label>
        <link refid="descriptors_8h_source"/>
        <childnode refid="985" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
      </node>
      <node id="986">
        <label>libmaple/usb/usb_callbacks.c</label>
        <link refid="usb__callbacks_8c_source"/>
      </node>
      <node id="989">
        <label>libmaple/usb/usb_callbacks.h</label>
        <link refid="usb__callbacks_8h_source"/>
        <childnode refid="988" relation="include">
        </childnode>
        <childnode refid="986" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="usb__regs_8h_1a51f99d45e894f82e97deaf140607363e" prot="public" static="no">
        <name>RegBase</name>
        <initializer>(0x40005C00L)  /* USB_IP Peripheral Registers base address */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="43" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a0d9ffca30cdfc000cb1cbfb328173453" prot="public" static="no">
        <name>PMAAddr</name>
        <initializer>(0x40006000L)  /* USB_IP Packet Memory Area base address   */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="44" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a86f8e043141251a131dc6d5ccc31c460" prot="public" static="no">
        <name>CNTR</name>
        <initializer>((volatile unsigned *)(RegBase + 0x40))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="51" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aa629371dbf361f927e5c90ee164ce5bc" prot="public" static="no">
        <name>ISTR</name>
        <initializer>((volatile unsigned *)(RegBase + 0x44))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="53" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a457eb8f707b78d63557b557bcbcfd81d" prot="public" static="no">
        <name>FNR</name>
        <initializer>((volatile unsigned *)(RegBase + 0x48))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="55" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a89aa89079e0a068e5e5b1466fac35768" prot="public" static="no">
        <name>DADDR</name>
        <initializer>((volatile unsigned *)(RegBase + 0x4C))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="57" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a4bd0d3df4a17b1f5a43e0341ae0f34ea" prot="public" static="no">
        <name>BTABLE</name>
        <initializer>((volatile unsigned *)(RegBase + 0x50))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="59" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a1304b3edd2ae01026307a35167d21b8d" prot="public" static="no">
        <name>EP0REG</name>
        <initializer>((volatile unsigned *)(RegBase)) /* endpoint 0 register address */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="63" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a606af0f1367059e6c05caab6c5d6cf4a" prot="public" static="no">
        <name>ENDP0</name>
        <initializer>((u8)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="66" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a4b84b84df08f9183300546f252aa3022" prot="public" static="no">
        <name>ENDP1</name>
        <initializer>((u8)1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="67" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a0a900aba11afa8f900a256897a8a798d" prot="public" static="no">
        <name>ENDP2</name>
        <initializer>((u8)2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="68" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ae84e47b97a3174844e67a13e18b6f24d" prot="public" static="no">
        <name>ENDP3</name>
        <initializer>((u8)3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="69" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aef32345075ed6c9493b512664988ddcf" prot="public" static="no">
        <name>ENDP4</name>
        <initializer>((u8)4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="70" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a41ab2c2cbb3d555f742518104d91117f" prot="public" static="no">
        <name>ENDP5</name>
        <initializer>((u8)5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="71" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ad1d9733f17e2a567f5807c48b2495f1f" prot="public" static="no">
        <name>ENDP6</name>
        <initializer>((u8)6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="72" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aafbba4d71d4b145e582596e37bc8489d" prot="public" static="no">
        <name>ENDP7</name>
        <initializer>((u8)7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="73" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a2c320a6d1ad4d05f0b75f89d975e8da8" prot="public" static="no">
        <name>ISTR_CTR</name>
        <initializer>(0x8000) /* Correct TRansfer (clear-only bit) */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="77" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aeb831a8ee4087e160ca7339969232f01" prot="public" static="no">
        <name>ISTR_DOVR</name>
        <initializer>(0x4000) /* DMA OVeR/underrun (clear-only bit) */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="78" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a886cae8535d2a15791f11a92e7a3b2ba" prot="public" static="no">
        <name>ISTR_ERR</name>
        <initializer>(0x2000) /* ERRor (clear-only bit) */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="79" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a2d1627d551d29211d0912a2e1cac660e" prot="public" static="no">
        <name>ISTR_WKUP</name>
        <initializer>(0x1000) /* WaKe UP (clear-only bit) */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="80" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ad162f18a7a1e7ac37444843924ad0150" prot="public" static="no">
        <name>ISTR_SUSP</name>
        <initializer>(0x0800) /* SUSPend (clear-only bit) */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="81" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a7d1c873cc9e0fc422da36c3ba9cee745" prot="public" static="no">
        <name>ISTR_RESET</name>
        <initializer>(0x0400) /* RESET (clear-only bit) */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="82" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a69d53bb118e406cf570e8f0d92d35f2a" prot="public" static="no">
        <name>ISTR_SOF</name>
        <initializer>(0x0200) /* Start Of Frame (clear-only bit) */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="83" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a89b601f82ca6f368563963436e438df8" prot="public" static="no">
        <name>ISTR_ESOF</name>
        <initializer>(0x0100) /* Expected Start Of Frame (clear-only bit) */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="84" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1af126eb224dcc9f43c1b4705cd294ba12" prot="public" static="no">
        <name>ISTR_DIR</name>
        <initializer>(0x0010)  /* DIRection of transaction (read-only bit)  */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="87" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a130ca099834cdb1e86308008f33da5ad" prot="public" static="no">
        <name>ISTR_EP_ID</name>
        <initializer>(0x000F)  /* EndPoint IDentifier (read-only bit)  */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="88" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a72645623a686e30a096322a8c0d7d60d" prot="public" static="no">
        <name>CLR_CTR</name>
        <initializer>(~ISTR_CTR)   /* clear Correct TRansfer bit */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="90" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aa8ee42c4b7ece621c5529daed15fe338" prot="public" static="no">
        <name>CLR_DOVR</name>
        <initializer>(~ISTR_DOVR)  /* clear DMA OVeR/underrun bit*/</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="91" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aea5d31c15ea9c4517923a713cd43ecb9" prot="public" static="no">
        <name>CLR_ERR</name>
        <initializer>(~ISTR_ERR)   /* clear ERRor bit */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="92" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aada2bf36194904bfebb53b5636bab3e7" prot="public" static="no">
        <name>CLR_WKUP</name>
        <initializer>(~ISTR_WKUP)  /* clear WaKe UP bit     */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="93" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a65cde5481923b8f6d8c0e216a5b37373" prot="public" static="no">
        <name>CLR_SUSP</name>
        <initializer>(~ISTR_SUSP)  /* clear SUSPend bit     */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="94" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a20b25aee9a76251ec4e2edbfabed51d0" prot="public" static="no">
        <name>CLR_RESET</name>
        <initializer>(~ISTR_RESET) /* clear RESET bit      */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="95" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ab9294e3419cb3369c81dc8e407b981ce" prot="public" static="no">
        <name>CLR_SOF</name>
        <initializer>(~ISTR_SOF)   /* clear Start Of Frame bit   */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="96" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a81d870e6f7f519e76da8332c9321b78c" prot="public" static="no">
        <name>CLR_ESOF</name>
        <initializer>(~ISTR_ESOF)  /* clear Expected Start Of Frame bit */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="97" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a1ea9dbddc76313f0846c0d6f3c037921" prot="public" static="no">
        <name>CNTR_CTRM</name>
        <initializer>(0x8000) /* Correct TRansfer Mask */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="102" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a001b88e0963d7e0dcfa3218bcf2bdf08" prot="public" static="no">
        <name>CNTR_DOVRM</name>
        <initializer>(0x4000) /* DMA OVeR/underrun Mask */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="103" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ab772c59d848ca8705c88d7fe64b32f19" prot="public" static="no">
        <name>CNTR_ERRM</name>
        <initializer>(0x2000) /* ERRor Mask */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="104" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a7b34576bfd8ec8da76239d6aba8c8c2a" prot="public" static="no">
        <name>CNTR_WKUPM</name>
        <initializer>(0x1000) /* WaKe UP Mask */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="105" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a1055d7e7f5960cf8981785656f5ad542" prot="public" static="no">
        <name>CNTR_SUSPM</name>
        <initializer>(0x0800) /* SUSPend Mask */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="106" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a6c257dec79985467d8d025274f53d971" prot="public" static="no">
        <name>CNTR_RESETM</name>
        <initializer>(0x0400) /* RESET Mask   */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="107" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a207debd5d70e9fd44c87c303170ace50" prot="public" static="no">
        <name>CNTR_SOFM</name>
        <initializer>(0x0200) /* Start Of Frame Mask */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="108" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a6a19e21b111f63e1d1bbb54c03c06a09" prot="public" static="no">
        <name>CNTR_ESOFM</name>
        <initializer>(0x0100) /* Expected Start Of Frame Mask */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="109" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ac2b2945c7689cbdac8efb1693d8df70c" prot="public" static="no">
        <name>CNTR_RESUME</name>
        <initializer>(0x0010) /* RESUME request */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="112" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a9276eabae63c955cd8a81fcf2d09ff48" prot="public" static="no">
        <name>CNTR_FSUSP</name>
        <initializer>(0x0008) /* Force SUSPend */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="113" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a6ef07c78b9f5eb102c86871a8abae0e9" prot="public" static="no">
        <name>CNTR_LPMODE</name>
        <initializer>(0x0004) /* Low-power MODE */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="114" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ace6730a75e0ab11a79edda84da0ceb28" prot="public" static="no">
        <name>CNTR_PDWN</name>
        <initializer>(0x0002) /* Power DoWN */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="115" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ab987d4ca102e0e1fa86925899139e559" prot="public" static="no">
        <name>CNTR_FRES</name>
        <initializer>(0x0001) /* Force USB RESet */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="116" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a2b1f3ceabf44f6dad4b15e1522d6f2e2" prot="public" static="no">
        <name>FNR_RXDP</name>
        <initializer>(0x8000) /* status of D+ data line */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="121" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a587ae7435e6f9ff16a96be6a456ce831" prot="public" static="no">
        <name>FNR_RXDM</name>
        <initializer>(0x4000) /* status of D- data line */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="122" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ab729bb4c977a0198742fc7328ac6ccf4" prot="public" static="no">
        <name>FNR_LCK</name>
        <initializer>(0x2000) /* LoCKed */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="123" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a6d3aaf66a4a6784dea39636e5127a329" prot="public" static="no">
        <name>FNR_LSOF</name>
        <initializer>(0x1800) /* Lost SOF */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="124" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a55c7a4ebba4c08583197146052cf888f" prot="public" static="no">
        <name>FNR_FN</name>
        <initializer>(0x07FF) /* Frame Number */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="125" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a9cd069c74227a0ad3cefaf3a1ab26704" prot="public" static="no">
        <name>DADDR_EF</name>
        <initializer>(0x80)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="129" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a83e89a03bae587128d9db1d030399d9d" prot="public" static="no">
        <name>DADDR_ADD</name>
        <initializer>(0x7F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="130" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a58e9e9771e11a871b89fe901842b7116" prot="public" static="no">
        <name>EP_CTR_RX</name>
        <initializer>(0x8000) /* EndPoint Correct TRansfer RX */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="135" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a1eda0d8294d0c5d38830b13035aea058" prot="public" static="no">
        <name>EP_DTOG_RX</name>
        <initializer>(0x4000) /* EndPoint Data TOGGLE RX */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="136" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a85d1b9411d523bc6b700785db30c37f6" prot="public" static="no">
        <name>EPRX_STAT</name>
        <initializer>(0x3000) /* EndPoint RX STATus bit field */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="137" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a896c76b932f4e3d32b8556cc13617c8b" prot="public" static="no">
        <name>EP_SETUP</name>
        <initializer>(0x0800) /* EndPoint SETUP */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="138" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a2197c5076888d5d8370f4a11253c5a24" prot="public" static="no">
        <name>EP_T_FIELD</name>
        <initializer>(0x0600) /* EndPoint TYPE */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="139" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ae27593e77780561f6d3da91c7b7d1528" prot="public" static="no">
        <name>EP_KIND</name>
        <initializer>(0x0100) /* EndPoint KIND */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="140" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1af5191507a18273ea019f3d1675aa6e11" prot="public" static="no">
        <name>EP_CTR_TX</name>
        <initializer>(0x0080) /* EndPoint Correct TRansfer TX */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="141" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aff778ef6c6f5a58ea003306db4dfbc98" prot="public" static="no">
        <name>EP_DTOG_TX</name>
        <initializer>(0x0040) /* EndPoint Data TOGGLE TX */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="142" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a6426753b2eeaff6d7d5045533de46742" prot="public" static="no">
        <name>EPTX_STAT</name>
        <initializer>(0x0030) /* EndPoint TX STATus bit field */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="143" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a09cdf7a0e3c285788ae1606d31933eb2" prot="public" static="no">
        <name>EPADDR_FIELD</name>
        <initializer>(0x000F) /* EndPoint ADDRess FIELD */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="144" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ad9a69147c539f7cc835c122f9a88cb2c" prot="public" static="no">
        <name>EPREG_MASK</name>
        <initializer>(EP_CTR_RX|EP_SETUP|EP_T_FIELD|EP_KIND|EP_CTR_TX|EPADDR_FIELD)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="147" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a98ea7b67ef1cacbedac5283a033eee27" prot="public" static="no">
        <name>EP_TYPE_MASK</name>
        <initializer>(0x0600) /* EndPoint TYPE Mask */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="150" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a39a66d6d78275fe2e860553377ab05dd" prot="public" static="no">
        <name>EP_BULK</name>
        <initializer>(0x0000) /* EndPoint BULK */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="151" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a60c0c84fbef56ee0649395ebb54ada9c" prot="public" static="no">
        <name>EP_CONTROL</name>
        <initializer>(0x0200) /* EndPoint CONTROL */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="152" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1af5404e7fddbfb9268eec114f26cf4048" prot="public" static="no">
        <name>EP_ISOCHRONOUS</name>
        <initializer>(0x0400) /* EndPoint ISOCHRONOUS */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="153" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ad4d26e1c566064f2259faf65f0858b6e" prot="public" static="no">
        <name>EP_INTERRUPT</name>
        <initializer>(0x0600) /* EndPoint INTERRUPT */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="154" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a2f0ecd8d0470c6ab5c965d49edbf4aac" prot="public" static="no">
        <name>EP_T_MASK</name>
        <initializer>(~EP_T_FIELD &amp; EPREG_MASK)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="155" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a9059b492b8e0a03103907d27b53e5dc5" prot="public" static="no">
        <name>EPKIND_MASK</name>
        <initializer>(~EP_KIND &amp; EPREG_MASK)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="159" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ae1fcd971738492cc335764ad8a46e823" prot="public" static="no">
        <name>EP_TX_DIS</name>
        <initializer>(0x0000) /* EndPoint TX DISabled */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="162" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a6b58b9a6eadacec4124ed7fb221cc0ad" prot="public" static="no">
        <name>EP_TX_STALL</name>
        <initializer>(0x0010) /* EndPoint TX STALLed */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="163" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ac5b7b0aff92c54964c33ba1606526bf5" prot="public" static="no">
        <name>EP_TX_NAK</name>
        <initializer>(0x0020) /* EndPoint TX NAKed */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="164" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a49b745ddf01e494f0bd8debb1fd5d03b" prot="public" static="no">
        <name>EP_TX_VALID</name>
        <initializer>(0x0030) /* EndPoint TX VALID */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="165" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a36499b3b9dfa2dd97566055c579e2137" prot="public" static="no">
        <name>EPTX_DTOG1</name>
        <initializer>(0x0010) /* EndPoint TX Data TOGgle bit1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="166" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1af9b0f26542762a00052c2239b10f99cc" prot="public" static="no">
        <name>EPTX_DTOG2</name>
        <initializer>(0x0020) /* EndPoint TX Data TOGgle bit2 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="167" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ad447644efe84fd910b6495085bec47fd" prot="public" static="no">
        <name>EPTX_DTOGMASK</name>
        <initializer>(EPTX_STAT|EPREG_MASK)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="168" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aff1480e0d46d47fefea72bf37c8c774a" prot="public" static="no">
        <name>EP_RX_DIS</name>
        <initializer>(0x0000) /* EndPoint RX DISabled */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="171" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1af5eb809a88a982d993fcc6f861db0a12" prot="public" static="no">
        <name>EP_RX_STALL</name>
        <initializer>(0x1000) /* EndPoint RX STALLed */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="172" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1af1a9995ab190d64b998b91537e681173" prot="public" static="no">
        <name>EP_RX_NAK</name>
        <initializer>(0x2000) /* EndPoint RX NAKed */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="173" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ad07a8a29f8dc113c2c579be010df4a56" prot="public" static="no">
        <name>EP_RX_VALID</name>
        <initializer>(0x3000) /* EndPoint RX VALID */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="174" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a6815d40f28c2417c36f9aa4816553a8b" prot="public" static="no">
        <name>EPRX_DTOG1</name>
        <initializer>(0x1000) /* EndPoint RX Data TOGgle bit1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="175" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ae62006c2f46bfe68f38cee146aab1e62" prot="public" static="no">
        <name>EPRX_DTOG2</name>
        <initializer>(0x2000) /* EndPoint RX Data TOGgle bit1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="176" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1af0e13d145aa628f12d975871bd212388" prot="public" static="no">
        <name>EPRX_DTOGMASK</name>
        <initializer>(EPRX_STAT|EPREG_MASK)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="177" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a519b160b82974ab5cb378d53029c25a3" prot="public" static="no">
        <name>_SetCNTR</name>
        <param><defname>wRegValue</defname></param>
        <initializer>(*CNTR   = (u16)wRegValue)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="180" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ac0333b28cf5b76b13c1f106eee0e3447" prot="public" static="no">
        <name>_SetISTR</name>
        <param><defname>wRegValue</defname></param>
        <initializer>(*ISTR   = (u16)wRegValue)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="183" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a16322fb3fa7a5308f33bbbfff4e2f948" prot="public" static="no">
        <name>_SetDADDR</name>
        <param><defname>wRegValue</defname></param>
        <initializer>(*DADDR  = (u16)wRegValue)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="186" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1afc2d059e3d731eb71f5e9efd7e75acba" prot="public" static="no">
        <name>_SetBTABLE</name>
        <param><defname>wRegValue</defname></param>
        <initializer>(*BTABLE = (u16)(wRegValue &amp; 0xFFF8))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="189" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aa7aaebc16bbe263fea2166018f863f28" prot="public" static="no">
        <name>_GetCNTR</name>
        <param></param>
        <initializer>((u16) *CNTR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="192" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a64f41d56a219f1ce767e0f29a3647815" prot="public" static="no">
        <name>_GetISTR</name>
        <param></param>
        <initializer>((u16) *ISTR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="195" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ac859d1d69d1f272d82dedaeb715d2e44" prot="public" static="no">
        <name>_GetFNR</name>
        <param></param>
        <initializer>((u16) *FNR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="198" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1abaddaf4c0bc87ed61ab1ac84b3cb7f1b" prot="public" static="no">
        <name>_GetDADDR</name>
        <param></param>
        <initializer>((u16) *DADDR)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="201" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a55db6dcb1f2147ac2aed8f8877d768ab" prot="public" static="no">
        <name>_GetBTABLE</name>
        <param></param>
        <initializer>((u16) *BTABLE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="204" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a4b65e8d4964d5b4b7f83a79d09cc4037" prot="public" static="no">
        <name>_SetENDPOINT</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>wRegValue</defname></param>
        <initializer>(*(EP0REG + bEpNum)= \
    (u16)wRegValue)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="208" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a3ac2a5a510495d4cfac33f1b095cb0a5" prot="public" static="no">
        <name>_GetENDPOINT</name>
        <param><defname>bEpNum</defname></param>
        <initializer>((u16)(*(EP0REG + bEpNum)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="211" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a21fd48a1bbce1a1acf549de0189a839e" prot="public" static="no">
        <name>_SetEPType</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>wType</defname></param>
        <initializer>(_SetENDPOINT(bEpNum,\
                                  ((_GetENDPOINT(bEpNum) &amp; EP_T_MASK) | wType)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="222" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1abff188e8dad30f6f4eb0ef6a4cef2c3e" prot="public" static="no">
        <name>_GetEPType</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_GetENDPOINT(bEpNum) &amp; EP_T_FIELD)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="231" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1adafc7f88c76b92e693cf26bf66a1e3cc" prot="public" static="no">
        <name>_SetEPTxStatus</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>wState</defname></param>
        <initializer>{\
    register u16 _wRegVal;       \
    _wRegVal = _GetENDPOINT(bEpNum) &amp; EPTX_DTOGMASK;\
    /* toggle first bit ? */     \
    if((EPTX_DTOG1 &amp; wState)!= 0)      \
      _wRegVal ^= EPTX_DTOG1;        \
    /* toggle second bit ?  */         \
    if((EPTX_DTOG2 &amp; wState)!= 0)      \
      _wRegVal ^= EPTX_DTOG2;        \
    _SetENDPOINT(bEpNum, _wRegVal);    \
  } /* _SetEPTxStatus */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="251" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a627c45391e573c2bc59667d01aaaf2c1" prot="public" static="no">
        <name>_SetEPRxStatus</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>wState</defname></param>
        <initializer>{\
    register u16 _wRegVal;   \
    \
    _wRegVal = _GetENDPOINT(bEpNum) &amp; EPRX_DTOGMASK;\
    /* toggle first bit ? */  \
    if((EPRX_DTOG1 &amp; wState)!= 0) \
      _wRegVal ^= EPRX_DTOG1;  \
    /* toggle second bit ? */  \
    if((EPRX_DTOG2 &amp; wState)!= 0) \
      _wRegVal ^= EPRX_DTOG2;  \
    _SetENDPOINT(bEpNum, _wRegVal); \
  } /* _SetEPRxStatus */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="272" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ab41bb4f29064630a0ef70cf1468fa756" prot="public" static="no">
        <name>_GetEPTxStatus</name>
        <param><defname>bEpNum</defname></param>
        <initializer>((u16)_GetENDPOINT(bEpNum) &amp; EPTX_STAT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="281" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ad0b98b979c132cd15001441f858426c7" prot="public" static="no">
        <name>_GetEPRxStatus</name>
        <param><defname>bEpNum</defname></param>
        <initializer>((u16)_GetENDPOINT(bEpNum) &amp; EPRX_STAT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="283" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a8fc4a515eaf9d81b70bda8a893ab726f" prot="public" static="no">
        <name>_SetEPTxValid</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_SetEPTxStatus(bEpNum, EP_TX_VALID))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="292" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aa2e1fd764b3b5dc4a8475442536ca4c8" prot="public" static="no">
        <name>_SetEPRxValid</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_SetEPRxStatus(bEpNum, EP_RX_VALID))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="294" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a1174a3427419e90d2a749583d1a3621d" prot="public" static="no">
        <name>_GetTxStallStatus</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_GetEPTxStatus(bEpNum) \
                                   == EP_TX_STALL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="304" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ac537cc02c1bb66de0f1ee2ac766db3cf" prot="public" static="no">
        <name>_GetRxStallStatus</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_GetEPRxStatus(bEpNum) \
                                   == EP_RX_STALL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="306" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a0ef91e50c420d5174bd851c9ac88cc34" prot="public" static="no">
        <name>_SetEP_KIND</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_SetENDPOINT(bEpNum, \
                                (_GetENDPOINT(bEpNum) | EP_KIND) &amp; EPREG_MASK))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="316" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a2df7e54682151e3e806fde4baa5fe27d" prot="public" static="no">
        <name>_ClearEP_KIND</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_SetENDPOINT(bEpNum, \
                                (_GetENDPOINT(bEpNum) &amp; EPKIND_MASK)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="318" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a7615a969a4ce1ba10f2085d938c145e4" prot="public" static="no">
        <name>_Set_Status_Out</name>
        <param><defname>bEpNum</defname></param>
        <initializer>_SetEP_KIND(bEpNum)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="327" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a433ca4541c527897dac9421ff0910a04" prot="public" static="no">
        <name>_Clear_Status_Out</name>
        <param><defname>bEpNum</defname></param>
        <initializer>_ClearEP_KIND(bEpNum)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="328" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a0daed44ceea962c80772d66b58806733" prot="public" static="no">
        <name>_SetEPDoubleBuff</name>
        <param><defname>bEpNum</defname></param>
        <initializer>_SetEP_KIND(bEpNum)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="337" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a0b90b314c086fee74cd1444dc4bb423a" prot="public" static="no">
        <name>_ClearEPDoubleBuff</name>
        <param><defname>bEpNum</defname></param>
        <initializer>_ClearEP_KIND(bEpNum)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="338" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aa19dfec1a11cd5602cffcd2153af3c64" prot="public" static="no">
        <name>_ClearEP_CTR_RX</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_SetENDPOINT(bEpNum,\
                                   _GetENDPOINT(bEpNum) &amp; 0x7FFF &amp; EPREG_MASK))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="348" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ab9d2817e013e21f91e7578886ad2d33c" prot="public" static="no">
        <name>_ClearEP_CTR_TX</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_SetENDPOINT(bEpNum,\
                                   _GetENDPOINT(bEpNum) &amp; 0xFF7F &amp; EPREG_MASK))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="350" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a3e2e2e459d371d1610d41710a87c6515" prot="public" static="no">
        <name>_ToggleDTOG_RX</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_SetENDPOINT(bEpNum, \
                                   EP_DTOG_RX | (_GetENDPOINT(bEpNum) &amp; EPREG_MASK)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="360" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a4d799a292cbf1200f1fc2e5f55b6ec48" prot="public" static="no">
        <name>_ToggleDTOG_TX</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_SetENDPOINT(bEpNum, \
                                   EP_DTOG_TX | (_GetENDPOINT(bEpNum) &amp; EPREG_MASK)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="362" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a450b1caed0d3a69a0b84b7fbe0cd0db6" prot="public" static="no">
        <name>_ClearDTOG_RX</name>
        <param><defname>bEpNum</defname></param>
        <initializer>if((_GetENDPOINT(bEpNum) &amp; EP_DTOG_RX) != 0)\
    _ToggleDTOG_RX(bEpNum)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="372" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aca74d8144f3ceb50a6b955a57d73f2b0" prot="public" static="no">
        <name>_ClearDTOG_TX</name>
        <param><defname>bEpNum</defname></param>
        <initializer>if((_GetENDPOINT(bEpNum) &amp; EP_DTOG_TX) != 0)\
    _ToggleDTOG_TX(bEpNum)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="374" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a119d7df0280fa39aeeb442232bdf9f22" prot="public" static="no">
        <name>_SetEPAddress</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>bAddr</defname></param>
        <initializer>_SetENDPOINT(bEpNum,\
    (_GetENDPOINT(bEpNum) &amp; EPREG_MASK) | bAddr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="384" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ad694865d395cb751aa8fdb8311603127" prot="public" static="no">
        <name>_GetEPAddress</name>
        <param><defname>bEpNum</defname></param>
        <initializer>((u8)(_GetENDPOINT(bEpNum) &amp; EPADDR_FIELD))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="393" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a9d4725d2da75d5fd74e607c445826a0d" prot="public" static="no">
        <name>_pEPTxAddr</name>
        <param><defname>bEpNum</defname></param>
        <initializer>((u32 *)((_GetBTABLE()+bEpNum*8  )*2 + PMAAddr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="395" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a492eb9c77a65fe56719468de892a4d91" prot="public" static="no">
        <name>_pEPTxCount</name>
        <param><defname>bEpNum</defname></param>
        <initializer>((u32 *)((_GetBTABLE()+bEpNum*8+2)*2 + PMAAddr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="396" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a73f236a9ff84b3df8dabe7309ab56aa6" prot="public" static="no">
        <name>_pEPRxAddr</name>
        <param><defname>bEpNum</defname></param>
        <initializer>((u32 *)((_GetBTABLE()+bEpNum*8+4)*2 + PMAAddr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="397" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a0a73bc35fb455b082416df3ccdcc64c4" prot="public" static="no">
        <name>_pEPRxCount</name>
        <param><defname>bEpNum</defname></param>
        <initializer>((u32 *)((_GetBTABLE()+bEpNum*8+6)*2 + PMAAddr))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="398" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a4bcb9058657a7d3c16a110399525e709" prot="public" static="no">
        <name>_SetEPTxAddr</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>wAddr</defname></param>
        <initializer>(*_pEPTxAddr(bEpNum) = ((wAddr &gt;&gt; 1) &lt;&lt; 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="408" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a5f21e7dd38c77578d30e872338c8ebc2" prot="public" static="no">
        <name>_SetEPRxAddr</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>wAddr</defname></param>
        <initializer>(*_pEPRxAddr(bEpNum) = ((wAddr &gt;&gt; 1) &lt;&lt; 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="409" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="409" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a769d47025f17d782eb6bd38959929912" prot="public" static="no">
        <name>_GetEPTxAddr</name>
        <param><defname>bEpNum</defname></param>
        <initializer>((u16)*_pEPTxAddr(bEpNum))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="418" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aa55a546e89d5b2ac6f351cda1ce8f6a4" prot="public" static="no">
        <name>_GetEPRxAddr</name>
        <param><defname>bEpNum</defname></param>
        <initializer>((u16)*_pEPRxAddr(bEpNum))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="419" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a5cc1f415f0a2cf73d5727cfb87a4fb5f" prot="public" static="no">
        <name>_BlocksOf32</name>
        <param><defname>dwReg</defname></param>
        <param><defname>wCount</defname></param>
        <param><defname>wNBlocks</defname></param>
        <initializer>{\
    wNBlocks = wCount &gt;&gt; 5;\
    if((wCount &amp; 0x1f) == 0)\
      wNBlocks--;\
    *pdwReg = (u32)((wNBlocks &lt;&lt; 10) | 0x8000);\
  }/* _BlocksOf32 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="434" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a202a6d41768d246b79241ec3ebaa5027" prot="public" static="no">
        <name>_BlocksOf2</name>
        <param><defname>dwReg</defname></param>
        <param><defname>wCount</defname></param>
        <param><defname>wNBlocks</defname></param>
        <initializer>{\
    wNBlocks = wCount &gt;&gt; 1;\
    if((wCount &amp; 0x1) != 0)\
      wNBlocks++;\
    *pdwReg = (u32)(wNBlocks &lt;&lt; 10);\
  }/* _BlocksOf2 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="441" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ab31f401111cdf383eb2700df55a5e718" prot="public" static="no">
        <name>_SetEPCountRxReg</name>
        <param><defname>dwReg</defname></param>
        <param><defname>wCount</defname></param>
        <initializer>{\
    u16 wNBlocks;\
    if(wCount &gt; 62){_BlocksOf32(dwReg,wCount,wNBlocks);}\
    else {_BlocksOf2(dwReg,wCount,wNBlocks);}\
  }/* _SetEPCountRxReg */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="447" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ac7387be6bbb3b5af102747c1d690adfc" prot="public" static="no">
        <name>_SetEPRxDblBuf0Count</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>wCount</defname></param>
        <initializer>{\
    u32 *pdwReg = _pEPTxCount(bEpNum); \
    _SetEPCountRxReg(pdwReg, wCount);\
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="454" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a25d5f00015e28de9115c6fb875f83b6d" prot="public" static="no">
        <name>_SetEPTxCount</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>wCount</defname></param>
        <initializer>(*_pEPTxCount(bEpNum) = wCount)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="463" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a3dc18405a3c0086d7f93150af9b55dcf" prot="public" static="no">
        <name>_SetEPRxCount</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>wCount</defname></param>
        <initializer>{\
    u32 *pdwReg = _pEPRxCount(bEpNum); \
    _SetEPCountRxReg(pdwReg, wCount);\
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="467" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a66efdda8d460f5a447207e4f072208e6" prot="public" static="no">
        <name>_GetEPTxCount</name>
        <param><defname>bEpNum</defname></param>
        <initializer>((u16)(*_pEPTxCount(bEpNum)) &amp; 0x3ff)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="475" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aaa1593051349a3b2c688e042ad4ba91b" prot="public" static="no">
        <name>_GetEPRxCount</name>
        <param><defname>bEpNum</defname></param>
        <initializer>((u16)(*_pEPRxCount(bEpNum)) &amp; 0x3ff)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="476" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ac6bcbbdf69e019bc283c2af1691880fc" prot="public" static="no">
        <name>_SetEPDblBuf0Addr</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>wBuf0Addr</defname></param>
        <initializer>{_SetEPTxAddr(bEpNum, wBuf0Addr);}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="486" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a0f1edfc71341530b5da701eb3bbd34cd" prot="public" static="no">
        <name>_SetEPDblBuf1Addr</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>wBuf1Addr</defname></param>
        <initializer>{_SetEPRxAddr(bEpNum, wBuf1Addr);}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="487" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a3ffefd813ecd185516ebaf9f8f3b580f" prot="public" static="no">
        <name>_SetEPDblBuffAddr</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>wBuf0Addr</defname></param>
        <param><defname>wBuf1Addr</defname></param>
        <initializer>{ \
    _SetEPDblBuf0Addr(bEpNum, wBuf0Addr);\
    _SetEPDblBuf1Addr(bEpNum, wBuf1Addr);\
  } /* _SetEPDblBuffAddr */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="501" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a8d0f21124de13db39bac731d7e27105f" prot="public" static="no">
        <name>_GetEPDblBuf0Addr</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_GetEPTxAddr(bEpNum))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="510" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1ac0ed5ab51a83053bcc9edfb5185c1796" prot="public" static="no">
        <name>_GetEPDblBuf1Addr</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_GetEPRxAddr(bEpNum))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="511" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aa010a4b10cb2e25de2e754c7323b137d" prot="public" static="no">
        <name>_SetEPDblBuf0Count</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>bDir</defname></param>
        <param><defname>wCount</defname></param>
        <initializer>{ \
    if(bDir == EP_DBUF_OUT)\
      /* OUT endpoint */ \
    {_SetEPRxDblBuf0Count(bEpNum,wCount);} \
    else if(bDir == EP_DBUF_IN)\
      /* IN endpoint */ \
      *_pEPTxCount(bEpNum) = (u32)wCount;  \
  } /* SetEPDblBuf0Count*/</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="530" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a74326465c335ca33a4940472bad83f58" prot="public" static="no">
        <name>_SetEPDblBuf1Count</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>bDir</defname></param>
        <param><defname>wCount</defname></param>
        <initializer>{ \
    if(bDir == EP_DBUF_OUT)\
      /* OUT endpoint */ \
    {_SetEPRxCount(bEpNum,wCount);}\
    else if(bDir == EP_DBUF_IN)\
      /* IN endpoint */\
      *_pEPRxCount(bEpNum) = (u32)wCount; \
  } /* SetEPDblBuf1Count */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="539" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="532" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1aff5c73112e67ae2c0abc758deab664ba" prot="public" static="no">
        <name>_SetEPDblBuffCount</name>
        <param><defname>bEpNum</defname></param>
        <param><defname>bDir</defname></param>
        <param><defname>wCount</defname></param>
        <initializer>{\
    _SetEPDblBuf0Count(bEpNum, bDir, wCount); \
    _SetEPDblBuf1Count(bEpNum, bDir, wCount); \
  } /* _SetEPDblBuffCount  */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="544" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a2a54159d8917929414be1a63edd02d5a" prot="public" static="no">
        <name>_GetEPDblBuf0Count</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_GetEPTxCount(bEpNum))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="553" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__regs_8h_1a3ebf9afe2a13d659f6367d5bc9ae8dc1" prot="public" static="no">
        <name>_GetEPDblBuf1Count</name>
        <param><defname>bEpNum</defname></param>
        <initializer>(_GetEPRxCount(bEpNum))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="554" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="554" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="usb__regs_8h_1a39b049f51adc6fa3b9260671e7b0f8db" prot="public" static="no">
        <name>EP_DBUF_DIR</name>
        <enumvalue id="usb__regs_8h_1a39b049f51adc6fa3b9260671e7b0f8dbaa86b3a2edb834783f6799521a8d09261" prot="public">
          <name>EP_DBUF_ERR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="usb__regs_8h_1a39b049f51adc6fa3b9260671e7b0f8dba6079208a58e78798a32d7f7a14109c13" prot="public">
          <name>EP_DBUF_OUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="usb__regs_8h_1a39b049f51adc6fa3b9260671e7b0f8dba20cad44efe2d49d5fca511bb8f78e670" prot="public">
          <name>EP_DBUF_IN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="27" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="enum" id="usb__regs_8h_1a51f9eb2beef9ab5724ebc098e75926f6" prot="public" static="no">
        <name>EP_BUF_NUM</name>
        <enumvalue id="usb__regs_8h_1a51f9eb2beef9ab5724ebc098e75926f6ad85419400ef4693e3c3d5ce49d0a0e94" prot="public">
          <name>EP_NOBUF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="usb__regs_8h_1a51f9eb2beef9ab5724ebc098e75926f6a930721f07fd093d9ae8441d3f285ad68" prot="public">
          <name>EP_BUF0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="usb__regs_8h_1a51f9eb2beef9ab5724ebc098e75926f6a16acabec4672b5389b1674191c154d53" prot="public">
          <name>EP_BUF1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="36" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" bodystart="35" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="usb__regs_8h_1a5fe5c3dc7295bc3e8426fdff7046e429" prot="public" static="no" mutable="no">
        <type>u16</type>
        <definition>volatile u16 wIstr</definition>
        <argsstring></argsstring>
        <name>wIstr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="558" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="usb__regs_8h_1a53cf3d9314171dae52818b747e0c341b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetCNTR</definition>
        <argsstring>(u16)</argsstring>
        <name>SetCNTR</name>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="561" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1aad68c80b31ba56c7472ed56c34838764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetISTR</definition>
        <argsstring>(u16)</argsstring>
        <name>SetISTR</name>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="562" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1add7a2026865c76b92d4f9d355e7fe641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetDADDR</definition>
        <argsstring>(u16)</argsstring>
        <name>SetDADDR</name>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="563" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1abd664744246530920b6764e11aebaebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetBTABLE</definition>
        <argsstring>(u16)</argsstring>
        <name>SetBTABLE</name>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="564" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a13d2e35f4da15cb8855767e644b08044" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetCNTR</definition>
        <argsstring>(void)</argsstring>
        <name>GetCNTR</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="565" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a6a22589ce21a8ef7fdccaace4971d4c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetISTR</definition>
        <argsstring>(void)</argsstring>
        <name>GetISTR</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="566" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1aa200ce4f0255cc85235e37a65837fc0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetFNR</definition>
        <argsstring>(void)</argsstring>
        <name>GetFNR</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="567" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1ad91fb6aad26068ae7e9f831c26a58ced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetDADDR</definition>
        <argsstring>(void)</argsstring>
        <name>GetDADDR</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="568" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1af3578630e2e44b1b42fb8d1ffa389c3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetBTABLE</definition>
        <argsstring>(void)</argsstring>
        <name>GetBTABLE</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="569" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1abf74f61ef8e5b47356b445deb74331be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetENDPOINT</definition>
        <argsstring>(u8, u16)</argsstring>
        <name>SetENDPOINT</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="570" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1ade4972331fe04dc71d73ffc9067f4867" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetENDPOINT</definition>
        <argsstring>(u8)</argsstring>
        <name>GetENDPOINT</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="571" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a23ba2c2442d8a93c0126423a0066cbb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPType</definition>
        <argsstring>(u8, u16)</argsstring>
        <name>SetEPType</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="572" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1ab589c0963a83d628a0abff8a3731971f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetEPType</definition>
        <argsstring>(u8)</argsstring>
        <name>GetEPType</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="573" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1af625174532c85a48b2cc6c4873425c8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPTxStatus</definition>
        <argsstring>(u8, u16)</argsstring>
        <name>SetEPTxStatus</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="574" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1ad49f4cab5c1b37c01852835db0640682" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPRxStatus</definition>
        <argsstring>(u8, u16)</argsstring>
        <name>SetEPRxStatus</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="575" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1af1e28bba5e6523f50650502e9ec5e6b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetDouBleBuffEPStall</definition>
        <argsstring>(u8, u8 bDir)</argsstring>
        <name>SetDouBleBuffEPStall</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u8</type>
          <declname>bDir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="576" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="219" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1ae53f3dd790b743789655c4b4ea02863a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetEPTxStatus</definition>
        <argsstring>(u8)</argsstring>
        <name>GetEPTxStatus</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="577" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a3053490e4f3d9ee808ff84786fc68121" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetEPRxStatus</definition>
        <argsstring>(u8)</argsstring>
        <name>GetEPRxStatus</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="578" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1aa5c186689dd27f2979cf9aaaa9c23a48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPTxValid</definition>
        <argsstring>(u8)</argsstring>
        <name>SetEPTxValid</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="579" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1ad3b6cc5b19913d458c382acdf2182491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPRxValid</definition>
        <argsstring>(u8)</argsstring>
        <name>SetEPRxValid</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="580" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a28736e6ac9734d7f595b41548cb3e743" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetTxStallStatus</definition>
        <argsstring>(u8)</argsstring>
        <name>GetTxStallStatus</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="581" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="355" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a79882c8fbeb3546a864c2ca851993ea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetRxStallStatus</definition>
        <argsstring>(u8)</argsstring>
        <name>GetRxStallStatus</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="582" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="366" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a0b7e7d9962c976b134431ebc574a9f39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEP_KIND</definition>
        <argsstring>(u8)</argsstring>
        <name>SetEP_KIND</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="583" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1acb9a5dec3d1ccfae415e945e1228db4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ClearEP_KIND</definition>
        <argsstring>(u8)</argsstring>
        <name>ClearEP_KIND</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="584" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1ac7dcdebe8830ce94034795a83b55524b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Set_Status_Out</definition>
        <argsstring>(u8)</argsstring>
        <name>Set_Status_Out</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="585" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a875b998cdd44076bf00861bc2ee1cb92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Clear_Status_Out</definition>
        <argsstring>(u8)</argsstring>
        <name>Clear_Status_Out</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="586" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1aebb1107c4569637cc4445fa5ec898adf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPDoubleBuff</definition>
        <argsstring>(u8)</argsstring>
        <name>SetEPDoubleBuff</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="587" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="333" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a24de78770acb1c69668eed5f2b57b77e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ClearEPDoubleBuff</definition>
        <argsstring>(u8)</argsstring>
        <name>ClearEPDoubleBuff</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="588" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="344" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a691e006a3c10b3bb7a1ffbdd344e49e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ClearEP_CTR_RX</definition>
        <argsstring>(u8)</argsstring>
        <name>ClearEP_CTR_RX</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="589" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="377" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a3cb35dd417db596b3790e04ab368f938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ClearEP_CTR_TX</definition>
        <argsstring>(u8)</argsstring>
        <name>ClearEP_CTR_TX</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="590" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="388" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a90664128b17b5b2d10ee74234cb770c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ToggleDTOG_RX</definition>
        <argsstring>(u8)</argsstring>
        <name>ToggleDTOG_RX</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="591" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="399" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a99bfd6f71c6a5715f21b375abf495e73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ToggleDTOG_TX</definition>
        <argsstring>(u8)</argsstring>
        <name>ToggleDTOG_TX</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="592" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="410" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a082afcb68f507f320dc05c4f71eee8a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ClearDTOG_RX</definition>
        <argsstring>(u8)</argsstring>
        <name>ClearDTOG_RX</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="593" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="421" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a0b9656b45c779a72f8ba2dbe91738e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ClearDTOG_TX</definition>
        <argsstring>(u8)</argsstring>
        <name>ClearDTOG_TX</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="594" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="432" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a122c105835a33552f1d277325e8d3640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPAddress</definition>
        <argsstring>(u8, u8)</argsstring>
        <name>SetEPAddress</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="595" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="444" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a4ff1ad9ff6825ba8bba0612964fbeec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8</type>
        <definition>u8 GetEPAddress</definition>
        <argsstring>(u8)</argsstring>
        <name>GetEPAddress</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="596" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="455" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a91c2e3183bc7d3b5020cac15d3b1e327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPTxAddr</definition>
        <argsstring>(u8, u16)</argsstring>
        <name>SetEPTxAddr</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="597" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="467" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1ad9aaa93e951b6aebb763805ec09a12d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPRxAddr</definition>
        <argsstring>(u8, u16)</argsstring>
        <name>SetEPRxAddr</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="598" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="479" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1abe78f462d4823b96c03cdc49794fbced" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetEPTxAddr</definition>
        <argsstring>(u8)</argsstring>
        <name>GetEPTxAddr</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="599" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="490" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a2dfe7770b0bfb4313e19bed768f430c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetEPRxAddr</definition>
        <argsstring>(u8)</argsstring>
        <name>GetEPRxAddr</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="600" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="501" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a8a6662427479d8c7626cc257df5f23eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPCountRxReg</definition>
        <argsstring>(u32 *, u16)</argsstring>
        <name>SetEPCountRxReg</name>
        <param>
          <type>u32 *</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="601" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="525" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a8dc754d44a9c154f415016206e2ee792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPTxCount</definition>
        <argsstring>(u8, u16)</argsstring>
        <name>SetEPTxCount</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="602" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="513" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a43a8687bbb38ffdd71ecbd8450d44c8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPRxCount</definition>
        <argsstring>(u8, u16)</argsstring>
        <name>SetEPRxCount</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="603" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="537" bodyend="540"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a4f1f5bb1f419d9c042f223d08c76c039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetEPTxCount</definition>
        <argsstring>(u8)</argsstring>
        <name>GetEPTxCount</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="604" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="548" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a9b53956f07e6a44a4270b0ae1666f8ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetEPRxCount</definition>
        <argsstring>(u8)</argsstring>
        <name>GetEPRxCount</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="605" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="559" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a3db68b2a8926d3d9e107de26edbe3a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPDblBuf0Addr</definition>
        <argsstring>(u8, u16)</argsstring>
        <name>SetEPDblBuf0Addr</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="606" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="584" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a1ab86b4c40028a6b865bc898e2d983ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPDblBuf1Addr</definition>
        <argsstring>(u8, u16)</argsstring>
        <name>SetEPDblBuf1Addr</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="607" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="596" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1ab1e110e31bb9715f1f95c7c590efcf03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPDblBuffAddr</definition>
        <argsstring>(u8, u16, u16)</argsstring>
        <name>SetEPDblBuffAddr</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="608" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="572" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1ad81e925b44b8206bafb2b0e902b02cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetEPDblBuf0Addr</definition>
        <argsstring>(u8)</argsstring>
        <name>GetEPDblBuf0Addr</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="609" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="607" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a45834a23dd7629fa08bf4ca3f38cf004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetEPDblBuf1Addr</definition>
        <argsstring>(u8)</argsstring>
        <name>GetEPDblBuf1Addr</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="610" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="618" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a3bfbb3fbb142d5596cf0eff7ce5a0ea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPDblBuffCount</definition>
        <argsstring>(u8, u8, u16)</argsstring>
        <name>SetEPDblBuffCount</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="611" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="630" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a6e900082517b2c8f264f63aaff0d2e06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPDblBuf0Count</definition>
        <argsstring>(u8, u8, u16)</argsstring>
        <name>SetEPDblBuf0Count</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="612" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="642" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1abb27c858dc4b2bd17d1fa8e75a258276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEPDblBuf1Count</definition>
        <argsstring>(u8, u8, u16)</argsstring>
        <name>SetEPDblBuf1Count</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="613" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="654" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1af4af816eeef6249d40127fea8194d22a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetEPDblBuf0Count</definition>
        <argsstring>(u8)</argsstring>
        <name>GetEPDblBuf0Count</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="614" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="666" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a1e076327b54d1d6c93631e1bbe44084c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 GetEPDblBuf1Count</definition>
        <argsstring>(u8)</argsstring>
        <name>GetEPDblBuf1Count</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="615" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="678" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1ae3ca0929ba1c8f8cf32e30bc3ad5d93e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EP_DBUF_DIR</type>
        <definition>EP_DBUF_DIR GetEPDblBufDir</definition>
        <argsstring>(u8)</argsstring>
        <name>GetEPDblBufDir</name>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="616" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="690" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a46a04102e859ebd964ca332fbbc01d35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeUserBuffer</definition>
        <argsstring>(u8 bEpNum, u8 bDir)</argsstring>
        <name>FreeUserBuffer</name>
        <param>
          <type>u8</type>
          <declname>bEpNum</declname>
        </param>
        <param>
          <type>u8</type>
          <declname>bDir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="617" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="707" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1aad244a3a1c0fad1ab0aeb48762bc3bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 ToWord</definition>
        <argsstring>(u8, u8)</argsstring>
        <name>ToWord</name>
        <param>
          <type>u8</type>
        </param>
        <param>
          <type>u8</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="618" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="726" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="usb__regs_8h_1a1b8b56c68f3fcddd29a0d9f1a1dfe378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u16</type>
        <definition>u16 ByteSwap</definition>
        <argsstring>(u16)</argsstring>
        <name>ByteSwap</name>
        <param>
          <type>u16</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h" line="619" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.c" bodystart="739" bodyend="746"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************<sp/>(C)<sp/>COPYRIGHT<sp/>2008<sp/>STMicroelectronics<sp/>********************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>File<sp/>Name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>usb_regs.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Author<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>MCD<sp/>Application<sp/>Team</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Version<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>V2.2.1</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Date<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>09/22/2008</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Interface<sp/>prototype<sp/>functions<sp/>to<sp/>USB<sp/>cell<sp/>registers</highlight></codeline>
<codeline lineno="7"><highlight class="comment">********************************************************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>THE<sp/>PRESENT<sp/>FIRMWARE<sp/>WHICH<sp/>IS<sp/>FOR<sp/>GUIDANCE<sp/>ONLY<sp/>AIMS<sp/>AT<sp/>PROVIDING<sp/>CUSTOMERS</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>WITH<sp/>CODING<sp/>INFORMATION<sp/>REGARDING<sp/>THEIR<sp/>PRODUCTS<sp/>IN<sp/>ORDER<sp/>FOR<sp/>THEM<sp/>TO<sp/>SAVE<sp/>TIME.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>AS<sp/>A<sp/>RESULT,<sp/>STMICROELECTRONICS<sp/>SHALL<sp/>NOT<sp/>BE<sp/>HELD<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>INDIRECT<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>WITH<sp/>RESPECT<sp/>TO<sp/>ANY<sp/>CLAIMS<sp/>ARISING<sp/>FROM<sp/>THE</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>CONTENT<sp/>OF<sp/>SUCH<sp/>FIRMWARE<sp/>AND/OR<sp/>THE<sp/>USE<sp/>MADE<sp/>BY<sp/>CUSTOMERS<sp/>OF<sp/>THE<sp/>CODING</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>INFORMATION<sp/>CONTAINED<sp/>HEREIN<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THEIR<sp/>PRODUCTS.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Define<sp/>to<sp/>prevent<sp/>recursive<sp/>inclusion<sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__USB_REGS_H</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>__USB_REGS_H</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>types<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_EP_DBUF_DIR</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>double<sp/>buffered<sp/>endpoint<sp/>direction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>EP_DBUF_ERR,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>EP_DBUF_OUT,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>EP_DBUF_IN</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}EP_DBUF_DIR;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>endpoint<sp/>buffer<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>EP_BUF_NUM</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>EP_NOBUF,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>EP_BUF0,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>EP_BUF1</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>constants<sp/>--------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RegBase<sp/><sp/>(0x40005C00L)<sp/><sp/></highlight><highlight class="comment">/*<sp/>USB_IP<sp/>Peripheral<sp/>Registers<sp/>base<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PMAAddr<sp/><sp/>(0x40006000L)<sp/><sp/></highlight><highlight class="comment">/*<sp/>USB_IP<sp/>Packet<sp/>Memory<sp/>Area<sp/>base<sp/>address<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>General<sp/>registers<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Control<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNTR<sp/><sp/><sp/><sp/>((volatile<sp/>unsigned<sp/>*)(RegBase<sp/>+<sp/>0x40))</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Interrupt<sp/>status<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISTR<sp/><sp/><sp/><sp/>((volatile<sp/>unsigned<sp/>*)(RegBase<sp/>+<sp/>0x44))</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Frame<sp/>number<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FNR<sp/><sp/><sp/><sp/><sp/>((volatile<sp/>unsigned<sp/>*)(RegBase<sp/>+<sp/>0x48))</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Device<sp/>address<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DADDR<sp/><sp/><sp/>((volatile<sp/>unsigned<sp/>*)(RegBase<sp/>+<sp/>0x4C))</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Buffer<sp/>Table<sp/>address<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BTABLE<sp/><sp/>((volatile<sp/>unsigned<sp/>*)(RegBase<sp/>+<sp/>0x50))</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Endpoint<sp/>registers<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP0REG<sp/><sp/>((volatile<sp/>unsigned<sp/>*)(RegBase))<sp/></highlight><highlight class="comment">/*<sp/>endpoint<sp/>0<sp/>register<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>endpoints<sp/>enumeration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENDP0<sp/><sp/><sp/>((u8)0)</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ENDP1<sp/><sp/><sp/>((u8)1)</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ENDP2<sp/><sp/><sp/>((u8)2)</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ENDP3<sp/><sp/><sp/>((u8)3)</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ENDP4<sp/><sp/><sp/>((u8)4)</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ENDP5<sp/><sp/><sp/>((u8)5)</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ENDP6<sp/><sp/><sp/>((u8)6)</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ENDP7<sp/><sp/><sp/>((u8)7)</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ISTR<sp/>interrupt<sp/>events<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISTR_CTR<sp/><sp/><sp/><sp/>(0x8000)<sp/></highlight><highlight class="comment">/*<sp/>Correct<sp/>TRansfer<sp/>(clear-only<sp/>bit)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISTR_DOVR<sp/><sp/><sp/>(0x4000)<sp/></highlight><highlight class="comment">/*<sp/>DMA<sp/>OVeR/underrun<sp/>(clear-only<sp/>bit)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISTR_ERR<sp/><sp/><sp/><sp/>(0x2000)<sp/></highlight><highlight class="comment">/*<sp/>ERRor<sp/>(clear-only<sp/>bit)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISTR_WKUP<sp/><sp/><sp/>(0x1000)<sp/></highlight><highlight class="comment">/*<sp/>WaKe<sp/>UP<sp/>(clear-only<sp/>bit)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISTR_SUSP<sp/><sp/><sp/>(0x0800)<sp/></highlight><highlight class="comment">/*<sp/>SUSPend<sp/>(clear-only<sp/>bit)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISTR_RESET<sp/><sp/>(0x0400)<sp/></highlight><highlight class="comment">/*<sp/>RESET<sp/>(clear-only<sp/>bit)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISTR_SOF<sp/><sp/><sp/><sp/>(0x0200)<sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>Of<sp/>Frame<sp/>(clear-only<sp/>bit)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISTR_ESOF<sp/><sp/><sp/>(0x0100)<sp/></highlight><highlight class="comment">/*<sp/>Expected<sp/>Start<sp/>Of<sp/>Frame<sp/>(clear-only<sp/>bit)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISTR_DIR<sp/><sp/><sp/><sp/>(0x0010)<sp/><sp/></highlight><highlight class="comment">/*<sp/>DIRection<sp/>of<sp/>transaction<sp/>(read-only<sp/>bit)<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISTR_EP_ID<sp/><sp/>(0x000F)<sp/><sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>IDentifier<sp/>(read-only<sp/>bit)<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLR_CTR<sp/><sp/><sp/><sp/>(~ISTR_CTR)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>Correct<sp/>TRansfer<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLR_DOVR<sp/><sp/><sp/>(~ISTR_DOVR)<sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>DMA<sp/>OVeR/underrun<sp/>bit*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLR_ERR<sp/><sp/><sp/><sp/>(~ISTR_ERR)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>ERRor<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLR_WKUP<sp/><sp/><sp/>(~ISTR_WKUP)<sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>WaKe<sp/>UP<sp/>bit<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLR_SUSP<sp/><sp/><sp/>(~ISTR_SUSP)<sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>SUSPend<sp/>bit<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLR_RESET<sp/><sp/>(~ISTR_RESET)<sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>RESET<sp/>bit<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLR_SOF<sp/><sp/><sp/><sp/>(~ISTR_SOF)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>Start<sp/>Of<sp/>Frame<sp/>bit<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLR_ESOF<sp/><sp/><sp/>(~ISTR_ESOF)<sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>Expected<sp/>Start<sp/>Of<sp/>Frame<sp/>bit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CNTR<sp/>control<sp/>register<sp/>bits<sp/>definitions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNTR_CTRM<sp/><sp/><sp/>(0x8000)<sp/></highlight><highlight class="comment">/*<sp/>Correct<sp/>TRansfer<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNTR_DOVRM<sp/><sp/>(0x4000)<sp/></highlight><highlight class="comment">/*<sp/>DMA<sp/>OVeR/underrun<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNTR_ERRM<sp/><sp/><sp/>(0x2000)<sp/></highlight><highlight class="comment">/*<sp/>ERRor<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNTR_WKUPM<sp/><sp/>(0x1000)<sp/></highlight><highlight class="comment">/*<sp/>WaKe<sp/>UP<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNTR_SUSPM<sp/><sp/>(0x0800)<sp/></highlight><highlight class="comment">/*<sp/>SUSPend<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNTR_RESETM<sp/>(0x0400)<sp/></highlight><highlight class="comment">/*<sp/>RESET<sp/>Mask<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNTR_SOFM<sp/><sp/><sp/>(0x0200)<sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>Of<sp/>Frame<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNTR_ESOFM<sp/><sp/>(0x0100)<sp/></highlight><highlight class="comment">/*<sp/>Expected<sp/>Start<sp/>Of<sp/>Frame<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNTR_RESUME<sp/>(0x0010)<sp/></highlight><highlight class="comment">/*<sp/>RESUME<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNTR_FSUSP<sp/><sp/>(0x0008)<sp/></highlight><highlight class="comment">/*<sp/>Force<sp/>SUSPend<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNTR_LPMODE<sp/>(0x0004)<sp/></highlight><highlight class="comment">/*<sp/>Low-power<sp/>MODE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNTR_PDWN<sp/><sp/><sp/>(0x0002)<sp/></highlight><highlight class="comment">/*<sp/>Power<sp/>DoWN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CNTR_FRES<sp/><sp/><sp/>(0x0001)<sp/></highlight><highlight class="comment">/*<sp/>Force<sp/>USB<sp/>RESet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FNR<sp/>Frame<sp/>Number<sp/>Register<sp/>bit<sp/>definitions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FNR_RXDP<sp/>(0x8000)<sp/></highlight><highlight class="comment">/*<sp/>status<sp/>of<sp/>D+<sp/>data<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FNR_RXDM<sp/>(0x4000)<sp/></highlight><highlight class="comment">/*<sp/>status<sp/>of<sp/>D-<sp/>data<sp/>line<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FNR_LCK<sp/><sp/>(0x2000)<sp/></highlight><highlight class="comment">/*<sp/>LoCKed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FNR_LSOF<sp/>(0x1800)<sp/></highlight><highlight class="comment">/*<sp/>Lost<sp/>SOF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FNR_FN<sp/><sp/>(0x07FF)<sp/></highlight><highlight class="comment">/*<sp/>Frame<sp/>Number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DADDR<sp/>Device<sp/>ADDRess<sp/>bit<sp/>definitions<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DADDR_EF<sp/>(0x80)</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DADDR_ADD<sp/>(0x7F)</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Endpoint<sp/>register<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>bit<sp/>positions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_CTR_RX<sp/><sp/><sp/><sp/><sp/><sp/>(0x8000)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>Correct<sp/>TRansfer<sp/>RX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_DTOG_RX<sp/><sp/><sp/><sp/><sp/>(0x4000)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>Data<sp/>TOGGLE<sp/>RX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EPRX_STAT<sp/><sp/><sp/><sp/><sp/><sp/>(0x3000)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>RX<sp/>STATus<sp/>bit<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_SETUP<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0800)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>SETUP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_T_FIELD<sp/><sp/><sp/><sp/><sp/>(0x0600)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>TYPE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_KIND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0100)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>KIND<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_CTR_TX<sp/><sp/><sp/><sp/><sp/><sp/>(0x0080)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>Correct<sp/>TRansfer<sp/>TX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_DTOG_TX<sp/><sp/><sp/><sp/><sp/>(0x0040)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>Data<sp/>TOGGLE<sp/>TX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EPTX_STAT<sp/><sp/><sp/><sp/><sp/><sp/>(0x0030)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>TX<sp/>STATus<sp/>bit<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EPADDR_FIELD<sp/><sp/><sp/>(0x000F)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>ADDRess<sp/>FIELD<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>REGister<sp/>MASK<sp/>(no<sp/>toggle<sp/>fields)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EPREG_MASK<sp/><sp/><sp/><sp/><sp/>(EP_CTR_RX|EP_SETUP|EP_T_FIELD|EP_KIND|EP_CTR_TX|EPADDR_FIELD)</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EP_TYPE[1:0]<sp/>EndPoint<sp/>TYPE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_TYPE_MASK<sp/><sp/><sp/>(0x0600)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>TYPE<sp/>Mask<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_BULK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x0000)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>BULK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_CONTROL<sp/><sp/><sp/><sp/><sp/>(0x0200)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>CONTROL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_ISOCHRONOUS<sp/>(0x0400)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>ISOCHRONOUS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_INTERRUPT<sp/><sp/><sp/>(0x0600)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>INTERRUPT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_T_MASK<sp/><sp/><sp/><sp/><sp/><sp/>(~EP_T_FIELD<sp/>&amp;<sp/>EPREG_MASK)</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>EP_KIND<sp/>EndPoint<sp/>KIND<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EPKIND_MASK<sp/><sp/><sp/><sp/>(~EP_KIND<sp/>&amp;<sp/>EPREG_MASK)</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>STAT_TX[1:0]<sp/>STATus<sp/>for<sp/>TX<sp/>transfer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_TX_DIS<sp/><sp/><sp/><sp/><sp/><sp/>(0x0000)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>TX<sp/>DISabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_TX_STALL<sp/><sp/><sp/><sp/>(0x0010)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>TX<sp/>STALLed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_TX_NAK<sp/><sp/><sp/><sp/><sp/><sp/>(0x0020)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>TX<sp/>NAKed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_TX_VALID<sp/><sp/><sp/><sp/>(0x0030)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>TX<sp/>VALID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EPTX_DTOG1<sp/><sp/><sp/><sp/><sp/>(0x0010)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>TX<sp/>Data<sp/>TOGgle<sp/>bit1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EPTX_DTOG2<sp/><sp/><sp/><sp/><sp/>(0x0020)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>TX<sp/>Data<sp/>TOGgle<sp/>bit2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EPTX_DTOGMASK<sp/><sp/>(EPTX_STAT|EPREG_MASK)</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>STAT_RX[1:0]<sp/>STATus<sp/>for<sp/>RX<sp/>transfer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_RX_DIS<sp/><sp/><sp/><sp/><sp/><sp/>(0x0000)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>RX<sp/>DISabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_RX_STALL<sp/><sp/><sp/><sp/>(0x1000)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>RX<sp/>STALLed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_RX_NAK<sp/><sp/><sp/><sp/><sp/><sp/>(0x2000)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>RX<sp/>NAKed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EP_RX_VALID<sp/><sp/><sp/><sp/>(0x3000)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>RX<sp/>VALID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EPRX_DTOG1<sp/><sp/><sp/><sp/><sp/>(0x1000)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>RX<sp/>Data<sp/>TOGgle<sp/>bit1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EPRX_DTOG2<sp/><sp/><sp/><sp/><sp/>(0x2000)<sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>RX<sp/>Data<sp/>TOGgle<sp/>bit1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EPRX_DTOGMASK<sp/><sp/>(EPRX_STAT|EPREG_MASK)</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Exported<sp/>macro<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SetCNTR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetCNTR(wRegValue)<sp/><sp/>(*CNTR<sp/><sp/><sp/>=<sp/>(u16)wRegValue)</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SetISTR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetISTR(wRegValue)<sp/><sp/>(*ISTR<sp/><sp/><sp/>=<sp/>(u16)wRegValue)</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SetDADDR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetDADDR(wRegValue)<sp/>(*DADDR<sp/><sp/>=<sp/>(u16)wRegValue)</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SetBTABLE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetBTABLE(wRegValue)(*BTABLE<sp/>=<sp/>(u16)(wRegValue<sp/>&amp;<sp/>0xFFF8))</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetCNTR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetCNTR()<sp/><sp/><sp/>((u16)<sp/>*CNTR)</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetISTR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetISTR()<sp/><sp/><sp/>((u16)<sp/>*ISTR)</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetFNR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetFNR()<sp/><sp/><sp/><sp/>((u16)<sp/>*FNR)</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetDADDR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetDADDR()<sp/><sp/>((u16)<sp/>*DADDR)</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetBTABLE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetBTABLE()<sp/>((u16)<sp/>*BTABLE)</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SetENDPOINT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetENDPOINT(bEpNum,wRegValue)<sp/><sp/>(*(EP0REG<sp/>+<sp/>bEpNum)=<sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(u16)wRegValue)</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GetENDPOINT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetENDPOINT(bEpNum)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((u16)(*(EP0REG<sp/>+<sp/>bEpNum)))</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="214"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>SetEPType</highlight></codeline>
<codeline lineno="215"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>sets<sp/>the<sp/>type<sp/>in<sp/>the<sp/>endpoint<sp/>register(bits<sp/>EP_TYPE[1:0])</highlight></codeline>
<codeline lineno="216"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wType</highlight></codeline>
<codeline lineno="218"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="219"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="220"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPType(bEpNum,wType)<sp/>(_SetENDPOINT(bEpNum,\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>EP_T_MASK)<sp/>|<sp/>wType)))</highlight></codeline>
<codeline lineno="223"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="225"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>GetEPType</highlight></codeline>
<codeline lineno="226"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>gets<sp/>the<sp/>type<sp/>in<sp/>the<sp/>endpoint<sp/>register(bits<sp/>EP_TYPE[1:0])<sp/></highlight></codeline>
<codeline lineno="227"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.<sp/></highlight></codeline>
<codeline lineno="228"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="229"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Endpoint<sp/>Type</highlight></codeline>
<codeline lineno="230"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetEPType(bEpNum)<sp/>(_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>EP_T_FIELD)</highlight></codeline>
<codeline lineno="232"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="234"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>SetEPTxStatus</highlight></codeline>
<codeline lineno="235"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>sets<sp/>the<sp/>status<sp/>for<sp/>tx<sp/>transfer<sp/>(bits<sp/>STAT_TX[1:0]).</highlight></codeline>
<codeline lineno="236"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.<sp/></highlight></codeline>
<codeline lineno="237"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wState:<sp/>new<sp/>state</highlight></codeline>
<codeline lineno="238"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="239"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="240"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPTxStatus(bEpNum,wState)<sp/>{\</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>register<sp/>u16<sp/>_wRegVal;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_wRegVal<sp/>=<sp/>_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>EPTX_DTOGMASK;\</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>toggle<sp/>first<sp/>bit<sp/>?<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>if((EPTX_DTOG1<sp/>&amp;<sp/>wState)!=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_wRegVal<sp/>^=<sp/>EPTX_DTOG1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>toggle<sp/>second<sp/>bit<sp/>?<sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>if((EPTX_DTOG2<sp/>&amp;<sp/>wState)!=<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_wRegVal<sp/>^=<sp/>EPTX_DTOG2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>_SetENDPOINT(bEpNum,<sp/>_wRegVal);<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>_SetEPTxStatus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="254"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>SetEPRxStatus</highlight></codeline>
<codeline lineno="255"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>sets<sp/>the<sp/>status<sp/>for<sp/>rx<sp/>transfer<sp/>(bits<sp/>STAT_TX[1:0])</highlight></codeline>
<codeline lineno="256"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.<sp/></highlight></codeline>
<codeline lineno="257"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wState:<sp/>new<sp/>state.</highlight></codeline>
<codeline lineno="258"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="259"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="260"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPRxStatus(bEpNum,wState)<sp/>{\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>register<sp/>u16<sp/>_wRegVal;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_wRegVal<sp/>=<sp/>_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>EPRX_DTOGMASK;\</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>toggle<sp/>first<sp/>bit<sp/>?<sp/>*/</highlight><highlight class="normal"><sp/><sp/>\</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>if((EPRX_DTOG1<sp/>&amp;<sp/>wState)!=<sp/>0)<sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_wRegVal<sp/>^=<sp/>EPRX_DTOG1;<sp/><sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>toggle<sp/>second<sp/>bit<sp/>?<sp/>*/</highlight><highlight class="normal"><sp/><sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>if((EPRX_DTOG2<sp/>&amp;<sp/>wState)!=<sp/>0)<sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_wRegVal<sp/>^=<sp/>EPRX_DTOG2;<sp/><sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>_SetENDPOINT(bEpNum,<sp/>_wRegVal);<sp/>\</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>_SetEPRxStatus<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="274"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>GetEPTxStatus<sp/>/<sp/>GetEPRxStatus<sp/></highlight></codeline>
<codeline lineno="275"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>gets<sp/>the<sp/>status<sp/>for<sp/>tx/rx<sp/>transfer<sp/>(bits<sp/>STAT_TX[1:0]</highlight></codeline>
<codeline lineno="276"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/STAT_RX[1:0])</highlight></codeline>
<codeline lineno="277"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.<sp/></highlight></codeline>
<codeline lineno="278"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="279"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>status<sp/>.</highlight></codeline>
<codeline lineno="280"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetEPTxStatus(bEpNum)<sp/>((u16)_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>EPTX_STAT)</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetEPRxStatus(bEpNum)<sp/>((u16)_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>EPRX_STAT)</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="286"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>SetEPTxValid<sp/>/<sp/>SetEPRxValid<sp/></highlight></codeline>
<codeline lineno="287"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>sets<sp/>directly<sp/>the<sp/>VALID<sp/>tx/rx-status<sp/>into<sp/>the<sp/>enpoint<sp/>register</highlight></codeline>
<codeline lineno="288"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.<sp/></highlight></codeline>
<codeline lineno="289"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="290"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="291"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPTxValid(bEpNum)<sp/><sp/><sp/><sp/><sp/>(_SetEPTxStatus(bEpNum,<sp/>EP_TX_VALID))</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPRxValid(bEpNum)<sp/><sp/><sp/><sp/><sp/>(_SetEPRxStatus(bEpNum,<sp/>EP_RX_VALID))</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="297"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>GetTxStallStatus<sp/>/<sp/>GetRxStallStatus.</highlight></codeline>
<codeline lineno="298"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>checks<sp/>stall<sp/>condition<sp/>in<sp/>an<sp/>endpoint.</highlight></codeline>
<codeline lineno="299"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.<sp/></highlight></codeline>
<codeline lineno="300"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="301"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>TRUE<sp/>=<sp/>endpoint<sp/>in<sp/>stall<sp/>condition.</highlight></codeline>
<codeline lineno="302"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetTxStallStatus(bEpNum)<sp/>(_GetEPTxStatus(bEpNum)<sp/>\</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>EP_TX_STALL)</highlight></codeline>
<codeline lineno="305"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_GetRxStallStatus(bEpNum)<sp/>(_GetEPRxStatus(bEpNum)<sp/>\</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/>EP_RX_STALL)</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="309"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>SetEP_KIND<sp/>/<sp/>ClearEP_KIND.</highlight></codeline>
<codeline lineno="310"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>set<sp/>&amp;<sp/>clear<sp/>EP_KIND<sp/>bit.</highlight></codeline>
<codeline lineno="311"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.<sp/></highlight></codeline>
<codeline lineno="312"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="313"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="314"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEP_KIND(bEpNum)<sp/><sp/><sp/><sp/>(_SetENDPOINT(bEpNum,<sp/>\</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(_GetENDPOINT(bEpNum)<sp/>|<sp/>EP_KIND)<sp/>&amp;<sp/>EPREG_MASK))</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_ClearEP_KIND(bEpNum)<sp/><sp/>(_SetENDPOINT(bEpNum,<sp/>\</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>EPKIND_MASK)))</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="321"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>Set_Status_Out<sp/>/<sp/>Clear_Status_Out.</highlight></codeline>
<codeline lineno="322"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Sets/clears<sp/>directly<sp/>STATUS_OUT<sp/>bit<sp/>in<sp/>the<sp/>endpoint<sp/>register.</highlight></codeline>
<codeline lineno="323"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.<sp/></highlight></codeline>
<codeline lineno="324"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="325"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="326"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Set_Status_Out(bEpNum)<sp/><sp/><sp/><sp/>_SetEP_KIND(bEpNum)</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_Clear_Status_Out(bEpNum)<sp/><sp/>_ClearEP_KIND(bEpNum)</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="331"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>SetEPDoubleBuff<sp/>/<sp/>ClearEPDoubleBuff.</highlight></codeline>
<codeline lineno="332"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Sets/clears<sp/>directly<sp/>EP_KIND<sp/>bit<sp/>in<sp/>the<sp/>endpoint<sp/>register.</highlight></codeline>
<codeline lineno="333"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.<sp/></highlight></codeline>
<codeline lineno="334"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="335"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="336"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPDoubleBuff(bEpNum)<sp/><sp/><sp/>_SetEP_KIND(bEpNum)</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_ClearEPDoubleBuff(bEpNum)<sp/>_ClearEP_KIND(bEpNum)</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="341"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>ClearEP_CTR_RX<sp/>/<sp/>ClearEP_CTR_TX.</highlight></codeline>
<codeline lineno="342"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Clears<sp/>bit<sp/>CTR_RX<sp/>/<sp/>CTR_TX<sp/>in<sp/>the<sp/>endpoint<sp/>register.</highlight></codeline>
<codeline lineno="343"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.<sp/></highlight></codeline>
<codeline lineno="344"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="345"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="346"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_ClearEP_CTR_RX(bEpNum)<sp/><sp/><sp/>(_SetENDPOINT(bEpNum,\</highlight></codeline>
<codeline lineno="348"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>0x7FFF<sp/>&amp;<sp/>EPREG_MASK))</highlight></codeline>
<codeline lineno="349"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_ClearEP_CTR_TX(bEpNum)<sp/><sp/><sp/>(_SetENDPOINT(bEpNum,\</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>0xFF7F<sp/>&amp;<sp/>EPREG_MASK))</highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="353"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>ToggleDTOG_RX<sp/>/<sp/>ToggleDTOG_TX<sp/>.</highlight></codeline>
<codeline lineno="354"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Toggles<sp/>DTOG_RX<sp/>/<sp/>DTOG_TX<sp/>bit<sp/>in<sp/>the<sp/>endpoint<sp/>register.</highlight></codeline>
<codeline lineno="355"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.<sp/></highlight></codeline>
<codeline lineno="356"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="357"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="358"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_ToggleDTOG_RX(bEpNum)<sp/><sp/><sp/><sp/>(_SetENDPOINT(bEpNum,<sp/>\</highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EP_DTOG_RX<sp/>|<sp/>(_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>EPREG_MASK)))</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_ToggleDTOG_TX(bEpNum)<sp/><sp/><sp/><sp/>(_SetENDPOINT(bEpNum,<sp/>\</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EP_DTOG_TX<sp/>|<sp/>(_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>EPREG_MASK)))</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="365"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>ClearDTOG_RX<sp/>/<sp/>ClearDTOG_TX.</highlight></codeline>
<codeline lineno="366"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Clears<sp/>DTOG_RX<sp/>/<sp/>DTOG_TX<sp/>bit<sp/>in<sp/>the<sp/>endpoint<sp/>register.</highlight></codeline>
<codeline lineno="367"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.<sp/></highlight></codeline>
<codeline lineno="368"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="369"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="370"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_ClearDTOG_RX(bEpNum)<sp/><sp/>if((_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>EP_DTOG_RX)<sp/>!=<sp/>0)\</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_ToggleDTOG_RX(bEpNum)</highlight></codeline>
<codeline lineno="373"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_ClearDTOG_TX(bEpNum)<sp/><sp/>if((_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>EP_DTOG_TX)<sp/>!=<sp/>0)\</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_ToggleDTOG_TX(bEpNum)</highlight></codeline>
<codeline lineno="375"><highlight class="preprocessor"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="376"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>SetEPAddress.</highlight></codeline>
<codeline lineno="377"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Sets<sp/>address<sp/>in<sp/>an<sp/>endpoint<sp/>register.</highlight></codeline>
<codeline lineno="378"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.</highlight></codeline>
<codeline lineno="379"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bAddr:<sp/>Address.<sp/></highlight></codeline>
<codeline lineno="380"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="381"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="382"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPAddress(bEpNum,bAddr)<sp/>_SetENDPOINT(bEpNum,\</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>EPREG_MASK)<sp/>|<sp/>bAddr)</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="387"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>GetEPAddress.</highlight></codeline>
<codeline lineno="388"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Gets<sp/>address<sp/>in<sp/>an<sp/>endpoint<sp/>register.</highlight></codeline>
<codeline lineno="389"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.</highlight></codeline>
<codeline lineno="390"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="391"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="392"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetEPAddress(bEpNum)<sp/>((u8)(_GetENDPOINT(bEpNum)<sp/>&amp;<sp/>EPADDR_FIELD))</highlight></codeline>
<codeline lineno="394"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_pEPTxAddr(bEpNum)<sp/>((u32<sp/>*)((_GetBTABLE()+bEpNum*8<sp/><sp/>)*2<sp/>+<sp/>PMAAddr))</highlight></codeline>
<codeline lineno="396"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_pEPTxCount(bEpNum)<sp/>((u32<sp/>*)((_GetBTABLE()+bEpNum*8+2)*2<sp/>+<sp/>PMAAddr))</highlight></codeline>
<codeline lineno="397"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_pEPRxAddr(bEpNum)<sp/>((u32<sp/>*)((_GetBTABLE()+bEpNum*8+4)*2<sp/>+<sp/>PMAAddr))</highlight></codeline>
<codeline lineno="398"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_pEPRxCount(bEpNum)<sp/>((u32<sp/>*)((_GetBTABLE()+bEpNum*8+6)*2<sp/>+<sp/>PMAAddr))</highlight></codeline>
<codeline lineno="399"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="401"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>SetEPTxAddr<sp/>/<sp/>SetEPRxAddr.</highlight></codeline>
<codeline lineno="402"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>sets<sp/>address<sp/>of<sp/>the<sp/>tx/rx<sp/>buffer.</highlight></codeline>
<codeline lineno="403"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.</highlight></codeline>
<codeline lineno="404"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wAddr:<sp/>address<sp/>to<sp/>be<sp/>set<sp/>(must<sp/>be<sp/>word<sp/>aligned).</highlight></codeline>
<codeline lineno="405"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="406"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="407"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPTxAddr(bEpNum,wAddr)<sp/>(*_pEPTxAddr(bEpNum)<sp/>=<sp/>((wAddr<sp/>&gt;&gt;<sp/>1)<sp/>&lt;&lt;<sp/>1))</highlight></codeline>
<codeline lineno="409"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_SetEPRxAddr(bEpNum,wAddr)<sp/>(*_pEPRxAddr(bEpNum)<sp/>=<sp/>((wAddr<sp/>&gt;&gt;<sp/>1)<sp/>&lt;&lt;<sp/>1))</highlight></codeline>
<codeline lineno="410"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="412"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>GetEPTxAddr<sp/>/<sp/>GetEPRxAddr.</highlight></codeline>
<codeline lineno="413"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Gets<sp/>address<sp/>of<sp/>the<sp/>tx/rx<sp/>buffer.</highlight></codeline>
<codeline lineno="414"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>Endpoint<sp/>Number.</highlight></codeline>
<codeline lineno="415"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="416"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>address<sp/>of<sp/>the<sp/>buffer.</highlight></codeline>
<codeline lineno="417"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetEPTxAddr(bEpNum)<sp/>((u16)*_pEPTxAddr(bEpNum))</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_GetEPRxAddr(bEpNum)<sp/>((u16)*_pEPRxAddr(bEpNum))</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="422"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>SetEPCountRxReg.</highlight></codeline>
<codeline lineno="423"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Sets<sp/>counter<sp/>of<sp/>rx<sp/>buffer<sp/>with<sp/>no.<sp/>of<sp/>blocks.</highlight></codeline>
<codeline lineno="424"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>pdwReg:<sp/>pointer<sp/>to<sp/>counter.</highlight></codeline>
<codeline lineno="425"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wCount:<sp/>Counter.</highlight></codeline>
<codeline lineno="426"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="427"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="428"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_BlocksOf32(dwReg,wCount,wNBlocks)<sp/>{\</highlight></codeline>
<codeline lineno="430"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>wNBlocks<sp/>=<sp/>wCount<sp/>&gt;&gt;<sp/>5;\</highlight></codeline>
<codeline lineno="431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if((wCount<sp/>&amp;<sp/>0x1f)<sp/>==<sp/>0)\</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>wNBlocks--;\</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*pdwReg<sp/>=<sp/>(u32)((wNBlocks<sp/>&lt;&lt;<sp/>10)<sp/>|<sp/>0x8000);\</highlight></codeline>
<codeline lineno="434"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="comment">/*<sp/>_BlocksOf32<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_BlocksOf2(dwReg,wCount,wNBlocks)<sp/>{\</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>wNBlocks<sp/>=<sp/>wCount<sp/>&gt;&gt;<sp/>1;\</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if((wCount<sp/>&amp;<sp/>0x1)<sp/>!=<sp/>0)\</highlight></codeline>
<codeline lineno="439"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>wNBlocks++;\</highlight></codeline>
<codeline lineno="440"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*pdwReg<sp/>=<sp/>(u32)(wNBlocks<sp/>&lt;&lt;<sp/>10);\</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="comment">/*<sp/>_BlocksOf2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPCountRxReg(dwReg,wCount)<sp/><sp/>{\</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>u16<sp/>wNBlocks;\</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if(wCount<sp/>&gt;<sp/>62){_BlocksOf32(dwReg,wCount,wNBlocks);}\</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>else<sp/>{_BlocksOf2(dwReg,wCount,wNBlocks);}\</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="comment">/*<sp/>_SetEPCountRxReg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPRxDblBuf0Count(bEpNum,wCount)<sp/>{\</highlight></codeline>
<codeline lineno="452"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>u32<sp/>*pdwReg<sp/>=<sp/>_pEPTxCount(bEpNum);<sp/>\</highlight></codeline>
<codeline lineno="453"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_SetEPCountRxReg(pdwReg,<sp/>wCount);\</highlight></codeline>
<codeline lineno="454"><highlight class="preprocessor"><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="preprocessor"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="456"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>SetEPTxCount<sp/>/<sp/>SetEPRxCount.</highlight></codeline>
<codeline lineno="457"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>sets<sp/>counter<sp/>for<sp/>the<sp/>tx/rx<sp/>buffer.</highlight></codeline>
<codeline lineno="458"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>endpoint<sp/>number.</highlight></codeline>
<codeline lineno="459"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wCount:<sp/>Counter<sp/>value.</highlight></codeline>
<codeline lineno="460"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="461"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="462"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPTxCount(bEpNum,wCount)<sp/>(*_pEPTxCount(bEpNum)<sp/>=<sp/>wCount)</highlight></codeline>
<codeline lineno="464"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_SetEPRxCount(bEpNum,wCount)<sp/>{\</highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>u32<sp/>*pdwReg<sp/>=<sp/>_pEPRxCount(bEpNum);<sp/>\</highlight></codeline>
<codeline lineno="466"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_SetEPCountRxReg(pdwReg,<sp/>wCount);\</highlight></codeline>
<codeline lineno="467"><highlight class="preprocessor"><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="preprocessor"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="469"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>GetEPTxCount<sp/>/<sp/>GetEPRxCount.</highlight></codeline>
<codeline lineno="470"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>gets<sp/>counter<sp/>of<sp/>the<sp/>tx<sp/>buffer.</highlight></codeline>
<codeline lineno="471"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>endpoint<sp/>number.</highlight></codeline>
<codeline lineno="472"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="473"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Counter<sp/>value.</highlight></codeline>
<codeline lineno="474"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetEPTxCount(bEpNum)((u16)(*_pEPTxCount(bEpNum))<sp/>&amp;<sp/>0x3ff)</highlight></codeline>
<codeline lineno="476"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_GetEPRxCount(bEpNum)((u16)(*_pEPRxCount(bEpNum))<sp/>&amp;<sp/>0x3ff)</highlight></codeline>
<codeline lineno="477"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="479"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>SetEPDblBuf0Addr<sp/>/<sp/>SetEPDblBuf1Addr.</highlight></codeline>
<codeline lineno="480"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Sets<sp/>buffer<sp/>0/1<sp/>address<sp/>in<sp/>a<sp/>double<sp/>buffer<sp/>endpoint.</highlight></codeline>
<codeline lineno="481"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>endpoint<sp/>number.</highlight></codeline>
<codeline lineno="482"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>wBuf0Addr:<sp/>buffer<sp/>0<sp/>address.</highlight></codeline>
<codeline lineno="483"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="484"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="485"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPDblBuf0Addr(bEpNum,wBuf0Addr)<sp/>{_SetEPTxAddr(bEpNum,<sp/>wBuf0Addr);}</highlight></codeline>
<codeline lineno="487"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_SetEPDblBuf1Addr(bEpNum,wBuf1Addr)<sp/>{_SetEPRxAddr(bEpNum,<sp/>wBuf1Addr);}</highlight></codeline>
<codeline lineno="488"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="490"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>SetEPDblBuffAddr.</highlight></codeline>
<codeline lineno="491"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Sets<sp/>addresses<sp/>in<sp/>a<sp/>double<sp/>buffer<sp/>endpoint.</highlight></codeline>
<codeline lineno="492"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>endpoint<sp/>number.</highlight></codeline>
<codeline lineno="493"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>wBuf0Addr:<sp/>buffer<sp/>0<sp/>address.</highlight></codeline>
<codeline lineno="494"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>wBuf1Addr<sp/>=<sp/>buffer<sp/>1<sp/>address.</highlight></codeline>
<codeline lineno="495"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="496"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="497"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPDblBuffAddr(bEpNum,wBuf0Addr,wBuf1Addr)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="499"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_SetEPDblBuf0Addr(bEpNum,<sp/>wBuf0Addr);\</highlight></codeline>
<codeline lineno="500"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_SetEPDblBuf1Addr(bEpNum,<sp/>wBuf1Addr);\</highlight></codeline>
<codeline lineno="501"><highlight class="preprocessor"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>_SetEPDblBuffAddr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="504"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>GetEPDblBuf0Addr<sp/>/<sp/>GetEPDblBuf1Addr.</highlight></codeline>
<codeline lineno="505"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Gets<sp/>buffer<sp/>0/1<sp/>address<sp/>of<sp/>a<sp/>double<sp/>buffer<sp/>endpoint.</highlight></codeline>
<codeline lineno="506"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>endpoint<sp/>number.</highlight></codeline>
<codeline lineno="507"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="508"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="509"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetEPDblBuf0Addr(bEpNum)<sp/>(_GetEPTxAddr(bEpNum))</highlight></codeline>
<codeline lineno="511"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_GetEPDblBuf1Addr(bEpNum)<sp/>(_GetEPRxAddr(bEpNum))</highlight></codeline>
<codeline lineno="512"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="514"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>SetEPDblBuffCount<sp/>/<sp/>SetEPDblBuf0Count<sp/>/<sp/>SetEPDblBuf1Count.</highlight></codeline>
<codeline lineno="515"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Gets<sp/>buffer<sp/>0/1<sp/>address<sp/>of<sp/>a<sp/>double<sp/>buffer<sp/>endpoint.</highlight></codeline>
<codeline lineno="516"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>endpoint<sp/>number.</highlight></codeline>
<codeline lineno="517"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bDir:<sp/>endpoint<sp/>dir<sp/><sp/>EP_DBUF_OUT<sp/>=<sp/>OUT<sp/></highlight></codeline>
<codeline lineno="518"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EP_DBUF_IN<sp/><sp/>=<sp/>IN<sp/></highlight></codeline>
<codeline lineno="519"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>wCount:<sp/>Counter<sp/>value<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="520"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="521"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="522"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPDblBuf0Count(bEpNum,<sp/>bDir,<sp/>wCount)<sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="524"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if(bDir<sp/>==<sp/>EP_DBUF_OUT)\</highlight></codeline>
<codeline lineno="525"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OUT<sp/>endpoint<sp/>*/</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>{_SetEPRxDblBuf0Count(bEpNum,wCount);}<sp/>\</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>else<sp/>if(bDir<sp/>==<sp/>EP_DBUF_IN)\</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>endpoint<sp/>*/</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*_pEPTxCount(bEpNum)<sp/>=<sp/>(u32)wCount;<sp/><sp/>\</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>SetEPDblBuf0Count*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPDblBuf1Count(bEpNum,<sp/>bDir,<sp/>wCount)<sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="533"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if(bDir<sp/>==<sp/>EP_DBUF_OUT)\</highlight></codeline>
<codeline lineno="534"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OUT<sp/>endpoint<sp/>*/</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>{_SetEPRxCount(bEpNum,wCount);}\</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>else<sp/>if(bDir<sp/>==<sp/>EP_DBUF_IN)\</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>endpoint<sp/>*/</highlight><highlight class="normal">\</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*_pEPRxCount(bEpNum)<sp/>=<sp/>(u32)wCount;<sp/>\</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>SetEPDblBuf1Count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_SetEPDblBuffCount(bEpNum,<sp/>bDir,<sp/>wCount)<sp/>{\</highlight></codeline>
<codeline lineno="542"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_SetEPDblBuf0Count(bEpNum,<sp/>bDir,<sp/>wCount);<sp/>\</highlight></codeline>
<codeline lineno="543"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_SetEPDblBuf1Count(bEpNum,<sp/>bDir,<sp/>wCount);<sp/>\</highlight></codeline>
<codeline lineno="544"><highlight class="preprocessor"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>_SetEPDblBuffCount<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="547"><highlight class="comment">*<sp/>Macro<sp/>Name<sp/><sp/><sp/><sp/><sp/>:<sp/>GetEPDblBuf0Count<sp/>/<sp/>GetEPDblBuf1Count.</highlight></codeline>
<codeline lineno="548"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Gets<sp/>buffer<sp/>0/1<sp/>rx/tx<sp/>counter<sp/>for<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="549"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>bEpNum:<sp/>endpoint<sp/>number.</highlight></codeline>
<codeline lineno="550"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="551"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="552"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GetEPDblBuf0Count(bEpNum)<sp/>(_GetEPTxCount(bEpNum))</highlight></codeline>
<codeline lineno="554"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_GetEPDblBuf1Count(bEpNum)<sp/>(_GetEPRxCount(bEpNum))</highlight></codeline>
<codeline lineno="555"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>External<sp/>variables<sp/>--------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>u16<sp/>wIstr;<sp/><sp/></highlight><highlight class="comment">/*<sp/>ISTR<sp/>register<sp/>last<sp/>read<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Exported<sp/>functions<sp/>-------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetCNTR(u16<sp/></highlight><highlight class="comment">/*wRegValue*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetISTR(u16<sp/></highlight><highlight class="comment">/*wRegValue*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetDADDR(u16<sp/></highlight><highlight class="comment">/*wRegValue*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetBTABLE(u16<sp/></highlight><highlight class="comment">/*wRegValue*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="565"><highlight class="normal">u16<sp/>GetCNTR(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="566"><highlight class="normal">u16<sp/>GetISTR(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal">u16<sp/>GetFNR(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="568"><highlight class="normal">u16<sp/>GetDADDR(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal">u16<sp/>GetBTABLE(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetENDPOINT(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wRegValue*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="571"><highlight class="normal">u16<sp/>GetENDPOINT(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPType(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wType*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="573"><highlight class="normal">u16<sp/>GetEPType(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPTxStatus(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wState*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPRxStatus(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wState*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetDouBleBuffEPStall(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u8<sp/>bDir);</highlight></codeline>
<codeline lineno="577"><highlight class="normal">u16<sp/>GetEPTxStatus(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="578"><highlight class="normal">u16<sp/>GetEPRxStatus(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPTxValid(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPRxValid(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="581"><highlight class="normal">u16<sp/>GetTxStallStatus(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="582"><highlight class="normal">u16<sp/>GetRxStallStatus(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEP_KIND(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearEP_KIND(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Set_Status_Out(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clear_Status_Out(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPDoubleBuff(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearEPDoubleBuff(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearEP_CTR_RX(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearEP_CTR_TX(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ToggleDTOG_RX(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ToggleDTOG_TX(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearDTOG_RX(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearDTOG_TX(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPAddress(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u8<sp/></highlight><highlight class="comment">/*bAddr*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="596"><highlight class="normal">u8<sp/>GetEPAddress(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPTxAddr(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wAddr*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPRxAddr(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wAddr*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="599"><highlight class="normal">u16<sp/>GetEPTxAddr(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal">u16<sp/>GetEPRxAddr(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPCountRxReg(u32<sp/>*<sp/></highlight><highlight class="comment">/*pdwReg*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wCount*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPTxCount(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wCount*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPRxCount(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wCount*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal">u16<sp/>GetEPTxCount(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="605"><highlight class="normal">u16<sp/>GetEPRxCount(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPDblBuf0Addr(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wBuf0Addr*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPDblBuf1Addr(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wBuf1Addr*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPDblBuffAddr(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wBuf0Addr*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wBuf1Addr*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="609"><highlight class="normal">u16<sp/>GetEPDblBuf0Addr(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="610"><highlight class="normal">u16<sp/>GetEPDblBuf1Addr(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPDblBuffCount(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u8<sp/></highlight><highlight class="comment">/*bDir*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wCount*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPDblBuf0Count(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u8<sp/></highlight><highlight class="comment">/*bDir*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wCount*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetEPDblBuf1Count(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u8<sp/></highlight><highlight class="comment">/*bDir*/</highlight><highlight class="normal">,<sp/>u16<sp/></highlight><highlight class="comment">/*wCount*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="614"><highlight class="normal">u16<sp/>GetEPDblBuf0Count(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="615"><highlight class="normal">u16<sp/>GetEPDblBuf1Count(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal">EP_DBUF_DIR<sp/>GetEPDblBufDir(u8<sp/></highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FreeUserBuffer(u8<sp/>bEpNum</highlight><highlight class="comment">/*bEpNum*/</highlight><highlight class="normal">,<sp/>u8<sp/>bDir);</highlight></codeline>
<codeline lineno="618"><highlight class="normal">u16<sp/>ToWord(u8,<sp/>u8);</highlight></codeline>
<codeline lineno="619"><highlight class="normal">u16<sp/>ByteSwap(u16);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight></codeline>
<codeline lineno="622"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="624"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__USB_REGS_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2008<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_regs.h"/>
  </compounddef>
</doxygen>
