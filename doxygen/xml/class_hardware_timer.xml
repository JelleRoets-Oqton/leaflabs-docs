<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="class_hardware_timer" kind="class" prot="public">
    <compoundname>HardwareTimer</compoundname>
    <includes refid="_hardware_timer_8h" local="no">HardwareTimer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hardware_timer_1ac113299865228a7b4b8a74cd4917c7a6" prot="private" static="no" mutable="no">
        <type><ref refid="structtimer__dev" kindref="compound">timer_dev</ref> *</type>
        <definition>timer_dev* HardwareTimer::dev</definition>
        <argsstring></argsstring>
        <name>dev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="49" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hardware_timer_1ae087648c9c52433791e9b13e7f6bfc7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HardwareTimer::HardwareTimer</definition>
        <argsstring>(uint8 timerNum)</argsstring>
        <name>HardwareTimer</name>
        <param>
          <type>uint8</type>
          <declname>timerNum</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="class_hardware_timer" kindref="compound">HardwareTimer</ref> instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timerNum</parametername>
</parameternamelist>
<parameterdescription>
<para>number of the timer to control. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="56"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a588f90cac516312ff0ab6817a1a196cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::pause</definition>
        <argsstring>(void)</argsstring>
        <name>pause</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Stop the counter, without affecting its configuration. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_hardware_timer_1a910b932bc9b6f682379faf0e3df4317c" kindref="member">HardwareTimer::resume()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="63"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a910b932bc9b6f682379faf0e3df4317c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::resume</definition>
        <argsstring>(void)</argsstring>
        <name>resume</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Resume a paused timer, without affecting its configuration. </para>        </briefdescription>
        <detaileddescription>
<para>The timer will resume counting and firing interrupts as appropriate.</para><para>Note that there is some function call overhead associated with using this method, so using it in concert with <ref refid="class_hardware_timer_1a588f90cac516312ff0ab6817a1a196cd" kindref="member">HardwareTimer::pause()</ref> is not a robust way to align multiple timers to the same count value.</para><para><simplesect kind="see"><para><ref refid="class_hardware_timer_1a588f90cac516312ff0ab6817a1a196cd" kindref="member">HardwareTimer::pause()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="78"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1ad1e165625443df72fbb1246abff5d178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32</type>
        <definition>uint32 HardwareTimer::getPrescaleFactor</definition>
        <argsstring>()</argsstring>
        <name>getPrescaleFactor</name>
        <briefdescription>
<para>Get the timer&apos;s prescale factor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Timer prescaler, from 1 to 65,536. </para></simplesect>
<simplesect kind="see"><para><ref refid="class_hardware_timer_1a67f561b2c4b324a28b4e7b5896653a8b" kindref="member">HardwareTimer::setPrescaleFactor()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="85"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a67f561b2c4b324a28b4e7b5896653a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::setPrescaleFactor</definition>
        <argsstring>(uint32 factor)</argsstring>
        <name>setPrescaleFactor</name>
        <param>
          <type>uint32</type>
          <declname>factor</declname>
        </param>
        <briefdescription>
<para>Set the timer&apos;s prescale factor. </para>        </briefdescription>
        <detaileddescription>
<para>The new value won&apos;t take effect until the next time the counter overflows. You can force the counter to reset using <ref refid="class_hardware_timer_1aee4db82227fadfac386d46afee4ba997" kindref="member">HardwareTimer::refresh()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>factor</parametername>
</parameternamelist>
<parameterdescription>
<para>The new prescale value to set, from 1 to 65,536. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_hardware_timer_1aee4db82227fadfac386d46afee4ba997" kindref="member">HardwareTimer::refresh()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="97"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a17e0311c48b1149abbcf39413b36da03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16</type>
        <definition>uint16 HardwareTimer::getOverflow</definition>
        <argsstring>()</argsstring>
        <name>getOverflow</name>
        <briefdescription>
<para>Get the timer overflow value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_hardware_timer_1aaf1a2ac607c0ab817b113c309bd71849" kindref="member">HardwareTimer::setOverflow()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="103"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1aaf1a2ac607c0ab817b113c309bd71849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::setOverflow</definition>
        <argsstring>(uint16 val)</argsstring>
        <name>setOverflow</name>
        <param>
          <type>uint16</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set the timer overflow (or &quot;reload&quot;) value. </para>        </briefdescription>
        <detaileddescription>
<para>The new value won&apos;t take effect until the next time the counter overflows. You can force the counter to reset using <ref refid="class_hardware_timer_1aee4db82227fadfac386d46afee4ba997" kindref="member">HardwareTimer::refresh()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The new overflow value to set </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_hardware_timer_1aee4db82227fadfac386d46afee4ba997" kindref="member">HardwareTimer::refresh()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1ad9c04c84ad34995d53da503ce2ddb1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16</type>
        <definition>uint16 HardwareTimer::getCount</definition>
        <argsstring>(void)</argsstring>
        <name>getCount</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the current timer count. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The timer&apos;s current count value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="122"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a04361f397a2ef459fd6148cda08bbb50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::setCount</definition>
        <argsstring>(uint16 val)</argsstring>
        <name>setCount</name>
        <param>
          <type>uint16</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set the current timer count. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The new count value to set. If this value exceeds the timer&apos;s overflow value, it is truncated to the overflow value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="131"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a1953e9b47a2e6941d1d0c6edae65293e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16</type>
        <definition>uint16 HardwareTimer::setPeriod</definition>
        <argsstring>(uint32 microseconds)</argsstring>
        <name>setPeriod</name>
        <param>
          <type>uint32</type>
          <declname>microseconds</declname>
        </param>
        <briefdescription>
<para>Set the timer&apos;s period in microseconds. </para>        </briefdescription>
        <detaileddescription>
<para>Configures the prescaler and overflow values to generate a timer reload with a period as close to the given number of microseconds as possible.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>microseconds</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired period of the timer. This must be greater than zero. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new overflow value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="144"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a51169f3be1a8f5b5cd307b897a3bebd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::setMode</definition>
        <argsstring>(int channel, timer_mode mode)</argsstring>
        <name>setMode</name>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="timer_8h_1a28110292f2481f7b44d1517fb4ce3c15" kindref="member">timer_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Configure a timer channel&apos;s mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer channel, from 1 to 4 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Mode to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="151"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a4b5b6ed06f5f2e57b74e2e0ec4f128e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16</type>
        <definition>uint16 HardwareTimer::getCompare</definition>
        <argsstring>(int channel)</argsstring>
        <name>getCompare</name>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Get the compare value for the given channel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_hardware_timer_1ab086972c855a1cf546f6b26f7f588dd2" kindref="member">HardwareTimer::setCompare()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="157"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1ab086972c855a1cf546f6b26f7f588dd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::setCompare</definition>
        <argsstring>(int channel, uint16 compare)</argsstring>
        <name>setCompare</name>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>uint16</type>
          <declname>compare</declname>
        </param>
        <briefdescription>
<para>Set the compare value for the given channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel whose compare to set, from 1 to 4. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>compare</parametername>
</parameternamelist>
<parameterdescription>
<para>The compare value to set. If greater than this timer&apos;s overflow value, it will be truncated to the overflow value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="timer_8h_1a28110292f2481f7b44d1517fb4ce3c15" kindref="member">timer_mode</ref> </para><simplesectsep/><para><ref refid="class_hardware_timer_1a51169f3be1a8f5b5cd307b897a3bebd8" kindref="member">HardwareTimer::setMode()</ref> </para><simplesectsep/><para><ref refid="class_hardware_timer_1ae1965408f7b2ed72eaf37f35590a1e36" kindref="member">HardwareTimer::attachInterrupt()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="171"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1ae1965408f7b2ed72eaf37f35590a1e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::attachInterrupt</definition>
        <argsstring>(int channel, voidFuncPtr handler)</argsstring>
        <name>attachInterrupt</name>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>voidFuncPtr</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Attach an interrupt handler to the given channel. </para>        </briefdescription>
        <detaileddescription>
<para>This interrupt handler will be called when the timer&apos;s counter reaches the given channel compare value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel to attach the ISR to, from 1 to 4. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The ISR to attach to the given channel. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>voidFuncPtr </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="183"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a4c3c9587c7e489ebbe90478e99558ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::detachInterrupt</definition>
        <argsstring>(int channel)</argsstring>
        <name>detachInterrupt</name>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Remove the interrupt handler attached to the given channel, if any. </para>        </briefdescription>
        <detaileddescription>
<para>The handler will no longer be called by this timer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel whose interrupt to detach, from 1 to 4. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="class_hardware_timer_1ae1965408f7b2ed72eaf37f35590a1e36" kindref="member">HardwareTimer::attachInterrupt()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="194"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1aee4db82227fadfac386d46afee4ba997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::refresh</definition>
        <argsstring>(void)</argsstring>
        <name>refresh</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset the counter, and update the prescaler and overflow values. </para>        </briefdescription>
        <detaileddescription>
<para>This will reset the counter to 0 in upcounting mode (the default). It will also update the timer&apos;s prescaler and overflow, if you have set them up to be changed using <ref refid="class_hardware_timer_1a67f561b2c4b324a28b4e7b5896653a8b" kindref="member">HardwareTimer::setPrescaleFactor()</ref> or <ref refid="class_hardware_timer_1aaf1a2ac607c0ab817b113c309bd71849" kindref="member">HardwareTimer::setOverflow()</ref>.</para><para><simplesect kind="see"><para><ref refid="class_hardware_timer_1a67f561b2c4b324a28b4e7b5896653a8b" kindref="member">HardwareTimer::setPrescaleFactor()</ref> </para><simplesectsep/><para><ref refid="class_hardware_timer_1aaf1a2ac607c0ab817b113c309bd71849" kindref="member">HardwareTimer::setOverflow()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="209"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1af4f6640fde4614d04b9d466a6f2a63a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::setChannelMode</definition>
        <argsstring>(int channel, timer_mode mode)</argsstring>
        <name>setChannelMode</name>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="timer_8h_1a28110292f2481f7b44d1517fb4ce3c15" kindref="member">timer_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Deprecated; use setMode(channel, mode) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="214" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="214" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1aecabe217f7c5d88b1d15ac2031fae372" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::setChannel1Mode</definition>
        <argsstring>(timer_mode mode)</argsstring>
        <name>setChannel1Mode</name>
        <param>
          <type><ref refid="timer_8h_1a28110292f2481f7b44d1517fb4ce3c15" kindref="member">timer_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Deprecated; use setMode(TIMER_CH1, mode) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="219" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1adf4d826e9c1ed5247a47271a4a86c73a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::setChannel2Mode</definition>
        <argsstring>(timer_mode mode)</argsstring>
        <name>setChannel2Mode</name>
        <param>
          <type><ref refid="timer_8h_1a28110292f2481f7b44d1517fb4ce3c15" kindref="member">timer_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Deprecated; use setMode(TIMER_CH2, mode) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="222" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a011fbba2058c3dcdaae1f92453976dec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::setChannel3Mode</definition>
        <argsstring>(timer_mode mode)</argsstring>
        <name>setChannel3Mode</name>
        <param>
          <type><ref refid="timer_8h_1a28110292f2481f7b44d1517fb4ce3c15" kindref="member">timer_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Deprecated; use setMode(TIMER_CH3, mode) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="225" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1afe012b8ab54640a6270aabe8adf4e4f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::setChannel4Mode</definition>
        <argsstring>(timer_mode mode)</argsstring>
        <name>setChannel4Mode</name>
        <param>
          <type><ref refid="timer_8h_1a28110292f2481f7b44d1517fb4ce3c15" kindref="member">timer_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Deprecated; use setMode(TIMER_CH4, mode) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="228" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a61343682b84c26cace94aea3d87f1f32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16</type>
        <definition>uint16 HardwareTimer::getCompare1</definition>
        <argsstring>()</argsstring>
        <name>getCompare1</name>
        <briefdescription>
<para>Deprecated; use return getCompare(TIMER_CH1) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="231" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="231" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a103b2b4c9816a7a6f0fbdacbfef6ef2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16</type>
        <definition>uint16 HardwareTimer::getCompare2</definition>
        <argsstring>()</argsstring>
        <name>getCompare2</name>
        <briefdescription>
<para>Deprecated; use return getCompare(TIMER_CH2) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="234" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="234" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a18c97c92601164bc16dbe9b2b8eba36e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16</type>
        <definition>uint16 HardwareTimer::getCompare3</definition>
        <argsstring>()</argsstring>
        <name>getCompare3</name>
        <briefdescription>
<para>Deprecated; use return getCompare(TIMER_CH3) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="237" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1aa7050a58d8bc7edf7ac5b3a4977722d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint16</type>
        <definition>uint16 HardwareTimer::getCompare4</definition>
        <argsstring>()</argsstring>
        <name>getCompare4</name>
        <briefdescription>
<para>Deprecated; use return getCompare(TIMER_CH4) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="240" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="240" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1aed8ebfe3d67c4fac081299c53f2748e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::setCompare1</definition>
        <argsstring>(uint16 compare)</argsstring>
        <name>setCompare1</name>
        <param>
          <type>uint16</type>
          <declname>compare</declname>
        </param>
        <briefdescription>
<para>Deprecated; use setCompare(TIMER_CH1, compare) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="243" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="243" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a2311d9050a2e7eddbde307989d0bff95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::setCompare2</definition>
        <argsstring>(uint16 compare)</argsstring>
        <name>setCompare2</name>
        <param>
          <type>uint16</type>
          <declname>compare</declname>
        </param>
        <briefdescription>
<para>Deprecated; use setCompare(TIMER_CH2, compare) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="246" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="246" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a94be29a8ee001e9ad549d75ec9163f39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::setCompare3</definition>
        <argsstring>(uint16 compare)</argsstring>
        <name>setCompare3</name>
        <param>
          <type>uint16</type>
          <declname>compare</declname>
        </param>
        <briefdescription>
<para>Deprecated; use setCompare(TIMER_CH3, compare) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="249" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="249" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1ac35416d1ab73dccefda575a3adeae3e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::setCompare4</definition>
        <argsstring>(uint16 compare)</argsstring>
        <name>setCompare4</name>
        <param>
          <type>uint16</type>
          <declname>compare</declname>
        </param>
        <briefdescription>
<para>Deprecated; use setCompare(TIMER_CH4, compare) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="252" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="252" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a39cdce171bc378362739bd07715646cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::attachCompare1Interrupt</definition>
        <argsstring>(voidFuncPtr handler)</argsstring>
        <name>attachCompare1Interrupt</name>
        <param>
          <type>voidFuncPtr</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Deprecated; use attachInterrupt(TIMER_CH1, handler) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="255" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="255" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1af10e22822829b2941e4f3da2d2c7e36b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::attachCompare2Interrupt</definition>
        <argsstring>(voidFuncPtr handler)</argsstring>
        <name>attachCompare2Interrupt</name>
        <param>
          <type>voidFuncPtr</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Deprecated; use attachInterrupt(TIMER_CH2, handler) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="260" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a4b640cfd0e314e3835077207b3c43273" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::attachCompare3Interrupt</definition>
        <argsstring>(voidFuncPtr handler)</argsstring>
        <name>attachCompare3Interrupt</name>
        <param>
          <type>voidFuncPtr</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Deprecated; use attachInterrupt(TIMER_CH3, handler) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="265" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="265" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a2481c14511d602457a3cb2ea2fbb603b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::attachCompare4Interrupt</definition>
        <argsstring>(voidFuncPtr handler)</argsstring>
        <name>attachCompare4Interrupt</name>
        <param>
          <type>voidFuncPtr</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Deprecated; use attachInterrupt(TIMER_CH4, handler) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="270" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="270" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a7344fc4153f5f9c40e1246e359e89113" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::detachCompare1Interrupt</definition>
        <argsstring>(void)</argsstring>
        <name>detachCompare1Interrupt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deprecated; use detachInterrupt(TIMER_CH1) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="275" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="275" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1ab3301e906da6403f165e3eb4d7656490" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::detachCompare2Interrupt</definition>
        <argsstring>(void)</argsstring>
        <name>detachCompare2Interrupt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deprecated; use detachInterrupt(TIMER_CH2) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="278" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="278" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a953c839e1ae892080ff7bb30dfc40866" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::detachCompare3Interrupt</definition>
        <argsstring>(void)</argsstring>
        <name>detachCompare3Interrupt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deprecated; use detachInterrupt(TIMER_CH3) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="281" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="281" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a49a2fb7ec1398217330bf2c0d38d7a70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::detachCompare4Interrupt</definition>
        <argsstring>(void)</argsstring>
        <name>detachCompare4Interrupt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deprecated; use detachInterrupt(TIMER_CH4) instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="284" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="284" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="class_hardware_timer_1a8bc0eca797f43f14a8b968f166a017b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void HardwareTimer::generateUpdate</definition>
        <argsstring>(void)</argsstring>
        <name>generateUpdate</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Deprecated; use <ref refid="class_hardware_timer_1aee4db82227fadfac386d46afee4ba997" kindref="member">refresh()</ref> instead. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="287" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="287" bodyend="287"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface to one of the 16-bit timer peripherals. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" line="47" bodyfile="/home/mbolivar/leaf/libmaple/wirish/HardwareTimer.h" bodystart="47" bodyend="288"/>
    <listofallmembers>
      <member refid="class_hardware_timer_1a39cdce171bc378362739bd07715646cd" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>attachCompare1Interrupt</name></member>
      <member refid="class_hardware_timer_1af10e22822829b2941e4f3da2d2c7e36b" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>attachCompare2Interrupt</name></member>
      <member refid="class_hardware_timer_1a4b640cfd0e314e3835077207b3c43273" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>attachCompare3Interrupt</name></member>
      <member refid="class_hardware_timer_1a2481c14511d602457a3cb2ea2fbb603b" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>attachCompare4Interrupt</name></member>
      <member refid="class_hardware_timer_1ae1965408f7b2ed72eaf37f35590a1e36" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>attachInterrupt</name></member>
      <member refid="class_hardware_timer_1a7344fc4153f5f9c40e1246e359e89113" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>detachCompare1Interrupt</name></member>
      <member refid="class_hardware_timer_1ab3301e906da6403f165e3eb4d7656490" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>detachCompare2Interrupt</name></member>
      <member refid="class_hardware_timer_1a953c839e1ae892080ff7bb30dfc40866" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>detachCompare3Interrupt</name></member>
      <member refid="class_hardware_timer_1a49a2fb7ec1398217330bf2c0d38d7a70" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>detachCompare4Interrupt</name></member>
      <member refid="class_hardware_timer_1a4c3c9587c7e489ebbe90478e99558ec1" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>detachInterrupt</name></member>
      <member refid="class_hardware_timer_1ac113299865228a7b4b8a74cd4917c7a6" prot="private" virt="non-virtual"><scope>HardwareTimer</scope><name>dev</name></member>
      <member refid="class_hardware_timer_1a8bc0eca797f43f14a8b968f166a017b7" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>generateUpdate</name></member>
      <member refid="class_hardware_timer_1a4b5b6ed06f5f2e57b74e2e0ec4f128e7" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>getCompare</name></member>
      <member refid="class_hardware_timer_1a61343682b84c26cace94aea3d87f1f32" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>getCompare1</name></member>
      <member refid="class_hardware_timer_1a103b2b4c9816a7a6f0fbdacbfef6ef2d" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>getCompare2</name></member>
      <member refid="class_hardware_timer_1a18c97c92601164bc16dbe9b2b8eba36e" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>getCompare3</name></member>
      <member refid="class_hardware_timer_1aa7050a58d8bc7edf7ac5b3a4977722d6" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>getCompare4</name></member>
      <member refid="class_hardware_timer_1ad9c04c84ad34995d53da503ce2ddb1a6" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>getCount</name></member>
      <member refid="class_hardware_timer_1a17e0311c48b1149abbcf39413b36da03" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>getOverflow</name></member>
      <member refid="class_hardware_timer_1ad1e165625443df72fbb1246abff5d178" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>getPrescaleFactor</name></member>
      <member refid="class_hardware_timer_1ae087648c9c52433791e9b13e7f6bfc7c" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>HardwareTimer</name></member>
      <member refid="class_hardware_timer_1a588f90cac516312ff0ab6817a1a196cd" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>pause</name></member>
      <member refid="class_hardware_timer_1aee4db82227fadfac386d46afee4ba997" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>refresh</name></member>
      <member refid="class_hardware_timer_1a910b932bc9b6f682379faf0e3df4317c" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>resume</name></member>
      <member refid="class_hardware_timer_1aecabe217f7c5d88b1d15ac2031fae372" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setChannel1Mode</name></member>
      <member refid="class_hardware_timer_1adf4d826e9c1ed5247a47271a4a86c73a" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setChannel2Mode</name></member>
      <member refid="class_hardware_timer_1a011fbba2058c3dcdaae1f92453976dec" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setChannel3Mode</name></member>
      <member refid="class_hardware_timer_1afe012b8ab54640a6270aabe8adf4e4f6" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setChannel4Mode</name></member>
      <member refid="class_hardware_timer_1af4f6640fde4614d04b9d466a6f2a63a9" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setChannelMode</name></member>
      <member refid="class_hardware_timer_1ab086972c855a1cf546f6b26f7f588dd2" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setCompare</name></member>
      <member refid="class_hardware_timer_1aed8ebfe3d67c4fac081299c53f2748e9" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setCompare1</name></member>
      <member refid="class_hardware_timer_1a2311d9050a2e7eddbde307989d0bff95" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setCompare2</name></member>
      <member refid="class_hardware_timer_1a94be29a8ee001e9ad549d75ec9163f39" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setCompare3</name></member>
      <member refid="class_hardware_timer_1ac35416d1ab73dccefda575a3adeae3e0" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setCompare4</name></member>
      <member refid="class_hardware_timer_1a04361f397a2ef459fd6148cda08bbb50" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setCount</name></member>
      <member refid="class_hardware_timer_1a51169f3be1a8f5b5cd307b897a3bebd8" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setMode</name></member>
      <member refid="class_hardware_timer_1aaf1a2ac607c0ab817b113c309bd71849" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setOverflow</name></member>
      <member refid="class_hardware_timer_1a1953e9b47a2e6941d1d0c6edae65293e" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setPeriod</name></member>
      <member refid="class_hardware_timer_1a67f561b2c4b324a28b4e7b5896653a8b" prot="public" virt="non-virtual"><scope>HardwareTimer</scope><name>setPrescaleFactor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
