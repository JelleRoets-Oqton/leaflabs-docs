<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="group__x_semaphore_create_counting" kind="group">
    <compoundname>xSemaphoreCreateCounting</compoundname>
    <title>xSemaphoreCreateCounting</title>
    <briefdescription>
<para>semphr. </para>    </briefdescription>
    <detaileddescription>
<para>h <preformatted>xSemaphoreHandle xSemaphoreCreateCounting( unsigned portBASE_TYPE uxMaxCount, unsigned portBASE_TYPE uxInitialCount )</preformatted></para><para><emphasis>Macro</emphasis> that creates a counting semaphore by using the existing queue mechanism.</para><para>Counting semaphores are typically used for two things:</para><para>1) Counting events.</para><para>In this usage scenario an event handler will &apos;give&apos; a semaphore each time an event occurs (incrementing the semaphore count value), and a handler task will &apos;take&apos; a semaphore each time it processes an event (decrementing the semaphore count value). The count value is therefore the difference between the number of events that have occurred and the number that have been processed. In this case it is desirable for the initial count value to be zero.</para><para>2) Resource management.</para><para>In this usage scenario the count value indicates the number of resources available. To obtain control of a resource a task must first obtain a semaphore - decrementing the semaphore count value. When the count value reaches zero there are no free resources. When a task finishes with the resource it &apos;gives&apos; the semaphore back - incrementing the semaphore count value. In this case it is desirable for the initial count value to be equal to the maximum count value, indicating that all resources are free.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uxMaxCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum count value that can be reached. When the semaphore reaches this value it can no longer be &apos;given&apos;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uxInitialCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The count value assigned to the semaphore when it is created.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Handle to the created semaphore. Null if the semaphore could not be created.</para></simplesect>
Example usage: <preformatted>
 xSemaphoreHandle xSemaphore;</preformatted></para><para><preformatted> void vATask( void * pvParameters )
 {
 xSemaphoreHandle xSemaphore = NULL;</preformatted></para><para><preformatted>Semaphore cannot be used before a call to xSemaphoreCreateCounting().
The max value to which the semaphore can count should be 10, and the
initial value assigned to the count should be 0.
    xSemaphore = xSemaphoreCreateCounting( 10, 0 );</preformatted></para><para><preformatted>    if( xSemaphore != NULL )
    {
The semaphore was created successfully.
The semaphore can now be used.  
    }
 }
 </preformatted> </para>    </detaileddescription>
  </compounddef>
</doxygen>
