<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="util_8h" kind="file">
    <compoundname>util.h</compoundname>
    <includes refid="libmaple__types_8h" local="yes">libmaple_types.h</includes>
    <includedby refid="libmaple_8h" local="yes">libmaple/libmaple.h</includedby>
    <includedby refid="nvic_8h" local="yes">libmaple/nvic.h</includedby>
    <includedby refid="dma_8c" local="yes">libmaple/dma.c</includedby>
    <includedby refid="systick_8h" local="yes">libmaple/systick.h</includedby>
    <includedby refid="iwdg_8h" local="yes">libmaple/iwdg.h</includedby>
    <includedby refid="spi_8h" local="yes">libmaple/spi.h</includedby>
    <includedby refid="usart_8h" local="yes">libmaple/usart.h</includedby>
    <incdepgraph>
      <node id="1029">
        <label>libmaple_types.h</label>
        <link refid="libmaple__types_8h"/>
      </node>
      <node id="1028">
        <label>libmaple/util.h</label>
        <link refid="util.h"/>
        <childnode refid="1029" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1062">
        <label>libmaple/usb/usb.c</label>
        <link refid="usb_8c_source"/>
      </node>
      <node id="1072">
        <label>libmaple/usb/usb.h</label>
        <link refid="usb_8h_source"/>
        <childnode refid="1062" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
      </node>
      <node id="1070">
        <label>wirish/HardwareTimer.h</label>
        <link refid="_hardware_timer_8h_source"/>
        <childnode refid="1038" relation="include">
        </childnode>
      </node>
      <node id="1047">
        <label>libmaple/bkp.c</label>
        <link refid="bkp_8c_source"/>
      </node>
      <node id="1046">
        <label>libmaple/bkp.h</label>
        <link refid="bkp_8h"/>
        <childnode refid="1047" relation="include">
        </childnode>
      </node>
      <node id="1050">
        <label>libmaple/dac.c</label>
        <link refid="dac_8c_source"/>
      </node>
      <node id="1038">
        <label>wirish/wirish.h</label>
        <link refid="wirish_8h_source"/>
        <childnode refid="1039" relation="include">
        </childnode>
        <childnode refid="1040" relation="include">
        </childnode>
        <childnode refid="1041" relation="include">
        </childnode>
        <childnode refid="1042" relation="include">
        </childnode>
      </node>
      <node id="1079">
        <label>wirish/comm/HardwareSerial.h</label>
        <link refid="_hardware_serial_8h"/>
        <childnode refid="1038" relation="include">
        </childnode>
      </node>
      <node id="1036">
        <label>wirish/boards.h</label>
        <link refid="boards_8h"/>
        <childnode refid="1037" relation="include">
        </childnode>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
      </node>
      <node id="1049">
        <label>libmaple/pwr.c</label>
        <link refid="pwr_8c_source"/>
      </node>
      <node id="1084">
        <label>libmaple/iwdg.c</label>
        <link refid="iwdg_8c"/>
      </node>
      <node id="1076">
        <label>libmaple/nvic.c</label>
        <link refid="nvic_8c_source"/>
      </node>
      <node id="1048">
        <label>libmaple/pwr.h</label>
        <link refid="pwr_8h"/>
        <childnode refid="1047" relation="include">
        </childnode>
        <childnode refid="1049" relation="include">
        </childnode>
      </node>
      <node id="1078">
        <label>libmaple/usart.c</label>
        <link refid="usart_8c"/>
      </node>
      <node id="1083">
        <label>libmaple/iwdg.h</label>
        <link refid="iwdg_8h"/>
        <childnode refid="1084" relation="include">
        </childnode>
      </node>
      <node id="1073">
        <label>libmaple/nvic.h</label>
        <link refid="nvic_8h"/>
        <childnode refid="1074" relation="include">
        </childnode>
        <childnode refid="1053" relation="include">
        </childnode>
        <childnode refid="1056" relation="include">
        </childnode>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
        <childnode refid="1077" relation="include">
        </childnode>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1080" relation="include">
        </childnode>
        <childnode refid="1043" relation="include">
        </childnode>
      </node>
      <node id="1077">
        <label>libmaple/usart.h</label>
        <link refid="usart_8h"/>
        <childnode refid="1078" relation="include">
        </childnode>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1079" relation="include">
        </childnode>
      </node>
      <node id="1065">
        <label>libmaple/flash.c</label>
        <link refid="flash_8c"/>
      </node>
      <node id="1044">
        <label>wirish/io.h</label>
        <link refid="io_8h"/>
        <childnode refid="1038" relation="include">
        </childnode>
      </node>
      <node id="1066">
        <label>libmaple/rcc.c</label>
        <link refid="rcc_8c_source"/>
      </node>
      <node id="1059">
        <label>libmaple/spi.c</label>
        <link refid="spi_8c"/>
      </node>
      <node id="1058">
        <label>libmaple/spi.h</label>
        <link refid="spi_8h"/>
        <childnode refid="1059" relation="include">
        </childnode>
        <childnode refid="1037" relation="include">
        </childnode>
      </node>
      <node id="1037">
        <label>wirish/comm/HardwareSPI.h</label>
        <link refid="_hardware_s_p_i_8h"/>
        <childnode refid="1038" relation="include">
        </childnode>
      </node>
      <node id="1056">
        <label>libmaple/i2c.c</label>
        <link refid="i2c_8c"/>
      </node>
      <node id="1057">
        <label>libmaple/i2c.h</label>
        <link refid="i2c_8h"/>
        <childnode refid="1056" relation="include">
        </childnode>
      </node>
      <node id="1075">
        <label>libmaple/dma.c</label>
        <link refid="dma_8c"/>
      </node>
      <node id="1074">
        <label>libmaple/dma.h</label>
        <link refid="dma_8h"/>
        <childnode refid="1075" relation="include">
        </childnode>
      </node>
      <node id="1041">
        <label>libraries/LiquidCrystal/LiquidCrystal.h</label>
        <link refid="_liquid_crystal_8h_source"/>
      </node>
      <node id="1031">
        <label>libmaple/libmaple.h</label>
        <link refid="libmaple_8h"/>
        <childnode refid="1032" relation="include">
        </childnode>
        <childnode refid="1033" relation="include">
        </childnode>
        <childnode refid="1046" relation="include">
        </childnode>
        <childnode refid="1048" relation="include">
        </childnode>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1051" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1053" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1056" relation="include">
        </childnode>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
        <childnode refid="1071" relation="include">
        </childnode>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
        <childnode refid="1063" relation="include">
        </childnode>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1036" relation="include">
        </childnode>
        <childnode refid="1043" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
      </node>
      <node id="1060">
        <label>libmaple/usb/usb_config.h</label>
        <link refid="usb__config_8h_source"/>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
        <childnode refid="1063" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
      </node>
      <node id="1043">
        <label>wirish/wirish_time.h</label>
        <link refid="wirish__time_8h"/>
        <childnode refid="1044" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
      </node>
      <node id="1035">
        <label>wirish/wirish_types.h</label>
        <link refid="wirish__types_8h"/>
        <childnode refid="1036" relation="include">
        </childnode>
        <childnode refid="1038" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
      </node>
      <node id="1045">
        <label>libraries/Servo/Servo.h</label>
        <link refid="_servo_8h_source"/>
      </node>
      <node id="1032">
        <label>libmaple/adc.c</label>
        <link refid="adc_8c"/>
      </node>
      <node id="1033">
        <label>libmaple/adc.h</label>
        <link refid="adc_8h"/>
        <childnode refid="1032" relation="include">
        </childnode>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1035" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
      </node>
      <node id="1082">
        <label>libmaple/systick.c</label>
        <link refid="systick_8c_source"/>
      </node>
      <node id="1081">
        <label>libmaple/systick.h</label>
        <link refid="systick_8h"/>
        <childnode refid="1056" relation="include">
        </childnode>
        <childnode refid="1082" relation="include">
        </childnode>
        <childnode refid="1043" relation="include">
        </childnode>
      </node>
      <node id="1055">
        <label>libmaple/gpio.c</label>
        <link refid="gpio_8c_source"/>
      </node>
      <node id="1051">
        <label>libmaple/gpio.h</label>
        <link refid="gpio_8h"/>
        <childnode refid="1050" relation="include">
        </childnode>
        <childnode refid="1052" relation="include">
        </childnode>
        <childnode refid="1054" relation="include">
        </childnode>
        <childnode refid="1055" relation="include">
        </childnode>
        <childnode refid="1056" relation="include">
        </childnode>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1060" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1036" relation="include">
        </childnode>
        <childnode refid="1035" relation="include">
        </childnode>
        <childnode refid="1044" relation="include">
        </childnode>
      </node>
      <node id="1069">
        <label>libmaple/timer.c</label>
        <link refid="timer_8c"/>
      </node>
      <node id="1068">
        <label>libmaple/timer.h</label>
        <link refid="timer_8h"/>
        <childnode refid="1069" relation="include">
        </childnode>
        <childnode refid="1034" relation="include">
        </childnode>
        <childnode refid="1036" relation="include">
        </childnode>
        <childnode refid="1035" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
        <childnode refid="1045" relation="include">
        </childnode>
      </node>
      <node id="1080">
        <label>wirish/ext_interrupts.h</label>
        <link refid="ext__interrupts_8h"/>
        <childnode refid="1038" relation="include">
        </childnode>
      </node>
      <node id="1042">
        <label>libraries/Wire/Wire.h</label>
        <link refid="_wire_8h_source"/>
      </node>
      <node id="1054">
        <label>libmaple/fsmc.c</label>
        <link refid="fsmc_8c_source"/>
      </node>
      <node id="1039">
        <label>wirish/WProgram.h</label>
        <link refid="_w_program_8h_source"/>
      </node>
      <node id="1067">
        <label>libmaple/syscalls.c</label>
        <link refid="syscalls_8c_source"/>
      </node>
      <node id="1040">
        <label>libraries/FreeRTOS/MapleFreeRTOS.h</label>
        <link refid="_maple_free_r_t_o_s_8h_source"/>
      </node>
      <node id="1053">
        <label>libmaple/exti.c</label>
        <link refid="exti_8c"/>
      </node>
      <node id="1052">
        <label>libmaple/exti.h</label>
        <link refid="exti_8h"/>
        <childnode refid="1053" relation="include">
        </childnode>
      </node>
      <node id="1034">
        <label>libmaple/util.c</label>
        <link refid="util_8c_source"/>
      </node>
      <node id="1030">
        <label>libmaple/util.h</label>
        <link refid="util.h"/>
        <childnode refid="1031" relation="include">
        </childnode>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1075" relation="include">
        </childnode>
        <childnode refid="1081" relation="include">
        </childnode>
        <childnode refid="1083" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1077" relation="include">
        </childnode>
      </node>
      <node id="1061">
        <label>libmaple/usb/descriptors.c</label>
        <link refid="descriptors_8c_source"/>
      </node>
      <node id="1071">
        <label>libmaple/usb/descriptors.h</label>
        <link refid="descriptors_8h_source"/>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
      </node>
      <node id="1064">
        <label>libmaple/usb/usb_callbacks.c</label>
        <link refid="usb__callbacks_8c_source"/>
      </node>
      <node id="1063">
        <label>libmaple/usb/usb_callbacks.h</label>
        <link refid="usb__callbacks_8h_source"/>
        <childnode refid="1062" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="util_8h_1a0ddea71f077aa1dba6af4e9a108ef526" prot="public" static="no">
        <name>BIT</name>
        <param><defname>shift</defname></param>
        <initializer>(1UL &lt;&lt; (shift))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/util.h" line="45" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/util.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a08933d3a77a9ca8e4524e37b05567322" prot="public" static="no">
        <name>BIT_MASK_SHIFT</name>
        <param><defname>mask</defname></param>
        <param><defname>shift</defname></param>
        <initializer>((mask) &lt;&lt; (shift))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/util.h" line="46" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/util.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1abe5b617b6433bad00d6f669f1aadc52f" prot="public" static="no">
        <name>GET_BITS</name>
        <param><defname>x</defname></param>
        <param><defname>m</defname></param>
        <param><defname>n</defname></param>
        <initializer>((((uint32)x) &lt;&lt; (31 - (n))) &gt;&gt; ((31 - (n)) + (m)))</initializer>
        <briefdescription>
<para>Bits m to n of x. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/util.h" line="48" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/util.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1acd6d667a533f6ba34e5e73c943f44fe1" prot="public" static="no">
        <name>IS_POWER_OF_TWO</name>
        <param><defname>v</defname></param>
        <initializer>((v) &amp;&amp; !((v) &amp; ((v) - 1)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/util.h" line="49" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/util.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a6b65d3db31c7ad30ca90546884b6f723" prot="public" static="no">
        <name>DEBUG_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/util.h" line="63" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/util.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1aa2ae674d4c9718aa27920babe03db016" prot="public" static="no">
        <name>DEBUG_FAULT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/util.h" line="64" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/util.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a41d588ee907c299c7a790964deeef02d" prot="public" static="no">
        <name>DEBUG_ALL</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/util.h" line="65" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/util.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1a092bd7bb2cb7fd9f483b6995cee61bc0" prot="public" static="no">
        <name>ASSERT</name>
        <param><defname>exp</defname></param>
        <initializer>if (exp) {                                   \
    } else {                                     \
        <ref refid="util_8h_1a6fb0d7abf66cf4b80408f888191708bd" kindref="member">_fail</ref>(__FILE__, __LINE__, #exp);         \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/util.h" line="89" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/util.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="util_8h_1ae0d421c4c00a40cbd4414e59eb700ce8" prot="public" static="no">
        <name>ASSERT_FAULT</name>
        <param><defname>exp</defname></param>
        <initializer>if (exp) {                                  \
    } else {                                    \
        <ref refid="util_8h_1a6fb0d7abf66cf4b80408f888191708bd" kindref="member">_fail</ref>(__FILE__, __LINE__, #exp);        \
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/util.h" line="99" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/util.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="util_8h_1a02650f8e5e6d447a6dc77d76fdb07351" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __error</definition>
        <argsstring>(void)</argsstring>
        <name>__error</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disables all peripheral interrupts except USB and fades the error LED. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/util.h" line="55" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/util.c" bodystart="60" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a6fb0d7abf66cf4b80408f888191708bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _fail</definition>
        <argsstring>(const char *, int, const char *)</argsstring>
        <name>_fail</name>
        <param>
          <type>const char *</type>
          <defname>file</defname>
        </param>
        <param>
          <type>int</type>
          <defname>line</defname>
        </param>
        <param>
          <type>const char *</type>
          <defname>exp</defname>
        </param>
        <briefdescription>
<para><ref refid="class_print" kindref="compound">Print</ref> an error message on a UART upon a failed assertion and throb the error LED, if there is one defined. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>Source file of failed assertion </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>Source line of failed assertion </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exp</parametername>
</parameternamelist>
<parameterdescription>
<para>String representation of failed assertion </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Side Effects:</title><para>Turns of all peripheral interrupts except USB. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/util.h" line="56" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/util.c" bodystart="90" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="util_8h_1a371ced8f6d31157d3583311faa2a0d8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void throb</definition>
        <argsstring>(void)</argsstring>
        <name>throb</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Fades the error LED on and off. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Side Effects:</title><para>Sets output push-pull on ERROR_LED_PIN. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/util.h" line="57" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/util.c" bodystart="114" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Miscellaneous utility macros and procedures. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010<sp/>Perry<sp/>Hung.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libmaple__types_8h" kindref="compound" tooltip="libmaple types">libmaple_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_UTIL_H_</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_UTIL_H_</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>Bit<sp/>manipulation</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIT(shift)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1UL<sp/>&lt;&lt;<sp/>(shift))</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BIT_MASK_SHIFT(mask,<sp/>shift)<sp/><sp/><sp/><sp/>((mask)<sp/>&lt;&lt;<sp/>(shift))</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="48" refid="util_8h_1abe5b617b6433bad00d6f669f1aadc52f" refkind="member"><highlight class="preprocessor">#define<sp/>GET_BITS(x,<sp/>m,<sp/>n)<sp/>((((uint32)x)<sp/>&lt;&lt;<sp/>(31<sp/>-<sp/>(n)))<sp/>&gt;&gt;<sp/>((31<sp/>-<sp/>(n))<sp/>+<sp/>(m)))</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>IS_POWER_OF_TWO(v)<sp/><sp/>((v)<sp/>&amp;&amp;<sp/>!((v)<sp/>&amp;<sp/>((v)<sp/>-<sp/>1)))</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>Failure<sp/>routines</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__error(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_fail(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>throb(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>Asserts<sp/>and<sp/>debug<sp/>levels</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEBUG_NONE<sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEBUG_FAULT<sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEBUG_ALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor">#ifndef<sp/>DEBUG_LEVEL</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DEBUG_LEVEL<sp/>DEBUG_ALL</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DEBUG_LEVEL<sp/>&gt;=<sp/>DEBUG_ALL</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ASSERT(exp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(exp)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_fail(__FILE__,<sp/>__LINE__,<sp/>#exp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ASSERT(exp)<sp/>(void)((0))</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DEBUG_LEVEL<sp/>&gt;=<sp/>DEBUG_FAULT</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_FAULT(exp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(exp)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_fail(__FILE__,<sp/>__LINE__,<sp/>#exp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ASSERT_FAULT(exp)<sp/>(void)((0))</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"></highlight><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/mbolivar/leaf/libmaple/libmaple/util.h"/>
  </compounddef>
</doxygen>
