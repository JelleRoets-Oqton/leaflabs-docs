<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="rcc_8c" kind="file">
    <compoundname>rcc.c</compoundname>
    <includes refid="libmaple_8h" local="yes">libmaple.h</includes>
    <includes refid="flash_8h" local="yes">flash.h</includes>
    <includes refid="rcc_8h" local="yes">rcc.h</includes>
    <includes refid="bitband_8h" local="yes">bitband.h</includes>
    <incdepgraph>
      <node id="458">
        <label>flash.h</label>
        <link refid="flash_8h"/>
        <childnode refid="454" relation="include">
        </childnode>
      </node>
      <node id="452">
        <label>libmaple/rcc.c</label>
        <link refid="rcc.c"/>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
      </node>
      <node id="459">
        <label>rcc.h</label>
        <link refid="rcc_8h"/>
        <childnode refid="454" relation="include">
        </childnode>
      </node>
      <node id="455">
        <label>stm32.h</label>
        <link refid="stm32_8h"/>
      </node>
      <node id="454">
        <label>libmaple_types.h</label>
        <link refid="libmaple__types_8h"/>
      </node>
      <node id="453">
        <label>libmaple.h</label>
        <link refid="libmaple_8h"/>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
      </node>
      <node id="460">
        <label>bitband.h</label>
        <link refid="bitband_8h"/>
        <childnode refid="454" relation="include">
        </childnode>
      </node>
      <node id="457">
        <label>delay.h</label>
        <link refid="delay_8h"/>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
      </node>
      <node id="456">
        <label>util.h</label>
        <link refid="util_8h"/>
        <childnode refid="454" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structrcc__dev__info" prot="public">rcc_dev_info</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="rcc_8c_1a387b699bd8b7759c080dcf39a05f9c6e" prot="public" static="no">
        <name>APB1</name>
        <initializer>RCC_APB1</initializer>
        <briefdescription>
<para>Implements pretty much only the basic clock setup on the stm32, clock enable/disable and peripheral reset commands. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" line="37" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rcc_8c_1ac362980dd1b6835da0e1e67aae1f6ce9" prot="public" static="no">
        <name>APB2</name>
        <initializer>RCC_APB2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" line="38" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="rcc_8c_1a942fd4ea5019745b10664642934d6c4f" prot="public" static="no">
        <name>AHB</name>
        <initializer>RCC_AHB</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" line="39" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="rcc_8c_1a8e09cf60941971cea6616a517a93595a" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structrcc__dev__info" kindref="compound">rcc_dev_info</ref></type>
        <definition>struct rcc_dev_info rcc_dev_table[]</definition>
        <argsstring>[]</argsstring>
        <name>rcc_dev_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" line="98" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="rcc_8c_1a71fff95ed370de2756b75dbe13d901d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rcc_clk_init</definition>
        <argsstring>(rcc_sysclk_src sysclk_src, rcc_pllsrc pll_src, rcc_pll_multiplier pll_mul)</argsstring>
        <name>rcc_clk_init</name>
        <param>
          <type><ref refid="rcc_8h_1a2ed62482da272142b8e27178ac2b6813" kindref="member">rcc_sysclk_src</ref></type>
          <declname>sysclk_src</declname>
        </param>
        <param>
          <type><ref refid="rcc_8h_1a744cacb90ada168b161e146c097caa06" kindref="member">rcc_pllsrc</ref></type>
          <declname>pll_src</declname>
        </param>
        <param>
          <type><ref refid="rcc_8h_1a91f017a07348f50f7626cca53b5b103b" kindref="member">rcc_pll_multiplier</ref></type>
          <declname>pll_mul</declname>
        </param>
        <briefdescription>
<para>Initialize the clock control system. </para>        </briefdescription>
        <detaileddescription>
<para>Initializes the system clock source to use the PLL driven by an external oscillator <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sysclk_src</parametername>
</parameternamelist>
<parameterdescription>
<para>system clock source, must be PLL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pll_src</parametername>
</parameternamelist>
<parameterdescription>
<para>pll clock source, must be HSE </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pll_mul</parametername>
</parameternamelist>
<parameterdescription>
<para>pll multiplier </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" line="109" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" bodystart="107" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="rcc_8c_1a1980612399a3ebbce66ba2c07f5b9a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rcc_clk_enable</definition>
        <argsstring>(rcc_clk_id id)</argsstring>
        <name>rcc_clk_enable</name>
        <param>
          <type><ref refid="rcc_8h_1ae3722d2d8eff5283fb0388429953640f" kindref="member">rcc_clk_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Turn on the clock line on a peripheral. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Clock ID of the peripheral to turn on. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" line="145" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" bodystart="145" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="rcc_8c_1aa3d6dc800a7e2e44dbb65bb13dad19f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rcc_reset_dev</definition>
        <argsstring>(rcc_clk_id id)</argsstring>
        <name>rcc_reset_dev</name>
        <param>
          <type><ref refid="rcc_8h_1ae3722d2d8eff5283fb0388429953640f" kindref="member">rcc_clk_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Reset a peripheral. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Clock ID of the peripheral to reset. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" line="163" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" bodystart="163" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="rcc_8c_1ac9053653d122db400d9342d97d98b835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>rcc_clk_domain</type>
        <definition>rcc_clk_domain rcc_dev_clk</definition>
        <argsstring>(rcc_clk_id id)</argsstring>
        <name>rcc_dev_clk</name>
        <param>
          <type><ref refid="rcc_8h_1ae3722d2d8eff5283fb0388429953640f" kindref="member">rcc_clk_id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Get a peripheral&apos;s clock domain. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Clock ID of the peripheral whose clock domain to return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Clock source for the given clock ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" line="182" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="rcc_8c_1ae8d2fdd8231355f811874ce14c077638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rcc_set_prescaler</definition>
        <argsstring>(rcc_prescaler prescaler, uint32 divider)</argsstring>
        <name>rcc_set_prescaler</name>
        <param>
          <type><ref refid="rcc_8h_1a8ff91a258f95dbd0ac963090c6b9eecf" kindref="member">rcc_prescaler</ref></type>
          <declname>prescaler</declname>
        </param>
        <param>
          <type>uint32</type>
          <declname>divider</declname>
        </param>
        <briefdescription>
<para>Set the divider on a peripheral prescaler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prescaler</parametername>
</parameternamelist>
<parameterdescription>
<para>prescaler to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>divider</parametername>
</parameternamelist>
<parameterdescription>
<para>prescaler divider </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" line="191" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/rcc.c" bodystart="191" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>The<sp/>MIT<sp/>License</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2010<sp/>Perry<sp/>Hung.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libmaple_8h" kindref="compound" tooltip="General include file for libmaple.">libmaple.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="flash_8h" kindref="compound" tooltip="STM32 Medium and high density Flash register map and setup routines.">flash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rcc_8h" kindref="compound" tooltip="reset and clock control definitions and prototypes">rcc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bitband_8h" kindref="compound" tooltip="Bit-banding utility functions.">bitband.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APB1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_APB1</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>APB2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_APB2</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>AHB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RCC_AHB</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structrcc__dev__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrcc__dev__info" kindref="compound">rcc_dev_info</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rcc_clk_domain<sp/>clk_domain;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8<sp/>line_num;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Device<sp/>descriptor<sp/>table,<sp/>maps<sp/>rcc_clk_id<sp/>onto<sp/>bus<sp/>and<sp/>enable/reset</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>register<sp/>bit<sp/>numbers.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrcc__dev__info" kindref="compound">rcc_dev_info</ref><sp/>rcc_dev_table[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_GPIOA]<sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_GPIOB]<sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_GPIOC]<sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>4<sp/>},</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_GPIOD]<sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>5<sp/>},</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_AFIO]<sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_ADC1]<sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>9<sp/>},</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_ADC2]<sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>10<sp/>},</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_ADC3]<sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>15<sp/>},</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_USART1]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>14<sp/>},</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_USART2]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>17<sp/>},</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_USART3]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>18<sp/>},</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_TIMER1]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>11<sp/>},</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_TIMER2]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_TIMER3]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_TIMER4]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_SPI1]<sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>12<sp/>},</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_SPI2]<sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>14<sp/>},</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_DMA1]<sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>AHB,<sp/><sp/>.line_num<sp/>=<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_PWR]<sp/><sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>28},</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_BKP]<sp/><sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>27},</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_I2C1]<sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>21<sp/>},</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_I2C2]<sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>22<sp/>},</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_CRC]<sp/><sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>AHB,<sp/><sp/>.line_num<sp/>=<sp/>6},</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_FLITF]<sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>AHB,<sp/><sp/>.line_num<sp/>=<sp/>4},</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_SRAM]<sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>AHB,<sp/><sp/>.line_num<sp/>=<sp/>2},</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(STM32_HIGH_DENSITY)<sp/>||<sp/>defined(STM32_XL_DENSITY)</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_GPIOE]<sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>6<sp/>},</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_GPIOF]<sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>7<sp/>},</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_GPIOG]<sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>8<sp/>},</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_UART4]<sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>19<sp/>},</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_UART5]<sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>20<sp/>},</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_TIMER5]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_TIMER6]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>4<sp/>},</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_TIMER7]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>5<sp/>},</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_TIMER8]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>13<sp/>},</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_FSMC]<sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>AHB,<sp/><sp/>.line_num<sp/>=<sp/>8<sp/>},</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_DAC]<sp/><sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>29<sp/>},</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_DMA2]<sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>AHB,<sp/><sp/>.line_num<sp/>=<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_SDIO]<sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>AHB,<sp/><sp/>.line_num<sp/>=<sp/>10<sp/>},</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_SPI3]<sp/><sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>15<sp/>},</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32_XL_DENSITY</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_TIMER9]<sp/><sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>19<sp/>},</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_TIMER10]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>20<sp/>},</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_TIMER11]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB2,<sp/>.line_num<sp/>=<sp/>21<sp/>},</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_TIMER12]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>6<sp/>},</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_TIMER13]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>7<sp/>},</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>[RCC_TIMER14]<sp/>=<sp/>{<sp/>.clk_domain<sp/>=<sp/>APB1,<sp/>.line_num<sp/>=<sp/>8<sp/>},</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="rcc_8h_1a71fff95ed370de2756b75dbe13d901d3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rcc_clk_init(<ref refid="rcc_8h_1a2ed62482da272142b8e27178ac2b6813" kindref="member" tooltip="SYSCLK sources.">rcc_sysclk_src</ref><sp/>sysclk_src,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rcc_8h_1a744cacb90ada168b161e146c097caa06" kindref="member" tooltip="PLL entry clock source.">rcc_pllsrc</ref><sp/>pll_src,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="rcc_8h_1a91f017a07348f50f7626cca53b5b103b" kindref="member" tooltip="PLL multipliers.">rcc_pll_multiplier</ref><sp/>pll_mul)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>cfgr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>cr;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assume<sp/>that<sp/>we&apos;re<sp/>going<sp/>to<sp/>clock<sp/>the<sp/>chip<sp/>off<sp/>the<sp/>PLL,<sp/>fed<sp/>by</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>HSE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT(sysclk_src<sp/>==<sp/>RCC_CLKSRC_PLL<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pll_src<sp/><sp/><sp/><sp/>==<sp/>RCC_PLLSRC_HSE);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;CFGR<sp/>=<sp/>pll_src<sp/>|<sp/>pll_mul;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Turn<sp/>on<sp/>the<sp/>HSE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>cr<sp/>=<sp/><ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;CR;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>cr<sp/>|=<sp/>RCC_CR_HSEON;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;CR<sp/>=<sp/>cr;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(<ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;CR<sp/>&amp;<sp/>RCC_CR_HSERDY))</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>the<sp/>PLL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>cr<sp/>|=<sp/>RCC_CR_PLLON;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;CR<sp/>=<sp/>cr;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(<ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;CR<sp/>&amp;<sp/>RCC_CR_PLLRDY))</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Finally,<sp/>let&apos;s<sp/>switch<sp/>over<sp/>to<sp/>the<sp/>PLL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>cfgr<sp/>&amp;=<sp/>~RCC_CFGR_SW;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>cfgr<sp/>|=<sp/>RCC_CFGR_SW_PLL;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;CFGR<sp/>=<sp/>cfgr;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((<ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;CFGR<sp/>&amp;<sp/>RCC_CFGR_SWS)<sp/>!=<sp/>RCC_CFGR_SWS_PLL)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="rcc_8h_1a86b6f2bf668dcefd773689adc971fb6c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rcc_clk_enable(<ref refid="rcc_8h_1ae3722d2d8eff5283fb0388429953640f" kindref="member" tooltip="Identifies bus and clock line for a peripheral.">rcc_clk_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__io<sp/>uint32*<sp/>enable_regs[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[APB1]<sp/>=<sp/>&amp;<ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;APB1ENR,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[APB2]<sp/>=<sp/>&amp;<ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;APB2ENR,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[AHB]<sp/>=<sp/>&amp;<ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;AHBENR,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>rcc_clk_domain<sp/>clk_domain<sp/>=<sp/>rcc_dev_clk(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>__io<sp/>uint32*<sp/>enr<sp/>=<sp/>(__io<sp/>uint32*)enable_regs[clk_domain];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>lnum<sp/>=<sp/>rcc_dev_table[id].line_num;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitband_8h_1a20fc9d0655ba9ecfd07045b759729942" kindref="member" tooltip="Set a bit in an address in the peripheral bit-band region.">bb_peri_set_bit</ref>(enr,<sp/>lnum,<sp/>1);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="rcc_8h_1a4c02d4491b727bd5c41083d64a46ca67" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rcc_reset_dev(<ref refid="rcc_8h_1ae3722d2d8eff5283fb0388429953640f" kindref="member" tooltip="Identifies bus and clock line for a peripheral.">rcc_clk_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>__io<sp/>uint32*<sp/>reset_regs[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[APB1]<sp/>=<sp/>&amp;<ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;APB1RSTR,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[APB2]<sp/>=<sp/>&amp;<ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;APB2RSTR,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>rcc_clk_domain<sp/>clk_domain<sp/>=<sp/>rcc_dev_clk(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>__io<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>addr<sp/>=<sp/>(__io<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)reset_regs[clk_domain];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8<sp/>lnum<sp/>=<sp/>rcc_dev_table[id].line_num;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitband_8h_1a20fc9d0655ba9ecfd07045b759729942" kindref="member" tooltip="Set a bit in an address in the peripheral bit-band region.">bb_peri_set_bit</ref>(addr,<sp/>lnum,<sp/>1);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitband_8h_1a20fc9d0655ba9ecfd07045b759729942" kindref="member" tooltip="Set a bit in an address in the peripheral bit-band region.">bb_peri_set_bit</ref>(addr,<sp/>lnum,<sp/>0);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="rcc_8h_1a7b2d898f011803dcb76f1a18243275cd" refkind="member"><highlight class="normal">rcc_clk_domain<sp/>rcc_dev_clk(<ref refid="rcc_8h_1ae3722d2d8eff5283fb0388429953640f" kindref="member" tooltip="Identifies bus and clock line for a peripheral.">rcc_clk_id</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rcc_dev_table[id].clk_domain;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="rcc_8h_1ae8d2fdd8231355f811874ce14c077638" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rcc_set_prescaler(<ref refid="rcc_8h_1a8ff91a258f95dbd0ac963090c6b9eecf" kindref="member" tooltip="Prescaler identifiers.">rcc_prescaler</ref><sp/>prescaler,<sp/>uint32<sp/>divider)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32<sp/>masks[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[RCC_PRESCALER_AHB]<sp/>=<sp/>RCC_CFGR_HPRE,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[RCC_PRESCALER_APB1]<sp/>=<sp/>RCC_CFGR_PPRE1,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[RCC_PRESCALER_APB2]<sp/>=<sp/>RCC_CFGR_PPRE2,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[RCC_PRESCALER_USB]<sp/>=<sp/>RCC_CFGR_USBPRE,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[RCC_PRESCALER_ADC]<sp/>=<sp/>RCC_CFGR_ADCPRE,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>cfgr<sp/>=<sp/><ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;CFGR;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>cfgr<sp/>&amp;=<sp/>~masks[prescaler];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>cfgr<sp/>|=<sp/>divider;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="rcc_8h_1a0e681b03f364532055d88f63fec0d99d" kindref="member" tooltip="RCC register map base pointer.">RCC_BASE</ref>-&gt;CFGR<sp/>=<sp/>cfgr;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/mbolivar/leaf/libmaple/libmaple/rcc.c"/>
  </compounddef>
</doxygen>
