<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="_free_r_t_o_s_8h" kind="file">
    <compoundname>FreeRTOS.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes refid="projdefs_8h" local="yes">projdefs.h</includes>
    <includes refid="_free_r_t_o_s_config_8h" local="yes">FreeRTOSConfig.h</includes>
    <includes refid="portable_8h" local="yes">portable.h</includes>
    <includedby refid="_maple_free_r_t_o_s_8h" local="yes">libraries/FreeRTOS/MapleFreeRTOS.h</includedby>
    <includedby refid="croutine_8c" local="yes">libraries/FreeRTOS/utility/croutine.c</includedby>
    <includedby refid="heap__2_8c" local="yes">libraries/FreeRTOS/utility/heap_2.c</includedby>
    <includedby refid="list_8c" local="yes">libraries/FreeRTOS/utility/list.c</includedby>
    <includedby refid="port_8c" local="yes">libraries/FreeRTOS/utility/port.c</includedby>
    <includedby refid="queue_8c" local="yes">libraries/FreeRTOS/utility/queue.c</includedby>
    <includedby refid="tasks_8c" local="yes">libraries/FreeRTOS/utility/tasks.c</includedby>
    <includedby refid="timers_8c" local="yes">libraries/FreeRTOS/utility/timers.c</includedby>
    <incdepgraph>
      <node id="1147">
        <label>libraries/FreeRTOS/utility/FreeRTOS.h</label>
        <link refid="FreeRTOS.h"/>
        <childnode refid="1148" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1150" relation="include">
        </childnode>
        <childnode refid="1151" relation="include">
        </childnode>
      </node>
      <node id="1151">
        <label>portable.h</label>
        <link refid="portable_8h_source"/>
        <childnode refid="1152" relation="include">
        </childnode>
        <childnode refid="1153" relation="include">
        </childnode>
      </node>
      <node id="1150">
        <label>FreeRTOSConfig.h</label>
        <link refid="_free_r_t_o_s_config_8h_source"/>
      </node>
      <node id="1148">
        <label>stddef.h</label>
      </node>
      <node id="1149">
        <label>projdefs.h</label>
        <link refid="projdefs_8h_source"/>
      </node>
      <node id="1152">
        <label>portmacro.h</label>
        <link refid="portmacro_8h_source"/>
      </node>
      <node id="1153">
        <label>mpu_wrappers.h</label>
        <link refid="mpu__wrappers_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1154">
        <label>libraries/FreeRTOS/utility/FreeRTOS.h</label>
        <link refid="FreeRTOS.h"/>
        <childnode refid="1155" relation="include">
        </childnode>
        <childnode refid="1156" relation="include">
        </childnode>
        <childnode refid="1157" relation="include">
        </childnode>
        <childnode refid="1158" relation="include">
        </childnode>
        <childnode refid="1159" relation="include">
        </childnode>
        <childnode refid="1160" relation="include">
        </childnode>
        <childnode refid="1161" relation="include">
        </childnode>
        <childnode refid="1162" relation="include">
        </childnode>
      </node>
      <node id="1161">
        <label>libraries/FreeRTOS/utility/tasks.c</label>
        <link refid="tasks_8c_source"/>
      </node>
      <node id="1160">
        <label>libraries/FreeRTOS/utility/queue.c</label>
        <link refid="queue_8c_source"/>
      </node>
      <node id="1157">
        <label>libraries/FreeRTOS/utility/heap_2.c</label>
        <link refid="heap__2_8c_source"/>
      </node>
      <node id="1159">
        <label>libraries/FreeRTOS/utility/port.c</label>
        <link refid="port_8c_source"/>
      </node>
      <node id="1156">
        <label>libraries/FreeRTOS/utility/croutine.c</label>
        <link refid="croutine_8c_source"/>
      </node>
      <node id="1158">
        <label>libraries/FreeRTOS/utility/list.c</label>
        <link refid="list_8c_source"/>
      </node>
      <node id="1155">
        <label>libraries/FreeRTOS/MapleFreeRTOS.h</label>
        <link refid="_maple_free_r_t_o_s_8h_source"/>
      </node>
      <node id="1162">
        <label>libraries/FreeRTOS/utility/timers.c</label>
        <link refid="timers_8c_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_free_r_t_o_s_8h_1a3e103eedd5088f5f30bc55e55820a9e3" prot="public" static="no">
        <name>vQueueAddToRegistry</name>
        <param><defname>xQueue</defname></param>
        <param><defname>pcName</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libraries/FreeRTOS/utility/FreeRTOS.h" line="233" bodyfile="/home/mbolivar/leaf/libmaple/libraries/FreeRTOS/utility/FreeRTOS.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_free_r_t_o_s_8h_1af007b655ee91c919bad9cd2798195899" prot="public" static="no">
        <name>vQueueUnregisterQueue</name>
        <param><defname>xQueue</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libraries/FreeRTOS/utility/FreeRTOS.h" line="234" bodyfile="/home/mbolivar/leaf/libmaple/libraries/FreeRTOS/utility/FreeRTOS.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_free_r_t_o_s_8h_1a5c18a26ca358b29dd9b235af37b572e3" prot="public" static="no">
        <type>portBASE_TYPE(*</type>
        <definition>typedef portBASE_TYPE(* pdTASK_HOOK_CODE)(void *)</definition>
        <argsstring>)(void *)</argsstring>
        <name>pdTASK_HOOK_CODE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libraries/FreeRTOS/utility/FreeRTOS.h" line="81" bodyfile="/home/mbolivar/leaf/libmaple/libraries/FreeRTOS/utility/FreeRTOS.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>FreeRTOS<sp/>V7.0.1<sp/>-<sp/>Copyright<sp/>(C)<sp/>2011<sp/>Real<sp/>Time<sp/>Engineers<sp/>Ltd.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>FreeRTOS<sp/>supports<sp/>many<sp/>tools<sp/>and<sp/>architectures.<sp/>V7.0.0<sp/>is<sp/>sponsored<sp/>by:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>Atollic<sp/>AB<sp/>-<sp/>Atollic<sp/>provides<sp/>professional<sp/>embedded<sp/>systems<sp/>development<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>tools<sp/>for<sp/>C/C++<sp/>development,<sp/>code<sp/>analysis<sp/>and<sp/>test<sp/>automation.<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>See<sp/>http://www.atollic.com</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>***************************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>FreeRTOS<sp/>tutorial<sp/>books<sp/>are<sp/>available<sp/>in<sp/>pdf<sp/>and<sp/>paperback.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>Complete,<sp/>revised,<sp/>and<sp/>edited<sp/>pdf<sp/>reference<sp/>manuals<sp/>are<sp/>also<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>available.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>Purchasing<sp/>FreeRTOS<sp/>documentation<sp/>will<sp/>not<sp/>only<sp/>help<sp/>you,<sp/>by<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>ensuring<sp/>you<sp/>get<sp/>running<sp/>as<sp/>quickly<sp/>as<sp/>possible<sp/>and<sp/>with<sp/>an<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>in-depth<sp/>knowledge<sp/>of<sp/>how<sp/>to<sp/>use<sp/>FreeRTOS,<sp/>it<sp/>will<sp/>also<sp/>help<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>the<sp/>FreeRTOS<sp/>project<sp/>to<sp/>continue<sp/>with<sp/>its<sp/>mission<sp/>of<sp/>providing<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>professional<sp/>grade,<sp/>cross<sp/>platform,<sp/>de<sp/>facto<sp/>standard<sp/>solutions<sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>for<sp/>microcontrollers<sp/>-<sp/>completely<sp/>free<sp/>of<sp/>charge!<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>&gt;&gt;&gt;<sp/>See<sp/>http://www.FreeRTOS.org/Documentation<sp/>for<sp/>details.<sp/>&lt;&lt;&lt;<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/>Thank<sp/>you<sp/>for<sp/>using<sp/>FreeRTOS,<sp/>and<sp/>thank<sp/>you<sp/>for<sp/>your<sp/>support!<sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/>***************************************************************************</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>FreeRTOS<sp/>distribution.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"></highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/>FreeRTOS<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it<sp/>under</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>(version<sp/>2)<sp/>as<sp/>published<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/>Free<sp/>Software<sp/>Foundation<sp/>AND<sp/>MODIFIED<sp/>BY<sp/>the<sp/>FreeRTOS<sp/>exception.</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/>&gt;&gt;&gt;NOTE&lt;&lt;&lt;<sp/>The<sp/>modification<sp/>to<sp/>the<sp/>GPL<sp/>is<sp/>included<sp/>to<sp/>allow<sp/>you<sp/>to</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/>distribute<sp/>a<sp/>combined<sp/>work<sp/>that<sp/>includes<sp/>FreeRTOS<sp/>without<sp/>being<sp/>obliged<sp/>to</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/>provide<sp/>the<sp/>source<sp/>code<sp/>for<sp/>proprietary<sp/>components<sp/>outside<sp/>of<sp/>the<sp/>FreeRTOS</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/>kernel.<sp/><sp/>FreeRTOS<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/>more<sp/>details.<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/>License<sp/>and<sp/>the<sp/>FreeRTOS<sp/>license<sp/>exception<sp/>along<sp/>with<sp/>FreeRTOS;<sp/>if<sp/>not<sp/>it</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/>can<sp/>be<sp/>viewed<sp/>here:<sp/>http://www.freertos.org/a00114.html<sp/>and<sp/>also<sp/>obtained</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/>by<sp/>writing<sp/>to<sp/>Richard<sp/>Barry,<sp/>contact<sp/>details<sp/>for<sp/>whom<sp/>are<sp/>available<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/>FreeRTOS<sp/>WEB<sp/>site.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/>1<sp/>tab<sp/>==<sp/>4<sp/>spaces!</highlight></codeline>
<codeline lineno="49"><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/>http://www.FreeRTOS.org<sp/>-<sp/>Documentation,<sp/>latest<sp/>information,<sp/>license<sp/>and</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/>contact<sp/>details.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/>http://www.SafeRTOS.com<sp/>-<sp/>A<sp/>version<sp/>that<sp/>is<sp/>certified<sp/>for<sp/>use<sp/>in<sp/>safety</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/>critical<sp/>systems.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"></highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/>http://www.OpenRTOS.com<sp/>-<sp/>Commercial<sp/>support,<sp/>development,<sp/>porting,</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/>licensing<sp/>and<sp/>training<sp/>services.</highlight></codeline>
<codeline lineno="58"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INC_FREERTOS_H</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INC_FREERTOS_H</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>Include<sp/>the<sp/>generic<sp/>headers<sp/>required<sp/>for<sp/>the<sp/>FreeRTOS<sp/>port<sp/>being<sp/>used.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Basic<sp/>FreeRTOS<sp/>definitions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;projdefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Application<sp/>specific<sp/>configuration<sp/>options.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FreeRTOSConfig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Definitions<sp/>specific<sp/>to<sp/>the<sp/>port<sp/>being<sp/>used.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;portable.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Defines<sp/>the<sp/>prototype<sp/>to<sp/>which<sp/>the<sp/>application<sp/>task<sp/>hook<sp/>function<sp/>must</highlight></codeline>
<codeline lineno="80"><highlight class="comment">conform.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>portBASE_TYPE<sp/>(*pdTASK_HOOK_CODE)(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>Check<sp/>all<sp/>the<sp/>required<sp/>application<sp/>specific<sp/>macros<sp/>have<sp/>been<sp/>defined.</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>These<sp/>macros<sp/>are<sp/>application<sp/>specific<sp/>and<sp/>(as<sp/>downloaded)<sp/>are<sp/>defined</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>within<sp/>FreeRTOSConfig.h.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configUSE_PREEMPTION</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Missing<sp/>definition:<sp/><sp/>configUSE_PREEMPTION<sp/>should<sp/>be<sp/>defined<sp/>in<sp/>FreeRTOSConfig.h<sp/>as<sp/>either<sp/>1<sp/>or<sp/>0.<sp/><sp/>See<sp/>the<sp/>Configuration<sp/>section<sp/>of<sp/>the<sp/>FreeRTOS<sp/>API<sp/>documentation<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configUSE_IDLE_HOOK</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Missing<sp/>definition:<sp/><sp/>configUSE_IDLE_HOOK<sp/>should<sp/>be<sp/>defined<sp/>in<sp/>FreeRTOSConfig.h<sp/>as<sp/>either<sp/>1<sp/>or<sp/>0.<sp/><sp/>See<sp/>the<sp/>Configuration<sp/>section<sp/>of<sp/>the<sp/>FreeRTOS<sp/>API<sp/>documentation<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configUSE_TICK_HOOK</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Missing<sp/>definition:<sp/><sp/>configUSE_TICK_HOOK<sp/>should<sp/>be<sp/>defined<sp/>in<sp/>FreeRTOSConfig.h<sp/>as<sp/>either<sp/>1<sp/>or<sp/>0.<sp/><sp/>See<sp/>the<sp/>Configuration<sp/>section<sp/>of<sp/>the<sp/>FreeRTOS<sp/>API<sp/>documentation<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configUSE_CO_ROUTINES</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/><sp/>Missing<sp/>definition:<sp/><sp/>configUSE_CO_ROUTINES<sp/>should<sp/>be<sp/>defined<sp/>in<sp/>FreeRTOSConfig.h<sp/>as<sp/>either<sp/>1<sp/>or<sp/>0.<sp/><sp/>See<sp/>the<sp/>Configuration<sp/>section<sp/>of<sp/>the<sp/>FreeRTOS<sp/>API<sp/>documentation<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_vTaskPrioritySet</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Missing<sp/>definition:<sp/><sp/>INCLUDE_vTaskPrioritySet<sp/>should<sp/>be<sp/>defined<sp/>in<sp/>FreeRTOSConfig.h<sp/>as<sp/>either<sp/>1<sp/>or<sp/>0.<sp/><sp/>See<sp/>the<sp/>Configuration<sp/>section<sp/>of<sp/>the<sp/>FreeRTOS<sp/>API<sp/>documentation<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_uxTaskPriorityGet</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Missing<sp/>definition:<sp/><sp/>INCLUDE_uxTaskPriorityGet<sp/>should<sp/>be<sp/>defined<sp/>in<sp/>FreeRTOSConfig.h<sp/>as<sp/>either<sp/>1<sp/>or<sp/>0.<sp/><sp/>See<sp/>the<sp/>Configuration<sp/>section<sp/>of<sp/>the<sp/>FreeRTOS<sp/>API<sp/>documentation<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_vTaskDelete<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Missing<sp/>definition:<sp/><sp/>INCLUDE_vTaskDelete<sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>defined<sp/>in<sp/>FreeRTOSConfig.h<sp/>as<sp/>either<sp/>1<sp/>or<sp/>0.<sp/><sp/>See<sp/>the<sp/>Configuration<sp/>section<sp/>of<sp/>the<sp/>FreeRTOS<sp/>API<sp/>documentation<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_vTaskCleanUpResources</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Missing<sp/>definition:<sp/><sp/>INCLUDE_vTaskCleanUpResources<sp/>should<sp/>be<sp/>defined<sp/>in<sp/>FreeRTOSConfig.h<sp/>as<sp/>either<sp/>1<sp/>or<sp/>0.<sp/><sp/>See<sp/>the<sp/>Configuration<sp/>section<sp/>of<sp/>the<sp/>FreeRTOS<sp/>API<sp/>documentation<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_vTaskSuspend<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Missing<sp/>definition:<sp/><sp/>INCLUDE_vTaskSuspend<sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>defined<sp/>in<sp/>FreeRTOSConfig.h<sp/>as<sp/>either<sp/>1<sp/>or<sp/>0.<sp/><sp/>See<sp/>the<sp/>Configuration<sp/>section<sp/>of<sp/>the<sp/>FreeRTOS<sp/>API<sp/>documentation<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_vTaskDelayUntil</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Missing<sp/>definition:<sp/><sp/>INCLUDE_vTaskDelayUntil<sp/>should<sp/>be<sp/>defined<sp/>in<sp/>FreeRTOSConfig.h<sp/>as<sp/>either<sp/>1<sp/>or<sp/>0.<sp/><sp/>See<sp/>the<sp/>Configuration<sp/>section<sp/>of<sp/>the<sp/>FreeRTOS<sp/>API<sp/>documentation<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_vTaskDelay</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Missing<sp/>definition:<sp/><sp/>INCLUDE_vTaskDelay<sp/>should<sp/>be<sp/>defined<sp/>in<sp/>FreeRTOSConfig.h<sp/>as<sp/>either<sp/>1<sp/>or<sp/>0.<sp/><sp/>See<sp/>the<sp/>Configuration<sp/>section<sp/>of<sp/>the<sp/>FreeRTOS<sp/>API<sp/>documentation<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configUSE_16_BIT_TICKS</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>Missing<sp/>definition:<sp/><sp/>configUSE_16_BIT_TICKS<sp/>should<sp/>be<sp/>defined<sp/>in<sp/>FreeRTOSConfig.h<sp/>as<sp/>either<sp/>1<sp/>or<sp/>0.<sp/><sp/>See<sp/>the<sp/>Configuration<sp/>section<sp/>of<sp/>the<sp/>FreeRTOS<sp/>API<sp/>documentation<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configUSE_APPLICATION_TASK_TAG</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configUSE_APPLICATION_TASK_TAG<sp/>0</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_uxTaskGetStackHighWaterMark</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>INCLUDE_uxTaskGetStackHighWaterMark<sp/>0</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configUSE_RECURSIVE_MUTEXES</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configUSE_RECURSIVE_MUTEXES<sp/>0</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configUSE_MUTEXES</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configUSE_MUTEXES<sp/>0</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configUSE_TIMERS</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configUSE_TIMERS<sp/>0</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configUSE_COUNTING_SEMAPHORES</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configUSE_COUNTING_SEMAPHORES<sp/>0</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configUSE_ALTERNATIVE_API</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configUSE_ALTERNATIVE_API<sp/>0</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>portCRITICAL_NESTING_IN_TCB</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portCRITICAL_NESTING_IN_TCB<sp/>0</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configMAX_TASK_NAME_LEN</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configMAX_TASK_NAME_LEN<sp/>16</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configIDLE_SHOULD_YIELD</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configIDLE_SHOULD_YIELD<sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>configMAX_TASK_NAME_LEN<sp/>&lt;<sp/>1</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>configMAX_TASK_NAME_LEN<sp/>must<sp/>be<sp/>set<sp/>to<sp/>a<sp/>minimum<sp/>of<sp/>1<sp/>in<sp/>FreeRTOSConfig.h</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_xTaskResumeFromISR</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>INCLUDE_xTaskResumeFromISR<sp/>1</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configASSERT</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configASSERT(<sp/>x<sp/>)</highlight></codeline>
<codeline lineno="191"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>timers<sp/>module<sp/>relies<sp/>on<sp/>xTaskGetSchedulerState().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>configUSE_TIMERS<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="195"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>configTIMER_TASK_PRIORITY</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#error<sp/>If<sp/>configUSE_TIMERS<sp/>is<sp/>set<sp/>to<sp/>1<sp/>then<sp/>configTIMER_TASK_PRIORITY<sp/>must<sp/>also<sp/>be<sp/>defined.</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>configTIMER_TASK_PRIORITY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>configTIMER_QUEUE_LENGTH</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#error<sp/>If<sp/>configUSE_TIMERS<sp/>is<sp/>set<sp/>to<sp/>1<sp/>then<sp/>configTIMER_QUEUE_LENGTH<sp/>must<sp/>also<sp/>be<sp/>defined.</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>configTIMER_QUEUE_LENGTH<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>configTIMER_TASK_STACK_DEPTH</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#error<sp/>If<sp/>configUSE_TIMERS<sp/>is<sp/>set<sp/>to<sp/>1<sp/>then<sp/>configTIMER_TASK_STACK_DEPTH<sp/>must<sp/>also<sp/>be<sp/>defined.</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>configTIMER_TASK_STACK_DEPTH<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configUSE_TIMERS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_xTaskGetSchedulerState</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>INCLUDE_xTaskGetSchedulerState<sp/>0</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDE_xTaskGetCurrentTaskHandle</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>INCLUDE_xTaskGetCurrentTaskHandle<sp/>0</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>portSET_INTERRUPT_MASK_FROM_ISR</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portSET_INTERRUPT_MASK_FROM_ISR()<sp/>0</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>portCLEAR_INTERRUPT_MASK_FROM_ISR</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portCLEAR_INTERRUPT_MASK_FROM_ISR(<sp/>uxSavedStatusValue<sp/>)<sp/>(<sp/>void<sp/>)<sp/>uxSavedStatusValue</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configQUEUE_REGISTRY_SIZE</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configQUEUE_REGISTRY_SIZE<sp/>0U</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(<sp/>configQUEUE_REGISTRY_SIZE<sp/>&lt;<sp/>1U<sp/>)</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>vQueueAddToRegistry(<sp/>xQueue,<sp/>pcName<sp/>)</highlight></codeline>
<codeline lineno="234"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>vQueueUnregisterQueue(<sp/>xQueue<sp/>)</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Remove<sp/>any<sp/>unused<sp/>trace<sp/>macros.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceSTART</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Used<sp/>to<sp/>perform<sp/>any<sp/>necessary<sp/>initialisation<sp/>-<sp/>for<sp/>example,<sp/>open<sp/>a<sp/>file</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/><sp/><sp/><sp/>into<sp/>which<sp/>trace<sp/>is<sp/>to<sp/>be<sp/>written.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceSTART()</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceEND</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>to<sp/>close<sp/>a<sp/>trace,<sp/>for<sp/>example<sp/>close<sp/>a<sp/>file<sp/>into<sp/>which<sp/>trace<sp/>has<sp/>been</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/><sp/><sp/><sp/>written.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceEND()</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTASK_SWITCHED_IN</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Called<sp/>after<sp/>a<sp/>task<sp/>has<sp/>been<sp/>selected<sp/>to<sp/>run.<sp/><sp/>pxCurrentTCB<sp/>holds<sp/>a<sp/>pointer</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/>to<sp/>the<sp/>task<sp/>control<sp/>block<sp/>of<sp/>the<sp/>selected<sp/>task.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTASK_SWITCHED_IN()</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTASK_SWITCHED_OUT</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Called<sp/>before<sp/>a<sp/>task<sp/>has<sp/>been<sp/>selected<sp/>to<sp/>run.<sp/><sp/>pxCurrentTCB<sp/>holds<sp/>a<sp/>pointer</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/>to<sp/>the<sp/>task<sp/>control<sp/>block<sp/>of<sp/>the<sp/>task<sp/>being<sp/>switched<sp/>out.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTASK_SWITCHED_OUT()</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceBLOCKING_ON_QUEUE_RECEIVE</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Task<sp/>is<sp/>about<sp/>to<sp/>block<sp/>because<sp/>it<sp/>cannot<sp/>read<sp/>from<sp/>a</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/>queue/mutex/semaphore.<sp/><sp/>pxQueue<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>queue/mutex/semaphore</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/>upon<sp/>which<sp/>the<sp/>read<sp/>was<sp/>attempted.<sp/><sp/>pxCurrentTCB<sp/>points<sp/>to<sp/>the<sp/>TCB<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/>task<sp/>that<sp/>attempted<sp/>the<sp/>read.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceBLOCKING_ON_QUEUE_RECEIVE(<sp/>pxQueue<sp/>)</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceBLOCKING_ON_QUEUE_SEND</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Task<sp/>is<sp/>about<sp/>to<sp/>block<sp/>because<sp/>it<sp/>cannot<sp/>write<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/>queue/mutex/semaphore.<sp/><sp/>pxQueue<sp/>is<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>queue/mutex/semaphore</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/>upon<sp/>which<sp/>the<sp/>write<sp/>was<sp/>attempted.<sp/><sp/>pxCurrentTCB<sp/>points<sp/>to<sp/>the<sp/>TCB<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/>task<sp/>that<sp/>attempted<sp/>the<sp/>write.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceBLOCKING_ON_QUEUE_SEND(<sp/>pxQueue<sp/>)</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configCHECK_FOR_STACK_OVERFLOW</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configCHECK_FOR_STACK_OVERFLOW<sp/>0</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>event<sp/>macros<sp/>are<sp/>embedded<sp/>in<sp/>the<sp/>kernel<sp/>API<sp/>calls.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceQUEUE_CREATE<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceQUEUE_CREATE(<sp/>pxNewQueue<sp/>)</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceQUEUE_CREATE_FAILED</highlight></codeline>
<codeline lineno="290"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceQUEUE_CREATE_FAILED()</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceCREATE_MUTEX</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceCREATE_MUTEX(<sp/>pxNewQueue<sp/>)</highlight></codeline>
<codeline lineno="295"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceCREATE_MUTEX_FAILED</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceCREATE_MUTEX_FAILED()</highlight></codeline>
<codeline lineno="299"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceGIVE_MUTEX_RECURSIVE</highlight></codeline>
<codeline lineno="302"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceGIVE_MUTEX_RECURSIVE(<sp/>pxMutex<sp/>)</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceGIVE_MUTEX_RECURSIVE_FAILED</highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceGIVE_MUTEX_RECURSIVE_FAILED(<sp/>pxMutex<sp/>)</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="308"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTAKE_MUTEX_RECURSIVE</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTAKE_MUTEX_RECURSIVE(<sp/>pxMutex<sp/>)</highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="312"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTAKE_MUTEX_RECURSIVE_FAILED</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTAKE_MUTEX_RECURSIVE_FAILED(<sp/>pxMutex<sp/>)</highlight></codeline>
<codeline lineno="315"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceCREATE_COUNTING_SEMAPHORE</highlight></codeline>
<codeline lineno="318"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceCREATE_COUNTING_SEMAPHORE()</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="320"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceCREATE_COUNTING_SEMAPHORE_FAILED</highlight></codeline>
<codeline lineno="322"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceCREATE_COUNTING_SEMAPHORE_FAILED()</highlight></codeline>
<codeline lineno="323"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceQUEUE_SEND</highlight></codeline>
<codeline lineno="326"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceQUEUE_SEND(<sp/>pxQueue<sp/>)</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceQUEUE_SEND_FAILED</highlight></codeline>
<codeline lineno="330"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceQUEUE_SEND_FAILED(<sp/>pxQueue<sp/>)</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceQUEUE_RECEIVE</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceQUEUE_RECEIVE(<sp/>pxQueue<sp/>)</highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceQUEUE_PEEK</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceQUEUE_PEEK(<sp/>pxQueue<sp/>)</highlight></codeline>
<codeline lineno="339"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceQUEUE_RECEIVE_FAILED</highlight></codeline>
<codeline lineno="342"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceQUEUE_RECEIVE_FAILED(<sp/>pxQueue<sp/>)</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="344"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceQUEUE_SEND_FROM_ISR</highlight></codeline>
<codeline lineno="346"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceQUEUE_SEND_FROM_ISR(<sp/>pxQueue<sp/>)</highlight></codeline>
<codeline lineno="347"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="348"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceQUEUE_SEND_FROM_ISR_FAILED</highlight></codeline>
<codeline lineno="350"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceQUEUE_SEND_FROM_ISR_FAILED(<sp/>pxQueue<sp/>)</highlight></codeline>
<codeline lineno="351"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="352"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceQUEUE_RECEIVE_FROM_ISR</highlight></codeline>
<codeline lineno="354"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceQUEUE_RECEIVE_FROM_ISR(<sp/>pxQueue<sp/>)</highlight></codeline>
<codeline lineno="355"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceQUEUE_RECEIVE_FROM_ISR_FAILED</highlight></codeline>
<codeline lineno="358"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceQUEUE_RECEIVE_FROM_ISR_FAILED(<sp/>pxQueue<sp/>)</highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="360"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceQUEUE_DELETE</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceQUEUE_DELETE(<sp/>pxQueue<sp/>)</highlight></codeline>
<codeline lineno="363"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="364"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTASK_CREATE</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTASK_CREATE(<sp/>pxNewTCB<sp/>)</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="368"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTASK_CREATE_FAILED</highlight></codeline>
<codeline lineno="370"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTASK_CREATE_FAILED()</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTASK_DELETE</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTASK_DELETE(<sp/>pxTaskToDelete<sp/>)</highlight></codeline>
<codeline lineno="375"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="376"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTASK_DELAY_UNTIL</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTASK_DELAY_UNTIL()</highlight></codeline>
<codeline lineno="379"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="380"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTASK_DELAY</highlight></codeline>
<codeline lineno="382"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTASK_DELAY()</highlight></codeline>
<codeline lineno="383"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="384"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTASK_PRIORITY_SET</highlight></codeline>
<codeline lineno="386"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTASK_PRIORITY_SET(<sp/>pxTask,<sp/>uxNewPriority<sp/>)</highlight></codeline>
<codeline lineno="387"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTASK_SUSPEND</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTASK_SUSPEND(<sp/>pxTaskToSuspend<sp/>)</highlight></codeline>
<codeline lineno="391"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="392"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTASK_RESUME</highlight></codeline>
<codeline lineno="394"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTASK_RESUME(<sp/>pxTaskToResume<sp/>)</highlight></codeline>
<codeline lineno="395"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="396"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTASK_RESUME_FROM_ISR</highlight></codeline>
<codeline lineno="398"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTASK_RESUME_FROM_ISR(<sp/>pxTaskToResume<sp/>)</highlight></codeline>
<codeline lineno="399"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="400"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTASK_INCREMENT_TICK</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTASK_INCREMENT_TICK(<sp/>xTickCount<sp/>)</highlight></codeline>
<codeline lineno="403"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTIMER_CREATE</highlight></codeline>
<codeline lineno="406"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTIMER_CREATE(<sp/>pxNewTimer<sp/>)</highlight></codeline>
<codeline lineno="407"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="408"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTIMER_CREATE_FAILED</highlight></codeline>
<codeline lineno="410"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTIMER_CREATE_FAILED()</highlight></codeline>
<codeline lineno="411"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="412"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTIMER_COMMAND_SEND</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTIMER_COMMAND_SEND(<sp/>xTimer,<sp/>xMessageID,<sp/>xMessageValueValue,<sp/>xReturn<sp/>)</highlight></codeline>
<codeline lineno="415"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="416"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTIMER_EXPIRED</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTIMER_EXPIRED(<sp/>pxTimer<sp/>)</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="420"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>traceTIMER_COMMAND_RECEIVED</highlight></codeline>
<codeline lineno="422"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>traceTIMER_COMMAND_RECEIVED(<sp/>pxTimer,<sp/>xMessageID,<sp/>xMessageValue<sp/>)</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="424"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configGENERATE_RUN_TIME_STATS</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configGENERATE_RUN_TIME_STATS<sp/>0</highlight></codeline>
<codeline lineno="427"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="428"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(<sp/>configGENERATE_RUN_TIME_STATS<sp/>==<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="430"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>portCONFIGURE_TIMER_FOR_RUN_TIME_STATS</highlight></codeline>
<codeline lineno="432"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#error<sp/>If<sp/>configGENERATE_RUN_TIME_STATS<sp/>is<sp/>defined<sp/>then<sp/>portCONFIGURE_TIMER_FOR_RUN_TIME_STATS<sp/>must<sp/>also<sp/>be<sp/>defined.<sp/><sp/>portCONFIGURE_TIMER_FOR_RUN_TIME_STATS<sp/>should<sp/>call<sp/>a<sp/>port<sp/>layer<sp/>function<sp/>to<sp/>setup<sp/>a<sp/>peripheral<sp/>timer/counter<sp/>that<sp/>can<sp/>then<sp/>be<sp/>used<sp/>as<sp/>the<sp/>run<sp/>time<sp/>counter<sp/>time<sp/>base.</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>portCONFIGURE_TIMER_FOR_RUN_TIME_STATS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>portGET_RUN_TIME_COUNTER_VALUE</highlight></codeline>
<codeline lineno="436"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>portALT_GET_RUN_TIME_COUNTER_VALUE</highlight></codeline>
<codeline lineno="437"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#error<sp/>If<sp/>configGENERATE_RUN_TIME_STATS<sp/>is<sp/>defined<sp/>then<sp/>either<sp/>portGET_RUN_TIME_COUNTER_VALUE<sp/>or<sp/>portALT_GET_RUN_TIME_COUNTER_VALUE<sp/>must<sp/>also<sp/>be<sp/>defined.<sp/><sp/>See<sp/>the<sp/>examples<sp/>provided<sp/>and<sp/>the<sp/>FreeRTOS<sp/>web<sp/>site<sp/>for<sp/>more<sp/>information.</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>portALT_GET_RUN_TIME_COUNTER_VALUE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/></highlight><highlight class="comment">/*<sp/>portGET_RUN_TIME_COUNTER_VALUE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>configGENERATE_RUN_TIME_STATS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>portCONFIGURE_TIMER_FOR_RUN_TIME_STATS</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portCONFIGURE_TIMER_FOR_RUN_TIME_STATS()</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="446"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>configUSE_MALLOC_FAILED_HOOK</highlight></codeline>
<codeline lineno="448"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>configUSE_MALLOC_FAILED_HOOK<sp/>0</highlight></codeline>
<codeline lineno="449"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="450"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>portPRIVILEGE_BIT</highlight></codeline>
<codeline lineno="452"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portPRIVILEGE_BIT<sp/>(<sp/>(<sp/>unsigned<sp/>portBASE_TYPE<sp/>)<sp/>0x00<sp/>)</highlight></codeline>
<codeline lineno="453"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="454"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>portYIELD_WITHIN_API</highlight></codeline>
<codeline lineno="456"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>portYIELD_WITHIN_API<sp/>portYIELD</highlight></codeline>
<codeline lineno="457"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="458"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>pvPortMallocAligned</highlight></codeline>
<codeline lineno="460"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>pvPortMallocAligned(<sp/>x,<sp/>puxStackBuffer<sp/>)<sp/>(<sp/>(<sp/>(<sp/>puxStackBuffer<sp/>)<sp/>==<sp/>NULL<sp/>)<sp/>?<sp/>(<sp/>pvPortMalloc(<sp/>(<sp/>x<sp/>)<sp/>)<sp/>)<sp/>:<sp/>(<sp/>puxStackBuffer<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="462"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>vPortFreeAligned</highlight></codeline>
<codeline lineno="464"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>vPortFreeAligned(<sp/>pvBlockToFree<sp/>)<sp/>vPortFree(<sp/>pvBlockToFree<sp/>)</highlight></codeline>
<codeline lineno="465"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="466"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INC_FREERTOS_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mbolivar/leaf/libmaple/libraries/FreeRTOS/utility/FreeRTOS.h"/>
  </compounddef>
</doxygen>
