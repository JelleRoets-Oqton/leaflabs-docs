<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="usb__core_8c" kind="file">
    <compoundname>usb_core.c</compoundname>
    <includes refid="usb__lib_8h" local="yes">usb_lib.h</includes>
    <incdepgraph>
      <node id="842">
        <label>usb_mem.h</label>
        <link refid="usb__mem_8h_source"/>
      </node>
      <node id="837">
        <label>usb_type.h</label>
        <link refid="usb__type_8h_source"/>
      </node>
      <node id="843">
        <label>usb_int.h</label>
        <link refid="usb__int_8h_source"/>
      </node>
      <node id="836">
        <label>usb_lib.h</label>
        <link refid="usb__lib_8h_source"/>
        <childnode refid="837" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="842" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
      </node>
      <node id="841">
        <label>usb_init.h</label>
        <link refid="usb__init_8h_source"/>
      </node>
      <node id="839">
        <label>usb_def.h</label>
        <link refid="usb__def_8h_source"/>
      </node>
      <node id="835">
        <label>libmaple/usb/usb_lib/usb_core.c</label>
        <link refid="usb_core.c"/>
        <childnode refid="836" relation="include">
        </childnode>
      </node>
      <node id="840">
        <label>usb_core.h</label>
        <link refid="usb__core_8h_source"/>
      </node>
      <node id="838">
        <label>usb_regs.h</label>
        <link refid="usb__regs_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="usb__core_8c_1a847607a65466b22eb01e6887507336af" prot="public" static="no">
        <name>ValBit</name>
        <param><defname>VAR</defname></param>
        <param><defname>Place</defname></param>
        <initializer>(VAR &amp; (1 &lt;&lt; Place))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="20" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__core_8c_1a37ad5a6d3aec305a1848dbd66d67f914" prot="public" static="no">
        <name>SetBit</name>
        <param><defname>VAR</defname></param>
        <param><defname>Place</defname></param>
        <initializer>(VAR |= (1 &lt;&lt; Place))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="21" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__core_8c_1a2d6c1954b1f0004346e3110f88fe6a81" prot="public" static="no">
        <name>ClrBit</name>
        <param><defname>VAR</defname></param>
        <param><defname>Place</defname></param>
        <initializer>(VAR &amp;= ((1 &lt;&lt; Place) ^ 255))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="22" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__core_8c_1a76060429b273529fd3772eee27bcbe86" prot="public" static="no">
        <name>Send0LengthData</name>
        <param></param>
        <initializer>{ _SetEPTxCount(ENDP0, 0); \
    vSetEPTxStatus(EP_TX_VALID); \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="26" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__core_8c_1acbff03beed95b7719be8b06c73fc8fab" prot="public" static="no">
        <name>vSetEPRxStatus</name>
        <param><defname>st</defname></param>
        <initializer>(SaveRState = st)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="28" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__core_8c_1adbf4abcc12bef522c6cf40af86d08984" prot="public" static="no">
        <name>vSetEPTxStatus</name>
        <param><defname>st</defname></param>
        <initializer>(SaveTState = st)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="29" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__core_8c_1aae55e5854dde6d841f91931996f4b796" prot="public" static="no">
        <name>USB_StatusIn</name>
        <param></param>
        <initializer>Send0LengthData()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="31" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__core_8c_1a8985fd67142d4bc523989541265f89a7" prot="public" static="no">
        <name>USB_StatusOut</name>
        <param></param>
        <initializer>vSetEPRxStatus(EP_RX_VALID)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="32" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__core_8c_1a69c35f9e0f16e6ba40bd6d2b12dc6380" prot="public" static="no">
        <name>StatusInfo0</name>
        <initializer>StatusInfo.bw.bb1 /* Reverse bb0 &amp; bb1 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="34" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="usb__core_8c_1a910104d62c2c792eb13506ff551812b6" prot="public" static="no">
        <name>StatusInfo1</name>
        <initializer>StatusInfo.bw.bb0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="35" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="usb__core_8c_1a621603c17562d4c8edbd6c4233bfa226" prot="public" static="no" mutable="no">
        <type><ref refid="unionu16__u8" kindref="compound">u16_u8</ref></type>
        <definition>u16_u8 StatusInfo</definition>
        <argsstring></argsstring>
        <name>StatusInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="39" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="usb__core_8c_1a19f3fb09767ab7b8ea0bf86fceab270a" prot="public" static="no" mutable="no">
        <type>USB_Bool</type>
        <definition>USB_Bool Data_Mul_MaxPacketSize</definition>
        <argsstring></argsstring>
        <name>Data_Mul_MaxPacketSize</name>
        <initializer> FALSE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="40" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="usb__core_8c_1aa7348ee1d704b9ebe53b8a36d70d506c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataStageOut</definition>
        <argsstring>(void)</argsstring>
        <name>DataStageOut</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="42" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="426" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1aeda662e2a8ce94196630176224eb914c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataStageIn</definition>
        <argsstring>(void)</argsstring>
        <name>DataStageIn</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="43" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="483" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a41b7c5903535ebfac4f03fd3dc98db60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NoData_Setup0</definition>
        <argsstring>(void)</argsstring>
        <name>NoData_Setup0</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="44" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="542" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a512a55ab56529128c4561de8334e92d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Data_Setup0</definition>
        <argsstring>(void)</argsstring>
        <name>Data_Setup0</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="45" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="666" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1abe5b02fc3a3072f44a86bd825cee0bc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8 *</type>
        <definition>u8* Standard_GetConfiguration</definition>
        <argsstring>(u16 Length)</argsstring>
        <name>Standard_GetConfiguration</name>
        <param>
          <type>u16</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="57" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="56" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a6754242a123cd820820f1ae38980df13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RESULT</type>
        <definition>RESULT Standard_SetConfiguration</definition>
        <argsstring>(void)</argsstring>
        <name>Standard_SetConfiguration</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="78" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="77" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a24487c7978aea17efc09b194fd981a24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8 *</type>
        <definition>u8* Standard_GetInterface</definition>
        <argsstring>(u16 Length)</argsstring>
        <name>Standard_GetInterface</name>
        <param>
          <type>u16</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="103" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="102" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a8568f22fe9d0ef3a63eb77aaa9d811b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RESULT</type>
        <definition>RESULT Standard_SetInterface</definition>
        <argsstring>(void)</argsstring>
        <name>Standard_SetInterface</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="124" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="123" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a9de1ad23f42e951526808a8bc071c295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8 *</type>
        <definition>u8* Standard_GetStatus</definition>
        <argsstring>(u16 Length)</argsstring>
        <name>Standard_GetStatus</name>
        <param>
          <type>u16</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="159" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="158" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a3faeb10b7fe21bb843885a7033fcebc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RESULT</type>
        <definition>RESULT Standard_ClearFeature</definition>
        <argsstring>(void)</argsstring>
        <name>Standard_ClearFeature</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="237" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="236" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a8c4afb9825a0802a6d572d63d9dad9c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RESULT</type>
        <definition>RESULT Standard_SetEndPointFeature</definition>
        <argsstring>(void)</argsstring>
        <name>Standard_SetEndPointFeature</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="326" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="325" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a36df2aeac83f64f882751f01b42bdb01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RESULT</type>
        <definition>RESULT Standard_SetDeviceFeature</definition>
        <argsstring>(void)</argsstring>
        <name>Standard_SetDeviceFeature</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="380" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="379" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a1a3affdb4d561a6c6860fb8009e6dee5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8 *</type>
        <definition>u8* Standard_GetDescriptorData</definition>
        <argsstring>(u16 Length, ONE_DESCRIPTOR *pDesc)</argsstring>
        <name>Standard_GetDescriptorData</name>
        <param>
          <type>u16</type>
          <declname>Length</declname>
        </param>
        <param>
          <type><ref refid="struct_o_n_e___d_e_s_c_r_i_p_t_o_r" kindref="compound">ONE_DESCRIPTOR</ref> *</type>
          <declname>pDesc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="406" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="405" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a1a2d214dfea0215bda0b8c1f92a5d1b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8</type>
        <definition>u8 Setup0_Process</definition>
        <argsstring>(void)</argsstring>
        <name>Setup0_Process</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="845" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="844" bodyend="879"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a9bb9df8acdaa631a25b3723fec1d6744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8</type>
        <definition>u8 In0_Process</definition>
        <argsstring>(void)</argsstring>
        <name>In0_Process</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="889" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="888" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a3344b2dcd786b1b9e2f6486c56179014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8</type>
        <definition>u8 Out0_Process</definition>
        <argsstring>(void)</argsstring>
        <name>Out0_Process</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="929" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="928" bodyend="959"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a03c5912443ee24e1415091c64087f3c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>u8</type>
        <definition>u8 Post0_Process</definition>
        <argsstring>(void)</argsstring>
        <name>Post0_Process</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="970" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="969" bodyend="980"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a3e4b68c537e8b9485d9b55ad282a63a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetDeviceAddress</definition>
        <argsstring>(u8 Val)</argsstring>
        <name>SetDeviceAddress</name>
        <param>
          <type>u8</type>
          <declname>Val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="990" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="989" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="usb__core_8c_1a5576d2ea5bf87fec71925b8e20048e74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NOP_Process</definition>
        <argsstring>(void)</argsstring>
        <name>NOP_Process</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" line="1010" bodyfile="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c" bodystart="1009" bodyend="1011"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************<sp/>(C)<sp/>COPYRIGHT<sp/>2008<sp/>STMicroelectronics<sp/>********************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>File<sp/>Name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>usb_core.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Author<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>MCD<sp/>Application<sp/>Team</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Version<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>V2.2.1</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Date<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>09/22/2008</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Standard<sp/>protocol<sp/>processing<sp/>(USB<sp/>v2.0)</highlight></codeline>
<codeline lineno="7"><highlight class="comment">********************************************************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>THE<sp/>PRESENT<sp/>FIRMWARE<sp/>WHICH<sp/>IS<sp/>FOR<sp/>GUIDANCE<sp/>ONLY<sp/>AIMS<sp/>AT<sp/>PROVIDING<sp/>CUSTOMERS</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>WITH<sp/>CODING<sp/>INFORMATION<sp/>REGARDING<sp/>THEIR<sp/>PRODUCTS<sp/>IN<sp/>ORDER<sp/>FOR<sp/>THEM<sp/>TO<sp/>SAVE<sp/>TIME.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>AS<sp/>A<sp/>RESULT,<sp/>STMICROELECTRONICS<sp/>SHALL<sp/>NOT<sp/>BE<sp/>HELD<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>INDIRECT<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>WITH<sp/>RESPECT<sp/>TO<sp/>ANY<sp/>CLAIMS<sp/>ARISING<sp/>FROM<sp/>THE</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>CONTENT<sp/>OF<sp/>SUCH<sp/>FIRMWARE<sp/>AND/OR<sp/>THE<sp/>USE<sp/>MADE<sp/>BY<sp/>CUSTOMERS<sp/>OF<sp/>THE<sp/>CODING</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>INFORMATION<sp/>CONTAINED<sp/>HEREIN<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THEIR<sp/>PRODUCTS.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Includes<sp/>------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;usb_lib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>typedef<sp/>-----------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>define<sp/>------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ValBit(VAR,Place)<sp/><sp/><sp/><sp/>(VAR<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>Place))</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SetBit(VAR,Place)<sp/><sp/><sp/><sp/>(VAR<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>Place))</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ClrBit(VAR,Place)<sp/><sp/><sp/><sp/>(VAR<sp/>&amp;=<sp/>((1<sp/>&lt;&lt;<sp/>Place)<sp/>^<sp/>255))</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Send0LengthData()<sp/>{<sp/>_SetEPTxCount(ENDP0,<sp/>0);<sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>vSetEPTxStatus(EP_TX_VALID);<sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>vSetEPRxStatus(st)<sp/>(SaveRState<sp/>=<sp/>st)</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>vSetEPTxStatus(st)<sp/>(SaveTState<sp/>=<sp/>st)</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USB_StatusIn()<sp/>Send0LengthData()</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>USB_StatusOut()<sp/>vSetEPRxStatus(EP_RX_VALID)</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>StatusInfo0<sp/>StatusInfo.bw.bb1<sp/></highlight><highlight class="comment">/*<sp/>Reverse<sp/>bb0<sp/>&amp;<sp/>bb1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>StatusInfo1<sp/>StatusInfo.bw.bb0</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>macro<sp/>-------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>variables<sp/>---------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="unionu16__u8" kindref="compound">u16_u8</ref><sp/>StatusInfo;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">USB_Bool<sp/>Data_Mul_MaxPacketSize<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>function<sp/>prototypes<sp/>-----------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataStageOut(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataStageIn(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NoData_Setup0(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Data_Setup0(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Private<sp/>functions<sp/>---------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="49"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>Standard_GetConfiguration.</highlight></codeline>
<codeline lineno="50"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Return<sp/>the<sp/>current<sp/>configuration<sp/>variable<sp/>address.</highlight></codeline>
<codeline lineno="51"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Length<sp/>-<sp/>How<sp/>many<sp/>bytes<sp/>are<sp/>needed.</highlight></codeline>
<codeline lineno="52"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="53"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Return<sp/>1<sp/>,<sp/>if<sp/>the<sp/>request<sp/>is<sp/>invalid<sp/>when<sp/>&quot;Length&quot;<sp/>is<sp/>0.</highlight></codeline>
<codeline lineno="54"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>&quot;Buffer&quot;<sp/>if<sp/>the<sp/>&quot;Length&quot;<sp/>is<sp/>not<sp/>0.</highlight></codeline>
<codeline lineno="55"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">u8<sp/>*Standard_GetConfiguration(u16<sp/>Length)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Length<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;Ctrl_Info.Usb_wLength<sp/>=</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pInformation-&gt;Current_Configuration);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>pUser_Standard_Requests-&gt;User_GetConfiguration();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(u8<sp/>*)&amp;pInformation-&gt;Current_Configuration;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="69"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>Standard_SetConfiguration.</highlight></codeline>
<codeline lineno="70"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>This<sp/>routine<sp/>is<sp/>called<sp/>to<sp/>set<sp/>the<sp/>configuration<sp/>value</highlight></codeline>
<codeline lineno="71"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Then<sp/>each<sp/>class<sp/>should<sp/>configure<sp/>device<sp/>themself.</highlight></codeline>
<codeline lineno="72"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="73"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="74"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Return<sp/>USB_SUCCESS,<sp/>if<sp/>the<sp/>request<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="75"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>USB_UNSUPPORT,<sp/>if<sp/>the<sp/>request<sp/>is<sp/>invalid.</highlight></codeline>
<codeline lineno="76"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">RESULT<sp/>Standard_SetConfiguration(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pInformation-&gt;USBwValue0<sp/>&lt;=</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Device_Table.Total_Configuration)<sp/>&amp;&amp;<sp/>(pInformation-&gt;USBwValue1<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(pInformation-&gt;USBwIndex<sp/>==<sp/>0))<sp/></highlight><highlight class="comment">/*call<sp/>Back<sp/>usb<sp/>spec<sp/>2.0*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;Current_Configuration<sp/>=<sp/>pInformation-&gt;USBwValue0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>pUser_Standard_Requests-&gt;User_SetConfiguration();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>USB_SUCCESS;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>USB_UNSUPPORT;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="95"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>Standard_GetInterface.</highlight></codeline>
<codeline lineno="96"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Return<sp/>the<sp/>Alternate<sp/>Setting<sp/>of<sp/>the<sp/>current<sp/>interface.</highlight></codeline>
<codeline lineno="97"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Length<sp/>-<sp/>How<sp/>many<sp/>bytes<sp/>are<sp/>needed.</highlight></codeline>
<codeline lineno="98"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="99"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Return<sp/>0,<sp/>if<sp/>the<sp/>request<sp/>is<sp/>invalid<sp/>when<sp/>&quot;Length&quot;<sp/>is<sp/>0.</highlight></codeline>
<codeline lineno="100"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return<sp/>&quot;Buffer&quot;<sp/>if<sp/>the<sp/>&quot;Length&quot;<sp/>is<sp/>not<sp/>0.</highlight></codeline>
<codeline lineno="101"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">u8<sp/>*Standard_GetInterface(u16<sp/>Length)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Length<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;Ctrl_Info.Usb_wLength<sp/>=</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pInformation-&gt;Current_AlternateSetting);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>pUser_Standard_Requests-&gt;User_GetInterface();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(u8<sp/>*)&amp;pInformation-&gt;Current_AlternateSetting;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="115"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>Standard_SetInterface.</highlight></codeline>
<codeline lineno="116"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>This<sp/>routine<sp/>is<sp/>called<sp/>to<sp/>set<sp/>the<sp/>interface.</highlight></codeline>
<codeline lineno="117"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Then<sp/>each<sp/>class<sp/>should<sp/>configure<sp/>the<sp/>interface<sp/>them<sp/>self.</highlight></codeline>
<codeline lineno="118"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="119"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="120"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>-<sp/>Return<sp/>USB_SUCCESS,<sp/>if<sp/>the<sp/>request<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="121"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Return<sp/>USB_UNSUPPORT,<sp/>if<sp/>the<sp/>request<sp/>is<sp/>invalid.</highlight></codeline>
<codeline lineno="122"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">RESULT<sp/>Standard_SetInterface(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>RESULT<sp/>Re;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*Test<sp/>if<sp/>the<sp/>specified<sp/>Interface<sp/>and<sp/>Alternate<sp/>Setting<sp/>are<sp/>supported<sp/>by</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>application<sp/>Firmware*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>Re<sp/>=<sp/>(*pProperty-&gt;Class_Get_Interface_Setting)(pInformation-&gt;USBwIndex0,<sp/>pInformation-&gt;USBwValue0);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pInformation-&gt;Current_Configuration<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Re<sp/>!=<sp/>USB_SUCCESS)<sp/>||<sp/>(pInformation-&gt;USBwIndex1<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(pInformation-&gt;USBwValue1<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>USB_UNSUPPORT;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Re<sp/>==<sp/>USB_SUCCESS)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pUser_Standard_Requests-&gt;User_SetInterface();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pInformation-&gt;Current_Interface<sp/>=<sp/>pInformation-&gt;USBwIndex0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pInformation-&gt;Current_AlternateSetting<sp/>=<sp/>pInformation-&gt;USBwValue0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>USB_SUCCESS;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>USB_UNSUPPORT;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="151"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>Standard_GetStatus.</highlight></codeline>
<codeline lineno="152"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Copy<sp/>the<sp/>device<sp/>request<sp/>data<sp/>to<sp/>&quot;StatusInfo<sp/>buffer&quot;.</highlight></codeline>
<codeline lineno="153"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>-<sp/>Length<sp/>-<sp/>How<sp/>many<sp/>bytes<sp/>are<sp/>needed.</highlight></codeline>
<codeline lineno="154"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="155"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Return<sp/>0,<sp/>if<sp/>the<sp/>request<sp/>is<sp/>at<sp/>end<sp/>of<sp/>data<sp/>block,</highlight></codeline>
<codeline lineno="156"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>is<sp/>invalid<sp/>when<sp/>&quot;Length&quot;<sp/>is<sp/>0.</highlight></codeline>
<codeline lineno="157"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">u8<sp/>*Standard_GetStatus(u16<sp/>Length)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Length<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;Ctrl_Info.Usb_wLength<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>StatusInfo.w<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>Status<sp/>Information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Type_Recipient<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>DEVICE_RECIPIENT))</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Get<sp/>Device<sp/>Status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>Feature<sp/>=<sp/>pInformation-&gt;Current_Feature;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remote<sp/>Wakeup<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ValBit(Feature,<sp/>5))</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetBit(StatusInfo0,<sp/>1);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Bus-powered<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ValBit(Feature,<sp/>6))</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ClrBit(StatusInfo0,<sp/>0);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Self-powered<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetBit(StatusInfo0,<sp/>0);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*Interface<sp/>Status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Type_Recipient<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>INTERFACE_RECIPIENT))</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(u8<sp/>*)&amp;StatusInfo;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*Get<sp/>EndPoint<sp/>Status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Type_Recipient<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>ENDPOINT_RECIPIENT))</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>Related_Endpoint;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>wIndex0<sp/>=<sp/>pInformation-&gt;USBwIndex0;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>Related_Endpoint<sp/>=<sp/>(wIndex0<sp/>&amp;<sp/>0x0f);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ValBit(wIndex0,<sp/>7))</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>endpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_GetTxStallStatus(Related_Endpoint))</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetBit(StatusInfo0,<sp/>0);<sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>Endpoint<sp/>stalled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OUT<sp/>endpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_GetRxStallStatus(Related_Endpoint))</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetBit(StatusInfo0,<sp/>0);<sp/></highlight><highlight class="comment">/*<sp/>OUT<sp/>Endpoint<sp/>stalled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>pUser_Standard_Requests-&gt;User_GetStatus();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(u8<sp/>*)&amp;StatusInfo;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="229"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>Standard_ClearFeature.</highlight></codeline>
<codeline lineno="230"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Clear<sp/>or<sp/>disable<sp/>a<sp/>specific<sp/>feature.</highlight></codeline>
<codeline lineno="231"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="232"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="233"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>-<sp/>Return<sp/>USB_SUCCESS,<sp/>if<sp/>the<sp/>request<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="234"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Return<sp/>USB_UNSUPPORT,<sp/>if<sp/>the<sp/>request<sp/>is<sp/>invalid.</highlight></codeline>
<codeline lineno="235"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal">RESULT<sp/>Standard_ClearFeature(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>u32<sp/><sp/><sp/><sp/><sp/>Type_Rec<sp/>=<sp/>Type_Recipient;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>u32<sp/><sp/><sp/><sp/><sp/>Status;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Type_Rec<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>DEVICE_RECIPIENT))</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="comment">/*Device<sp/>Clear<sp/>Feature*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>ClrBit(pInformation-&gt;Current_Feature,<sp/>5);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>USB_SUCCESS;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Type_Rec<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>ENDPOINT_RECIPIENT))</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="comment">/*EndPoint<sp/>Clear<sp/>Feature*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_d_e_v_i_c_e" kindref="compound">DEVICE</ref>*<sp/>pDev;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>Related_Endpoint;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>wIndex0;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>rEP;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pInformation-&gt;USBwValue<sp/>!=<sp/>ENDPOINT_STALL)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(pInformation-&gt;USBwIndex1<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>USB_UNSUPPORT;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>pDev<sp/>=<sp/>&amp;Device_Table;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>wIndex0<sp/>=<sp/>pInformation-&gt;USBwIndex0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>rEP<sp/>=<sp/>wIndex0<sp/>&amp;<sp/>~0x80;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>Related_Endpoint<sp/>=<sp/>ENDP0<sp/>+<sp/>rEP;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ValBit(pInformation-&gt;USBwIndex0,<sp/>7))</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Get<sp/>Status<sp/>of<sp/>endpoint<sp/>&amp;<sp/>stall<sp/>the<sp/>request<sp/>if<sp/>the<sp/>related_ENdpoint</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>Disabled*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>_GetEPTxStatus(Related_Endpoint);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>_GetEPRxStatus(Related_Endpoint);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((rEP<sp/>&gt;=<sp/>pDev-&gt;Total_Endpoint)<sp/>||<sp/>(Status<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(pInformation-&gt;Current_Configuration<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>USB_UNSUPPORT;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wIndex0<sp/>&amp;<sp/>0x80)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>endpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_GetTxStallStatus(Related_Endpoint<sp/>))</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearDTOG_TX(Related_Endpoint);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEPTxStatus(Related_Endpoint,<sp/>EP_TX_VALID);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OUT<sp/>endpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_GetRxStallStatus(Related_Endpoint))</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Related_Endpoint<sp/>==<sp/>ENDP0)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>After<sp/>clear<sp/>the<sp/>STALL,<sp/>enable<sp/>the<sp/>default<sp/>endpoint<sp/>receiver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEPRxCount(Related_Endpoint,<sp/>Device_Property.MaxPacketSize);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SetEPRxStatus(Related_Endpoint,<sp/>EP_RX_VALID);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClearDTOG_RX(Related_Endpoint);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_SetEPRxStatus(Related_Endpoint,<sp/>EP_RX_VALID);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>pUser_Standard_Requests-&gt;User_ClearFeature();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>USB_SUCCESS;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>USB_UNSUPPORT;</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="318"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>Standard_SetEndPointFeature</highlight></codeline>
<codeline lineno="319"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Set<sp/>or<sp/>enable<sp/>a<sp/>specific<sp/>feature<sp/>of<sp/>EndPoint</highlight></codeline>
<codeline lineno="320"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="321"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="322"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>-<sp/>Return<sp/>USB_SUCCESS,<sp/>if<sp/>the<sp/>request<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="323"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Return<sp/>USB_UNSUPPORT,<sp/>if<sp/>the<sp/>request<sp/>is<sp/>invalid.</highlight></codeline>
<codeline lineno="324"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">RESULT<sp/>Standard_SetEndPointFeature(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>u32<sp/><sp/><sp/><sp/>wIndex0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>u32<sp/><sp/><sp/><sp/>Related_Endpoint;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>u32<sp/><sp/><sp/><sp/>rEP;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>u32<sp/><sp/><sp/>Status;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>wIndex0<sp/>=<sp/>pInformation-&gt;USBwIndex0;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>rEP<sp/>=<sp/>wIndex0<sp/>&amp;<sp/>~0x80;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>Related_Endpoint<sp/>=<sp/>ENDP0<sp/>+<sp/>rEP;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ValBit(pInformation-&gt;USBwIndex0,<sp/>7))</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>Status<sp/>of<sp/>endpoint<sp/>&amp;<sp/>stall<sp/>the<sp/>request<sp/>if<sp/>the<sp/>related_ENdpoint</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/>is<sp/>Disabled*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>_GetEPTxStatus(Related_Endpoint);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>_GetEPRxStatus(Related_Endpoint);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Related_Endpoint<sp/>&gt;=<sp/>Device_Table.Total_Endpoint</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>pInformation-&gt;USBwValue<sp/>!=<sp/>0<sp/>||<sp/>Status<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>pInformation-&gt;Current_Configuration<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>USB_UNSUPPORT;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wIndex0<sp/>&amp;<sp/>0x80)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IN<sp/>endpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_SetEPTxStatus(Related_Endpoint,<sp/>EP_TX_STALL);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>OUT<sp/>endpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_SetEPRxStatus(Related_Endpoint,<sp/>EP_RX_STALL);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>pUser_Standard_Requests-&gt;User_SetEndPointFeature();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>USB_SUCCESS;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="372"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>Standard_SetDeviceFeature.</highlight></codeline>
<codeline lineno="373"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Set<sp/>or<sp/>enable<sp/>a<sp/>specific<sp/>feature<sp/>of<sp/>Device.</highlight></codeline>
<codeline lineno="374"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="375"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="376"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>-<sp/>Return<sp/>USB_SUCCESS,<sp/>if<sp/>the<sp/>request<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="377"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Return<sp/>USB_UNSUPPORT,<sp/>if<sp/>the<sp/>request<sp/>is<sp/>invalid.</highlight></codeline>
<codeline lineno="378"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">RESULT<sp/>Standard_SetDeviceFeature(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>SetBit(pInformation-&gt;Current_Feature,<sp/>5);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>pUser_Standard_Requests-&gt;User_SetDeviceFeature();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>USB_SUCCESS;</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="387"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>Standard_GetDescriptorData.</highlight></codeline>
<codeline lineno="388"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Standard_GetDescriptorData<sp/>is<sp/>used<sp/>for<sp/>descriptors<sp/>transfer.</highlight></codeline>
<codeline lineno="389"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>This<sp/>routine<sp/>is<sp/>used<sp/>for<sp/>the<sp/>descriptors<sp/>resident<sp/>in<sp/>Flash</highlight></codeline>
<codeline lineno="390"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>RAM</highlight></codeline>
<codeline lineno="391"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDesc<sp/>can<sp/>be<sp/>in<sp/>either<sp/>Flash<sp/>or<sp/>RAM</highlight></codeline>
<codeline lineno="392"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>purpose<sp/>of<sp/>this<sp/>routine<sp/>is<sp/>to<sp/>have<sp/>a<sp/>versatile<sp/>way<sp/>to</highlight></codeline>
<codeline lineno="393"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>descriptors<sp/>request.<sp/>It<sp/>allows<sp/>user<sp/>to<sp/>generate</highlight></codeline>
<codeline lineno="394"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>certain<sp/>descriptors<sp/>with<sp/>software<sp/>or<sp/>read<sp/>descriptors<sp/>from</highlight></codeline>
<codeline lineno="395"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>external<sp/>storage<sp/>part<sp/>by<sp/>part.</highlight></codeline>
<codeline lineno="396"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>-<sp/>Length<sp/>-<sp/>Length<sp/>of<sp/>the<sp/>data<sp/>in<sp/>this<sp/>transfer.</highlight></codeline>
<codeline lineno="397"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>pDesc<sp/>-<sp/>A<sp/>pointer<sp/>points<sp/>to<sp/>descriptor<sp/>struct.</highlight></codeline>
<codeline lineno="398"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>structure<sp/>gives<sp/>the<sp/>initial<sp/>address<sp/>of<sp/>the<sp/>descriptor<sp/>and</highlight></codeline>
<codeline lineno="399"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>its<sp/>original<sp/>size.</highlight></codeline>
<codeline lineno="400"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="401"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Address<sp/>of<sp/>a<sp/>part<sp/>of<sp/>the<sp/>descriptor<sp/>pointed<sp/>by<sp/>the<sp/>Usb_</highlight></codeline>
<codeline lineno="402"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wOffset<sp/>The<sp/>buffer<sp/>pointed<sp/>by<sp/>this<sp/>address<sp/>contains<sp/>at<sp/>least</highlight></codeline>
<codeline lineno="403"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Length<sp/>bytes.</highlight></codeline>
<codeline lineno="404"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal">u8<sp/>*Standard_GetDescriptorData(u16<sp/>Length,<sp/><ref refid="struct_o_n_e___d_e_s_c_r_i_p_t_o_r" kindref="compound">ONE_DESCRIPTOR</ref><sp/>*pDesc)</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>u32<sp/><sp/>wOffset;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>wOffset<sp/>=<sp/>pInformation-&gt;Ctrl_Info.Usb_wOffset;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Length<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;Ctrl_Info.Usb_wLength<sp/>=<sp/>pDesc-&gt;Descriptor_Size<sp/>-<sp/>wOffset;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pDesc-&gt;Descriptor<sp/>+<sp/>wOffset;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="420"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>DataStageOut.</highlight></codeline>
<codeline lineno="421"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Data<sp/>stage<sp/>of<sp/>a<sp/>Control<sp/>Write<sp/>Transfer.</highlight></codeline>
<codeline lineno="422"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="423"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="424"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="425"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataStageOut(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><ref refid="struct_e_n_d_p_o_i_n_t___i_n_f_o" kindref="compound">ENDPOINT_INFO</ref><sp/>*pEPinfo<sp/>=<sp/>&amp;pInformation-&gt;Ctrl_Info;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>u32<sp/>save_rLength;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>save_rLength<sp/>=<sp/>pEPinfo-&gt;Usb_rLength;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEPinfo-&gt;CopyData<sp/>&amp;&amp;<sp/>save_rLength)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>u8<sp/>*Buffer;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>u32<sp/>Length;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>Length<sp/>=<sp/>pEPinfo-&gt;PacketSize;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Length<sp/>&gt;<sp/>save_rLength)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Length<sp/>=<sp/>save_rLength;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer<sp/>=<sp/>(*pEPinfo-&gt;CopyData)(Length);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>pEPinfo-&gt;Usb_rLength<sp/>-=<sp/>Length;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>pEPinfo-&gt;Usb_rOffset<sp/>+=<sp/>Length;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>PMAToUserBufferCopy(Buffer,<sp/>GetEPRxAddr(ENDP0),<sp/>Length);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEPinfo-&gt;Usb_rLength<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>vSetEPRxStatus(EP_RX_VALID);</highlight><highlight class="comment">/*<sp/>re-enable<sp/>for<sp/>next<sp/>data<sp/>reception<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>SetEPTxCount(ENDP0,<sp/>0);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>vSetEPTxStatus(EP_TX_VALID);</highlight><highlight class="comment">/*<sp/>Expect<sp/>the<sp/>host<sp/>to<sp/>abort<sp/>the<sp/>data<sp/>OUT<sp/>stage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>next<sp/>State*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEPinfo-&gt;Usb_rLength<sp/>&gt;=<sp/>pEPinfo-&gt;PacketSize)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;ControlState<sp/>=<sp/>OUT_DATA;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEPinfo-&gt;Usb_rLength<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pInformation-&gt;ControlState<sp/>=<sp/>LAST_OUT_DATA;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pEPinfo-&gt;Usb_rLength<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pInformation-&gt;ControlState<sp/>=<sp/>WAIT_STATUS_IN;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>USB_StatusIn();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="477"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>DataStageIn.</highlight></codeline>
<codeline lineno="478"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Data<sp/>stage<sp/>of<sp/>a<sp/>Control<sp/>Read<sp/>Transfer.</highlight></codeline>
<codeline lineno="479"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="480"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="481"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="482"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataStageIn(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><ref refid="struct_e_n_d_p_o_i_n_t___i_n_f_o" kindref="compound">ENDPOINT_INFO</ref><sp/>*pEPinfo<sp/>=<sp/>&amp;pInformation-&gt;Ctrl_Info;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>u32<sp/>save_wLength<sp/>=<sp/>pEPinfo-&gt;Usb_wLength;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>u32<sp/>ControlState<sp/>=<sp/>pInformation-&gt;ControlState;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>u8<sp/>*DataBuffer;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>u32<sp/>Length;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((save_wLength<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(ControlState<sp/>==<sp/>LAST_IN_DATA))</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Data_Mul_MaxPacketSize<sp/>==<sp/>TRUE)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>more<sp/>data<sp/>to<sp/>send<sp/>and<sp/>empty<sp/>packet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Send0LengthData();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ControlState<sp/>=<sp/>LAST_IN_DATA;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Data_Mul_MaxPacketSize<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>more<sp/>data<sp/>to<sp/>send<sp/>so<sp/>STALL<sp/>the<sp/>TX<sp/>Status*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ControlState<sp/>=<sp/>WAIT_STATUS_OUT;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vSetEPTxStatus(EP_TX_STALL);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>Expect_Status_Out;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>Length<sp/>=<sp/>pEPinfo-&gt;PacketSize;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>ControlState<sp/>=<sp/>(save_wLength<sp/>&lt;=<sp/>Length)<sp/>?<sp/>LAST_IN_DATA<sp/>:<sp/>IN_DATA;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Length<sp/>&gt;<sp/>save_wLength)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>Length<sp/>=<sp/>save_wLength;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>DataBuffer<sp/>=<sp/>(*pEPinfo-&gt;CopyData)(Length);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>UserToPMABufferCopy(DataBuffer,<sp/>GetEPTxAddr(ENDP0),<sp/>Length);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>SetEPTxCount(ENDP0,<sp/>Length);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>pEPinfo-&gt;Usb_wLength<sp/>-=<sp/>Length;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>pEPinfo-&gt;Usb_wOffset<sp/>+=<sp/>Length;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>vSetEPTxStatus(EP_TX_VALID);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>USB_StatusOut();</highlight><highlight class="comment">/*<sp/>Expect<sp/>the<sp/>host<sp/>to<sp/>abort<sp/>the<sp/>data<sp/>IN<sp/>stage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal">Expect_Status_Out:</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>pInformation-&gt;ControlState<sp/>=<sp/>ControlState;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="536"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>NoData_Setup0.</highlight></codeline>
<codeline lineno="537"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Proceed<sp/>the<sp/>processing<sp/>of<sp/>setup<sp/>request<sp/>without<sp/>data<sp/>stage.</highlight></codeline>
<codeline lineno="538"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="539"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="540"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="541"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NoData_Setup0(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>RESULT<sp/>Result<sp/>=<sp/>USB_UNSUPPORT;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>u32<sp/>RequestNo<sp/>=<sp/>pInformation-&gt;USBbRequest;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>u32<sp/>ControlState;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Type_Recipient<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>DEVICE_RECIPIENT))</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Device<sp/>Request*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SET_CONFIGURATION*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RequestNo<sp/>==<sp/>SET_CONFIGURATION)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>Standard_SetConfiguration();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*SET<sp/>ADDRESS*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RequestNo<sp/>==<sp/>SET_ADDRESS)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pInformation-&gt;USBwValue0<sp/>&gt;<sp/>127)<sp/>||<sp/>(pInformation-&gt;USBwValue1<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(pInformation-&gt;USBwIndex<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(pInformation-&gt;Current_Configuration<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Device<sp/>Address<sp/>should<sp/>be<sp/>127<sp/>or<sp/>less*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ControlState<sp/>=<sp/>STALLED;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>exit_NoData_Setup0;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>USB_SUCCESS;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*SET<sp/>FEATURE<sp/>for<sp/>Device*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RequestNo<sp/>==<sp/>SET_FEATURE)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pInformation-&gt;USBwValue0<sp/>==<sp/>DEVICE_REMOTE_WAKEUP)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(pInformation-&gt;USBwIndex<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(ValBit(pInformation-&gt;Current_Feature,<sp/>5)))</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>Standard_SetDeviceFeature();</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>USB_UNSUPPORT;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Clear<sp/>FEATURE<sp/>for<sp/>Device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RequestNo<sp/>==<sp/>CLEAR_FEATURE)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pInformation-&gt;USBwValue0<sp/>==<sp/>DEVICE_REMOTE_WAKEUP</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>pInformation-&gt;USBwIndex<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>ValBit(pInformation-&gt;Current_Feature,<sp/>5))</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>Standard_ClearFeature();</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>USB_UNSUPPORT;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Interface<sp/>Request*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Type_Recipient<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>INTERFACE_RECIPIENT))</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*SET<sp/>INTERFACE*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RequestNo<sp/>==<sp/>SET_INTERFACE)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>Standard_SetInterface();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>EndPoint<sp/>Request*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Type_Recipient<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>ENDPOINT_RECIPIENT))</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*CLEAR<sp/>FEATURE<sp/>for<sp/>EndPoint*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RequestNo<sp/>==<sp/>CLEAR_FEATURE)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>Standard_ClearFeature();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SET<sp/>FEATURE<sp/>for<sp/>EndPoint*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RequestNo<sp/>==<sp/>SET_FEATURE)</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>Standard_SetEndPointFeature();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>USB_UNSUPPORT;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Result<sp/>!=<sp/>USB_SUCCESS)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>(*pProperty-&gt;Class_NoData_Setup)(RequestNo);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Result<sp/>==<sp/>USB_NOT_READY)</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ControlState<sp/>=<sp/>PAUSE;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>exit_NoData_Setup0;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Result<sp/>!=<sp/>USB_SUCCESS)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>ControlState<sp/>=<sp/>STALLED;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>exit_NoData_Setup0;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>ControlState<sp/>=<sp/>WAIT_STATUS_IN;</highlight><highlight class="comment">/*<sp/>After<sp/>no<sp/>data<sp/>stage<sp/>SETUP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/>USB_StatusIn();</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal">exit_NoData_Setup0:</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>pInformation-&gt;ControlState<sp/>=<sp/>ControlState;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="660"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>Data_Setup0.</highlight></codeline>
<codeline lineno="661"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Proceed<sp/>the<sp/>processing<sp/>of<sp/>setup<sp/>request<sp/>with<sp/>data<sp/>stage.</highlight></codeline>
<codeline lineno="662"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="663"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="664"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="665"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Data_Setup0(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="667"><highlight class="normal">{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>u8<sp/>*(*CopyRoutine)(u16);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>RESULT<sp/>Result;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/>u32<sp/>Request_No<sp/>=<sp/>pInformation-&gt;USBbRequest;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>u32<sp/>Related_Endpoint,<sp/>Reserved;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>u32<sp/>wOffset,<sp/>Status;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>CopyRoutine<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>wOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Request_No<sp/>==<sp/>GET_DESCRIPTOR)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Type_Recipient<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>DEVICE_RECIPIENT))</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u8<sp/>wValue1<sp/>=<sp/>pInformation-&gt;USBwValue1;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wValue1<sp/>==<sp/>DEVICE_DESCRIPTOR)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CopyRoutine<sp/>=<sp/>pProperty-&gt;GetDeviceDescriptor;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wValue1<sp/>==<sp/>CONFIG_DESCRIPTOR)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CopyRoutine<sp/>=<sp/>pProperty-&gt;GetConfigDescriptor;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wValue1<sp/>==<sp/>STRING_DESCRIPTOR)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CopyRoutine<sp/>=<sp/>pProperty-&gt;GetStringDescriptor;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>GET_DESCRIPTOR<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*GET<sp/>STATUS*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Request_No<sp/>==<sp/>GET_STATUS)<sp/>&amp;&amp;<sp/>(pInformation-&gt;USBwValue<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(pInformation-&gt;USBwLength<sp/>==<sp/>0x0002)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(pInformation-&gt;USBwIndex1<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GET<sp/>STATUS<sp/>for<sp/>Device*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Type_Recipient<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>DEVICE_RECIPIENT))</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(pInformation-&gt;USBwIndex<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CopyRoutine<sp/>=<sp/>Standard_GetStatus;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GET<sp/>STATUS<sp/>for<sp/>Interface*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Type_Recipient<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>INTERFACE_RECIPIENT))</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((*pProperty-&gt;Class_Get_Interface_Setting)(pInformation-&gt;USBwIndex0,<sp/>0)<sp/>==<sp/>USB_SUCCESS)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(pInformation-&gt;Current_Configuration<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CopyRoutine<sp/>=<sp/>Standard_GetStatus;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GET<sp/>STATUS<sp/>for<sp/>EndPoint*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Type_Recipient<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>ENDPOINT_RECIPIENT))</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Related_Endpoint<sp/>=<sp/>(pInformation-&gt;USBwIndex0<sp/>&amp;<sp/>0x0f);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Reserved<sp/>=<sp/>pInformation-&gt;USBwIndex0<sp/>&amp;<sp/>0x70;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ValBit(pInformation-&gt;USBwIndex0,<sp/>7))</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Get<sp/>Status<sp/>of<sp/>endpoint<sp/>&amp;<sp/>stall<sp/>the<sp/>request<sp/>if<sp/>the<sp/>related_ENdpoint</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>Disabled*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>_GetEPTxStatus(Related_Endpoint);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>_GetEPRxStatus(Related_Endpoint);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Related_Endpoint<sp/>&lt;<sp/>Device_Table.Total_Endpoint)<sp/>&amp;&amp;<sp/>(Reserved<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(Status<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CopyRoutine<sp/>=<sp/>Standard_GetStatus;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*GET<sp/>CONFIGURATION*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Request_No<sp/>==<sp/>GET_CONFIGURATION)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Type_Recipient<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>DEVICE_RECIPIENT))</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CopyRoutine<sp/>=<sp/>Standard_GetConfiguration;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*GET<sp/>INTERFACE*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Request_No<sp/>==<sp/>GET_INTERFACE)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Type_Recipient<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>INTERFACE_RECIPIENT))</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(pInformation-&gt;Current_Configuration<sp/>!=<sp/>0)<sp/>&amp;&amp;<sp/>(pInformation-&gt;USBwValue<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(pInformation-&gt;USBwIndex1<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(pInformation-&gt;USBwLength<sp/>==<sp/>0x0001)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((*pProperty-&gt;Class_Get_Interface_Setting)(pInformation-&gt;USBwIndex0,<sp/>0)<sp/>==<sp/>USB_SUCCESS))</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CopyRoutine<sp/>=<sp/>Standard_GetInterface;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CopyRoutine)</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;Ctrl_Info.Usb_wOffset<sp/>=<sp/>wOffset;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;Ctrl_Info.CopyData<sp/>=<sp/>CopyRoutine;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sb<sp/>in<sp/>the<sp/>original<sp/>the<sp/>cast<sp/>to<sp/>word<sp/>was<sp/>directly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>the<sp/>cast<sp/>is<sp/>made<sp/>step<sp/>by<sp/>step<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>(*CopyRoutine)(0);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>USB_SUCCESS;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>Result<sp/>=<sp/>(*pProperty-&gt;Class_Data_Setup)(pInformation-&gt;USBbRequest);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Result<sp/>==<sp/>USB_NOT_READY)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pInformation-&gt;ControlState<sp/>=<sp/>PAUSE;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pInformation-&gt;Ctrl_Info.Usb_wLength<sp/>==<sp/>0xFFFF)</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Data<sp/>is<sp/>not<sp/>ready,<sp/>wait<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;ControlState<sp/>=<sp/>PAUSE;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Result<sp/>==<sp/>USB_UNSUPPORT)<sp/>||<sp/>(pInformation-&gt;Ctrl_Info.Usb_wLength<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unsupported<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;ControlState<sp/>=<sp/>STALLED;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ValBit(pInformation-&gt;USBbmRequestType,<sp/>7))</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Device<sp/>==&gt;<sp/>Host<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>vu32<sp/>wLength<sp/>=<sp/>pInformation-&gt;USBwLength;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restrict<sp/>the<sp/>data<sp/>length<sp/>to<sp/>be<sp/>the<sp/>one<sp/>host<sp/>asks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pInformation-&gt;Ctrl_Info.Usb_wLength<sp/>&gt;<sp/>wLength)</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pInformation-&gt;Ctrl_Info.Usb_wLength<sp/>=<sp/>wLength;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pInformation-&gt;Ctrl_Info.Usb_wLength<sp/>&lt;<sp/>pInformation-&gt;USBwLength)</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pInformation-&gt;Ctrl_Info.Usb_wLength<sp/>&lt;<sp/>pProperty-&gt;MaxPacketSize)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data_Mul_MaxPacketSize<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pInformation-&gt;Ctrl_Info.Usb_wLength<sp/>%<sp/>pProperty-&gt;MaxPacketSize)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Data_Mul_MaxPacketSize<sp/>=<sp/>TRUE;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;Ctrl_Info.PacketSize<sp/>=<sp/>pProperty-&gt;MaxPacketSize;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>DataStageIn();</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;ControlState<sp/>=<sp/>OUT_DATA;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>vSetEPRxStatus(EP_RX_VALID);<sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>for<sp/>next<sp/>data<sp/>reception<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="835"><highlight class="normal">}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="838"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>Setup0_Process</highlight></codeline>
<codeline lineno="839"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Get<sp/>the<sp/>device<sp/>request<sp/>data<sp/>and<sp/>dispatch<sp/>to<sp/>individual<sp/>process.</highlight></codeline>
<codeline lineno="840"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="841"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="842"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Post0_Process.</highlight></codeline>
<codeline lineno="843"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal">u8<sp/>Setup0_Process(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="845"><highlight class="normal">{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>u8*<sp/>b;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>u16*<sp/>w;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/>}<sp/>pBuf;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>pBuf.b<sp/>=<sp/>PMAAddr<sp/>+<sp/>(u8<sp/>*)(_GetEPRxAddr(ENDP0)<sp/>*<sp/>2);<sp/></highlight><highlight class="comment">/*<sp/>*2<sp/>for<sp/>32<sp/>bits<sp/>addr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pInformation-&gt;ControlState<sp/>!=<sp/>PAUSE)</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;USBbmRequestType<sp/>=<sp/>*pBuf.b++;<sp/></highlight><highlight class="comment">/*<sp/>bmRequestType<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;USBbRequest<sp/>=<sp/>*pBuf.b++;<sp/></highlight><highlight class="comment">/*<sp/>bRequest<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>pBuf.w++;<sp/><sp/></highlight><highlight class="comment">/*<sp/>word<sp/>not<sp/>accessed<sp/>because<sp/>of<sp/>32<sp/>bits<sp/>addressing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;USBwValue<sp/>=<sp/>ByteSwap(*pBuf.w++);<sp/></highlight><highlight class="comment">/*<sp/>wValue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>pBuf.w++;<sp/><sp/></highlight><highlight class="comment">/*<sp/>word<sp/>not<sp/>accessed<sp/>because<sp/>of<sp/>32<sp/>bits<sp/>addressing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;USBwIndex<sp/><sp/>=<sp/>ByteSwap(*pBuf.w++);<sp/></highlight><highlight class="comment">/*<sp/>wIndex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>pBuf.w++;<sp/><sp/></highlight><highlight class="comment">/*<sp/>word<sp/>not<sp/>accessed<sp/>because<sp/>of<sp/>32<sp/>bits<sp/>addressing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>pInformation-&gt;USBwLength<sp/>=<sp/>*pBuf.w;<sp/></highlight><highlight class="comment">/*<sp/>wLength<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/>pInformation-&gt;ControlState<sp/>=<sp/>SETTING_UP;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pInformation-&gt;USBwLength<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Setup<sp/>with<sp/>no<sp/>data<sp/>stage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>NoData_Setup0();</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Setup<sp/>with<sp/>data<sp/>stage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>Data_Setup0();</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Post0_Process();</highlight></codeline>
<codeline lineno="879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="882"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>In0_Process</highlight></codeline>
<codeline lineno="883"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Process<sp/>the<sp/>IN<sp/>token<sp/>on<sp/>all<sp/>default<sp/>endpoint.</highlight></codeline>
<codeline lineno="884"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="885"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="886"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Post0_Process.</highlight></codeline>
<codeline lineno="887"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal">u8<sp/>In0_Process(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="889"><highlight class="normal">{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>u32<sp/>ControlState<sp/>=<sp/>pInformation-&gt;ControlState;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ControlState<sp/>==<sp/>IN_DATA)<sp/>||<sp/>(ControlState<sp/>==<sp/>LAST_IN_DATA))</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>DataStageIn();</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ControlState<sp/>may<sp/>be<sp/>changed<sp/>outside<sp/>the<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>ControlState<sp/>=<sp/>pInformation-&gt;ControlState;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ControlState<sp/>==<sp/>WAIT_STATUS_IN)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pInformation-&gt;USBbRequest<sp/>==<sp/>SET_ADDRESS)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Type_Recipient<sp/>==<sp/>(STANDARD_REQUEST<sp/>|<sp/>DEVICE_RECIPIENT)))</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetDeviceAddress(pInformation-&gt;USBwValue0);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pUser_Standard_Requests-&gt;User_SetDeviceAddress();</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>(*pProperty-&gt;Process_Status_IN)();</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>ControlState<sp/>=<sp/>STALLED;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>ControlState<sp/>=<sp/>STALLED;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>pInformation-&gt;ControlState<sp/>=<sp/>ControlState;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Post0_Process();</highlight></codeline>
<codeline lineno="919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="922"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>Out0_Process</highlight></codeline>
<codeline lineno="923"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Process<sp/>the<sp/>OUT<sp/>token<sp/>on<sp/>all<sp/>default<sp/>endpoint.</highlight></codeline>
<codeline lineno="924"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="925"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="926"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Post0_Process.</highlight></codeline>
<codeline lineno="927"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal">u8<sp/>Out0_Process(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/>u32<sp/>ControlState<sp/>=<sp/>pInformation-&gt;ControlState;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ControlState<sp/>==<sp/>OUT_DATA)<sp/>||<sp/>(ControlState<sp/>==<sp/>LAST_OUT_DATA))</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>DataStageOut();</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>ControlState<sp/>=<sp/>pInformation-&gt;ControlState;<sp/></highlight><highlight class="comment">/*<sp/>may<sp/>be<sp/>changed<sp/>outside<sp/>the<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ControlState<sp/>==<sp/>WAIT_STATUS_OUT)</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>(*pProperty-&gt;Process_Status_OUT)();</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>ControlState<sp/>=<sp/>STALLED;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ControlState<sp/>==<sp/>IN_DATA)<sp/>||<sp/>(ControlState<sp/>==<sp/>LAST_IN_DATA))</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>host<sp/>aborts<sp/>the<sp/>transfer<sp/>before<sp/>finish<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>ControlState<sp/>=<sp/>STALLED;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unexpect<sp/>state,<sp/>STALL<sp/>the<sp/>endpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>ControlState<sp/>=<sp/>STALLED;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>pInformation-&gt;ControlState<sp/>=<sp/>ControlState;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Post0_Process();</highlight></codeline>
<codeline lineno="959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="962"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>Post0_Process</highlight></codeline>
<codeline lineno="963"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Stall<sp/>the<sp/>Endpoint<sp/>0<sp/>in<sp/>case<sp/>of<sp/>error.</highlight></codeline>
<codeline lineno="964"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="965"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="966"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>-<sp/>0<sp/>if<sp/>the<sp/>control<sp/>State<sp/>is<sp/>in<sp/>PAUSE</highlight></codeline>
<codeline lineno="967"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>1<sp/>if<sp/>not.</highlight></codeline>
<codeline lineno="968"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal">u8<sp/>Post0_Process(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="970"><highlight class="normal">{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>SetEPRxCount(ENDP0,<sp/>Device_Property.MaxPacketSize);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pInformation-&gt;ControlState<sp/>==<sp/>STALLED)</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>vSetEPRxStatus(EP_RX_STALL);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>vSetEPTxStatus(EP_TX_STALL);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pInformation-&gt;ControlState<sp/>==<sp/>PAUSE);</highlight></codeline>
<codeline lineno="980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="983"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>SetDeviceAddress.</highlight></codeline>
<codeline lineno="984"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>Set<sp/>the<sp/>device<sp/>and<sp/>all<sp/>the<sp/>used<sp/>Endpoints<sp/>addresses.</highlight></codeline>
<codeline lineno="985"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>-<sp/>Val:<sp/>device<sp/>adress.</highlight></codeline>
<codeline lineno="986"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="987"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="988"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetDeviceAddress(u8<sp/>Val)</highlight></codeline>
<codeline lineno="990"><highlight class="normal">{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/>u32<sp/>i;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/>u32<sp/>nEP<sp/>=<sp/>Device_Table.Total_Endpoint;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>address<sp/>in<sp/>every<sp/>used<sp/>endpoint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nEP;<sp/>i++)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>_SetEPAddress((u8)i,<sp/>(u8)i);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>_SetDADDR(Val<sp/>|<sp/>DADDR_EF);<sp/></highlight><highlight class="comment">/*<sp/>set<sp/>device<sp/>address<sp/>and<sp/>enable<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="1003"><highlight class="comment">*<sp/>Function<sp/>Name<sp/><sp/>:<sp/>NOP_Process</highlight></codeline>
<codeline lineno="1004"><highlight class="comment">*<sp/>Description<sp/><sp/><sp/><sp/>:<sp/>No<sp/>operation<sp/>function.</highlight></codeline>
<codeline lineno="1005"><highlight class="comment">*<sp/>Input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="1006"><highlight class="comment">*<sp/>Output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="1007"><highlight class="comment">*<sp/>Return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>None.</highlight></codeline>
<codeline lineno="1008"><highlight class="comment">*******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NOP_Process(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1010"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="comment">/*******************<sp/>(C)<sp/>COPYRIGHT<sp/>2008<sp/>STMicroelectronics<sp/>*****END<sp/>OF<sp/>FILE****/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mbolivar/leaf/libmaple/libmaple/usb/usb_lib/usb_core.c"/>
  </compounddef>
</doxygen>
